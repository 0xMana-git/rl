Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 69, 70, 72, 74, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 103, 104, 106, 107, 108, 109, 110, 113, 116, 121, 123, 124, 126, 127, 129, 132, 134, 135, 138, 144, 145, 149, 150, 151, 152, 154, 162, 163, 164, 165, 166, 167, 169, 172, 173, 175, 176, 186, 187, 189, 190, 191, 192, 199, 201, 203, 205, 206, 207, 211, 212, 213, 224, 225, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 249, 250, 254, 257, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 307, 309, 312, 316, 321, 322, 326, 327, 330, 337, 338, 339, 340, 343, 344, 345, 349, 350, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 367, 368], "open": [0, 5, 7, 11, 58, 350, 361, 362, 367], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368], "reinforc": [0, 3, 9, 55, 101, 102, 127, 189, 190, 191, 192, 196, 239, 244, 258, 259, 263, 264, 265, 267, 271, 272, 278, 279, 280, 342, 348, 350, 353, 354, 359, 363, 366, 367], "learn": [0, 3, 7, 8, 9, 17, 31, 55, 56, 57, 59, 60, 101, 102, 106, 127, 189, 190, 191, 192, 196, 208, 214, 239, 244, 258, 259, 263, 264, 265, 267, 271, 272, 277, 278, 279, 280, 342, 344, 345, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 368], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 16, 52, 103, 162, 214, 232, 245, 253, 258, 260, 273, 274, 276, 278, 317, 341, 343, 344, 345, 346, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 368], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 17, 18, 19, 37, 43, 85, 86, 95, 104, 179, 342, 343, 344, 347, 349, 350, 351, 353, 354, 355, 356, 361, 362, 363, 368], "pytorch": [0, 1, 2, 3, 56, 114, 115, 165, 176, 199, 203, 213, 214, 326, 341, 343, 346, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 31, 43, 55, 87, 91, 95, 100, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 120, 173, 175, 203, 316, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 90, 91, 95, 96, 97, 100, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 120, 121, 123, 124, 126, 127, 130, 131, 132, 134, 135, 136, 144, 145, 149, 150, 154, 157, 161, 162, 163, 166, 167, 169, 171, 173, 175, 176, 184, 185, 186, 187, 189, 199, 201, 202, 203, 205, 207, 208, 211, 212, 214, 215, 228, 230, 232, 236, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 307, 309, 316, 322, 338, 339, 340, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "directli": [0, 3, 4, 8, 22, 52, 69, 83, 84, 87, 90, 91, 103, 107, 113, 154, 172, 274, 340, 344, 350, 351, 353, 361, 362, 363, 365], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 121, 123, 124, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 142, 143, 145, 147, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 180, 183, 184, 185, 186, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 218, 219, 220, 221, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 272, 273, 274, 276, 277, 278, 279, 281, 283, 287, 288, 289, 290, 291, 292, 295, 307, 308, 309, 317, 323, 326, 329, 330, 334, 336, 337, 340, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368], "pypi": [0, 2, 367], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 69, 74, 87, 91, 94, 101, 102, 104, 107, 108, 109, 110, 113, 114, 115, 131, 149, 163, 165, 166, 167, 169, 171, 174, 175, 186, 187, 199, 202, 203, 206, 212, 213, 220, 228, 229, 233, 235, 248, 249, 309, 316, 323, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 365, 368], "more": [0, 1, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 78, 87, 91, 94, 95, 101, 102, 107, 108, 109, 110, 113, 114, 115, 165, 169, 174, 175, 196, 203, 206, 213, 215, 232, 236, 238, 239, 248, 253, 258, 267, 274, 276, 289, 294, 302, 316, 321, 343, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 368], "about": [0, 3, 5, 7, 9, 17, 18, 19, 43, 56, 59, 60, 345, 349, 350, 351, 353, 354, 355, 356, 357, 358, 361, 362, 363, 365, 367, 368], "instruct": [0, 6, 7, 10, 21, 54, 134, 136, 349, 350, 351, 352, 361, 362, 365], "dedic": [0, 1, 2, 3, 17, 18, 19, 20, 107, 113, 233, 234, 235, 344, 349, 353, 355, 356, 358, 360, 362], "section": [0, 2, 3, 4, 199, 203, 350, 353, 358, 361, 362], "below": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 38, 61, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 186, 187, 199, 202, 203, 206, 212, 228, 248, 323, 349, 350, 351, 352, 353, 361, 363], "pip": [0, 10, 57, 353, 354, 355, 356, 357, 358, 362, 367, 368], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 72, 74, 75, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 103, 104, 105, 107, 108, 109, 110, 113, 124, 126, 127, 128, 129, 130, 132, 135, 139, 144, 145, 147, 149, 150, 153, 154, 157, 158, 162, 163, 164, 167, 169, 171, 172, 173, 175, 184, 186, 187, 193, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 230, 232, 236, 239, 240, 241, 243, 244, 245, 246, 247, 252, 258, 259, 260, 261, 262, 264, 266, 267, 268, 272, 273, 274, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 313, 317, 323, 330, 336, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 363, 364, 365, 367, 368], "python": [0, 3, 5, 6, 7, 10, 20, 105, 120, 199, 200, 201, 203, 204, 205, 209, 210, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 74, 75, 78, 80, 87, 91, 107, 113, 123, 124, 127, 128, 139, 145, 149, 150, 165, 167, 169, 187, 199, 201, 203, 205, 206, 211, 212, 213, 217, 232, 237, 238, 239, 245, 246, 248, 249, 260, 269, 273, 274, 276, 308, 309, 325, 344, 348, 349, 350, 351, 352, 353, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "low": [0, 24, 87, 91, 107, 113, 130, 134, 180, 239, 245, 252, 349, 350, 351, 361, 362, 363, 367, 368], "high": [0, 9, 24, 34, 36, 39, 41, 87, 91, 107, 113, 130, 134, 144, 180, 239, 245, 252, 289, 294, 302, 349, 350, 351, 361, 362, 363, 365, 367, 368], "level": [0, 2, 3, 4, 21, 25, 27, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 127, 161, 273, 349, 350, 356, 367], "abstract": [0, 3, 8, 23, 24, 25, 26, 27, 28, 29, 32, 44, 46, 47, 52, 53, 57, 81, 87, 146, 207, 293, 318, 327, 346, 351, 361, 363, 367], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 27, 28, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 69, 72, 73, 75, 76, 77, 78, 80, 87, 88, 90, 91, 92, 100, 101, 102, 103, 106, 107, 108, 109, 110, 113, 114, 115, 122, 123, 124, 126, 127, 130, 131, 132, 134, 135, 136, 138, 139, 143, 144, 147, 149, 154, 157, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 180, 183, 184, 185, 192, 194, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 214, 218, 220, 223, 237, 238, 240, 243, 244, 245, 246, 248, 249, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 284, 287, 288, 289, 290, 291, 292, 293, 307, 316, 323, 336, 340, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "intend": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 45, 126, 134, 230, 274, 344, 367], "effici": [0, 1, 2, 4, 8, 199, 214, 344, 349, 350, 351, 352, 355, 356, 358, 360, 361, 362, 364, 365, 367], "modular": [0, 52, 251, 365, 367], "document": [0, 2, 5, 7, 17, 18, 20, 31, 58, 87, 91, 107, 113, 167, 175, 341, 350, 352, 353, 356, 359, 367], "properli": [0, 1, 87, 91, 107, 113, 183, 351, 357, 361, 362, 363, 367], "test": [0, 3, 5, 83, 84, 96, 97, 101, 102, 169, 176, 201, 205, 322, 336, 351, 352, 367], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 69, 72, 74, 75, 76, 78, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 104, 105, 107, 108, 109, 110, 113, 114, 115, 123, 124, 126, 127, 131, 132, 135, 136, 137, 145, 147, 149, 154, 156, 157, 158, 161, 162, 163, 166, 167, 169, 171, 172, 175, 176, 183, 184, 185, 189, 190, 191, 192, 193, 196, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 214, 215, 221, 222, 223, 232, 233, 237, 238, 239, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 295, 307, 309, 311, 314, 315, 316, 317, 321, 336, 338, 339, 342, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "code": [0, 3, 5, 7, 8, 58, 87, 91, 107, 113, 149, 167, 169, 199, 200, 201, 203, 204, 205, 251, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368], "aim": [0, 2, 3, 7, 27, 28, 149, 169, 171, 206, 329, 343, 344, 345, 349, 350, 367], "support": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 57, 60, 61, 63, 64, 76, 77, 80, 82, 83, 84, 92, 96, 97, 104, 106, 107, 108, 110, 124, 127, 136, 145, 163, 164, 166, 179, 196, 230, 238, 239, 245, 248, 251, 267, 289, 290, 291, 292, 314, 342, 344, 346, 351, 352, 353, 354, 362, 363, 365, 367], "research": [0, 7, 9, 101, 102, 367], "most": [0, 1, 2, 3, 7, 8, 13, 14, 31, 74, 75, 87, 91, 107, 113, 134, 172, 176, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 365, 367, 368], "written": [0, 1, 3, 11, 34, 36, 39, 45, 54, 55, 58, 63, 67, 69, 74, 75, 85, 86, 87, 90, 91, 92, 93, 107, 110, 113, 127, 136, 143, 157, 161, 164, 172, 175, 183, 184, 232, 244, 245, 248, 249, 253, 258, 260, 273, 276, 278, 288, 307, 308, 309, 344, 345, 346, 349, 352, 354, 360, 363, 367], "highli": [0, 2, 353, 367, 368], "wai": [0, 1, 2, 3, 4, 52, 56, 69, 78, 95, 149, 152, 171, 172, 203, 276, 289, 290, 291, 292, 344, 349, 350, 351, 353, 355, 356, 360, 361, 362, 363, 364, 365, 367, 368], "easili": [0, 1, 2, 3, 7, 87, 91, 107, 113, 345, 349, 350, 351, 353, 354, 355, 358, 361, 362, 367, 368], "swap": [0, 1, 3, 90, 172, 351, 364, 367], "compon": [0, 1, 2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 69, 76, 77, 80, 196, 221, 238, 239, 247, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 321, 326, 349, 350, 351, 352, 354, 355, 358, 360, 361, 362, 363, 364, 367], "transform": [0, 1, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 37, 38, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 77, 87, 88, 91, 101, 102, 107, 108, 109, 113, 114, 115, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 183, 188, 189, 193, 196, 197, 219, 220, 221, 229, 237, 242, 243, 252, 255, 257, 263, 275, 307, 309, 323, 340, 342, 348, 350, 352, 354, 356, 357, 358, 359, 364, 366], "them": [0, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 35, 37, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 78, 82, 87, 88, 91, 95, 100, 101, 102, 107, 108, 109, 113, 114, 115, 132, 135, 167, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 229, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 273, 309, 349, 350, 352, 353, 354, 356, 357, 360, 361, 362, 363, 364, 365, 367, 368], "write": [0, 2, 3, 8, 22, 31, 34, 35, 36, 37, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 74, 77, 82, 87, 91, 130, 147, 148, 157, 159, 161, 165, 184, 232, 248, 249, 251, 253, 261, 262, 264, 265, 266, 272, 277, 279, 281, 288, 293, 309, 344, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368], "new": [0, 2, 3, 4, 8, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 73, 87, 91, 104, 107, 111, 112, 113, 124, 157, 166, 173, 175, 183, 184, 199, 201, 205, 244, 248, 249, 254, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 316, 349, 351, 352, 353, 355, 361, 362, 363, 367, 368], "ones": [0, 2, 22, 25, 31, 35, 38, 41, 42, 87, 91, 107, 108, 109, 113, 128, 131, 132, 133, 135, 145, 149, 154, 163, 166, 167, 169, 171, 175, 209, 210, 230, 248, 258, 259, 261, 272, 276, 277, 279, 281, 295, 349, 351, 361, 362, 363, 365, 367, 368], "littl": [0, 1, 3, 43, 87, 91, 107, 113, 167, 258, 260, 273, 276, 278, 351, 352, 356, 365, 367, 368], "effort": [0, 3, 363, 365, 367], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 87, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 113, 114, 115, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 145, 149, 150, 151, 152, 154, 157, 158, 159, 161, 163, 164, 166, 167, 169, 170, 171, 172, 173, 175, 176, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 287, 289, 290, 291, 292, 293, 307, 308, 316, 317, 319, 322, 323, 326, 328, 329, 330, 336, 340, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "repo": [0, 6, 54, 127, 164, 169, 343, 362, 367], "attempt": [0, 13, 14, 15, 16, 17, 18, 19, 20, 74, 75, 85, 86, 90, 92, 93, 110, 236, 241, 244, 262, 265, 272, 287, 355, 367], "align": [0, 199, 203, 367], "exist": [0, 2, 3, 4, 11, 17, 20, 31, 34, 36, 39, 45, 87, 91, 107, 113, 128, 133, 167, 175, 279, 330, 340, 361, 362, 367, 368], "ecosystem": [0, 356, 367], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 46, 47, 52, 58, 63, 64, 69, 72, 74, 78, 80, 87, 88, 91, 95, 101, 102, 107, 113, 114, 115, 124, 127, 161, 162, 163, 164, 167, 175, 199, 201, 203, 205, 211, 236, 239, 241, 243, 244, 249, 273, 309, 349, 350, 351, 352, 353, 356, 357, 360, 361, 362, 363, 364, 365, 367, 368], "dataset": [0, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 69, 72, 74, 75, 106, 173, 309, 342, 349, 350, 353, 364, 365, 367, 368], "pillar": [0, 367], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 121, 123, 124, 126, 127, 128, 132, 133, 134, 135, 140, 144, 145, 149, 150, 151, 154, 157, 161, 162, 163, 164, 166, 167, 169, 172, 173, 176, 185, 201, 205, 207, 208, 236, 243, 244, 264, 268, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 317, 319, 322, 329, 330, 331, 332, 336, 337, 338, 339, 340, 342, 343, 344, 348, 354, 355, 356, 357, 359, 364, 365, 366], "model": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 45, 87, 91, 103, 107, 113, 132, 149, 163, 169, 171, 174, 175, 186, 187, 188, 193, 195, 201, 205, 206, 207, 208, 212, 219, 220, 229, 233, 234, 235, 242, 248, 254, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 287, 326, 331, 332, 333, 342, 343, 346, 348, 351, 353, 356, 359, 361, 362, 363, 365, 366, 368], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 113, 121, 124, 126, 127, 132, 133, 135, 137, 143, 145, 151, 154, 161, 167, 172, 175, 176, 180, 184, 185, 196, 201, 205, 208, 211, 212, 221, 230, 232, 238, 240, 241, 243, 244, 245, 246, 248, 251, 252, 253, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 307, 309, 316, 317, 323, 326, 328, 331, 336, 338, 339, 340, 342, 344, 345, 346, 348, 352, 353, 354, 355, 359, 363, 364, 365, 366, 368], "util": [0, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 38, 40, 84, 87, 91, 96, 97, 102, 107, 108, 109, 113, 116, 127, 149, 154, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 193, 199, 203, 255, 256, 257, 274, 336, 342, 347, 349, 351, 354, 355, 356, 362, 363, 365, 367, 368], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 36, 39, 63, 64, 66, 67, 78, 80, 87, 88, 91, 107, 113, 114, 124, 126, 128, 131, 139, 145, 149, 157, 163, 166, 167, 169, 171, 175, 176, 199, 201, 202, 203, 205, 208, 212, 215, 221, 227, 228, 237, 239, 243, 245, 247, 248, 249, 279, 288, 289, 290, 291, 292, 307, 317, 329, 339, 344, 350, 351, 354, 355, 357, 361, 362, 364, 365, 367, 368], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 36, 39, 78, 87, 88, 91, 107, 113, 114, 124, 126, 128, 131, 139, 145, 149, 157, 163, 166, 167, 169, 171, 175, 176, 199, 201, 202, 203, 204, 205, 208, 212, 227, 228, 237, 245, 248, 249, 279, 288, 298, 299, 300, 301, 303, 304, 305, 306, 307, 339, 344, 350, 351, 354, 357, 361, 362, 363, 364, 365, 367, 368], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 40, 52, 58, 124, 127, 154, 161, 175, 244, 323, 326, 328, 331, 332, 336, 338, 339, 342, 346, 365, 368], "contain": [0, 2, 3, 7, 12, 13, 14, 15, 16, 18, 19, 25, 27, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 66, 67, 69, 70, 72, 74, 75, 76, 79, 81, 82, 87, 91, 103, 107, 113, 131, 132, 135, 149, 163, 166, 167, 169, 171, 172, 173, 175, 183, 184, 185, 186, 187, 199, 200, 203, 204, 206, 208, 212, 232, 238, 239, 245, 247, 248, 253, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 295, 313, 317, 329, 336, 337, 338, 339, 340, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 367, 368], "etc": [0, 2, 3, 7, 8, 11, 31, 46, 47, 58, 87, 91, 107, 113, 143, 167, 175, 206, 212, 350, 351, 356, 365, 367, 368], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 73, 76, 87, 91, 107, 108, 109, 113, 123, 127, 132, 135, 136, 143, 144, 145, 161, 166, 167, 173, 175, 176, 184, 186, 187, 206, 211, 212, 230, 243, 250, 251, 258, 260, 273, 276, 278, 284, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 317, 326, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "few": [0, 2, 8, 91, 309, 317, 351, 352, 354, 361, 362, 365, 367, 368], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 90, 92, 93, 110, 114, 115, 132, 135, 253, 276, 344, 349, 351, 352, 361, 362, 363, 367, 368], "possibl": [0, 2, 3, 4, 22, 26, 28, 31, 33, 55, 58, 60, 74, 78, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 186, 187, 199, 200, 203, 204, 248, 307, 322, 326, 344, 349, 351, 352, 354, 356, 357, 361, 362, 363, 365, 367, 368], "standard": [0, 3, 145, 156, 173, 185, 197, 208, 213, 214, 219, 236, 237, 281, 289, 290, 291, 292, 349, 350, 353, 354, 362, 365, 367], "numpi": [0, 3, 11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 87, 91, 107, 113, 165, 326, 363, 365, 367, 368], "common": [0, 2, 3, 4, 91, 96, 121, 233, 234, 235, 242, 258, 259, 260, 265, 266, 272, 273, 276, 277, 278, 279, 281, 336, 343, 344, 346, 349, 351, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 367, 368], "openai": [0, 7, 90, 92, 110, 351, 363, 367, 368], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 15, 16, 20, 21, 87, 88, 90, 91, 92, 93, 95, 101, 102, 104, 105, 107, 110, 113, 114, 115, 117, 120, 123, 127, 130, 136, 142, 143, 145, 147, 152, 154, 157, 163, 166, 172, 173, 175, 336, 343, 349, 350, 351, 352, 353, 357, 358, 363, 364, 365, 367], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 69, 74, 75, 80, 85, 86, 87, 90, 91, 92, 93, 95, 104, 105, 107, 108, 109, 110, 113, 123, 127, 128, 130, 131, 132, 134, 135, 139, 145, 149, 150, 154, 161, 162, 163, 164, 166, 167, 169, 171, 173, 175, 203, 205, 211, 212, 232, 237, 238, 245, 246, 248, 249, 250, 251, 258, 260, 261, 265, 266, 272, 273, 274, 276, 277, 278, 279, 280, 281, 289, 290, 291, 292, 293, 309, 316, 330, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 367, 368], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 149, 150, 152, 153, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 230, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 311, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 330, 331, 332, 333, 335, 336, 338, 339, 340, 344, 352, 353, 356, 361, 362, 363, 365, 367], "On": [0, 3, 7, 17, 18, 19, 20, 25, 55, 200, 204, 344, 350, 361, 362], "end": [0, 2, 3, 13, 14, 16, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 73, 74, 75, 87, 91, 107, 113, 136, 147, 161, 162, 167, 175, 186, 187, 199, 200, 203, 204, 207, 243, 279, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "come": [0, 1, 2, 3, 8, 31, 78, 87, 91, 100, 107, 113, 132, 135, 232, 233, 234, 235, 245, 253, 258, 260, 273, 276, 278, 309, 349, 350, 351, 352, 355, 356, 357, 358, 361, 362, 365, 367, 368], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 73, 76, 80, 87, 89, 91, 101, 102, 103, 107, 108, 109, 113, 114, 115, 120, 121, 123, 124, 127, 128, 131, 132, 135, 142, 143, 149, 154, 161, 162, 163, 164, 166, 167, 169, 171, 173, 175, 176, 181, 182, 184, 199, 201, 203, 205, 207, 211, 212, 236, 237, 248, 266, 274, 276, 279, 293, 317, 322, 323, 332, 340, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 367, 368], "re": [0, 2, 3, 8, 31, 73, 87, 91, 107, 113, 175, 205, 209, 210, 245, 249, 316, 346, 349, 351, 352, 353, 355, 360, 363, 367, 368], "usabl": [0, 346, 352, 367], "function": [0, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 43, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 69, 76, 77, 80, 87, 88, 91, 107, 113, 120, 123, 124, 132, 135, 167, 173, 175, 176, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 225, 228, 230, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 336, 342, 344, 349, 352, 353, 354, 357, 360, 363, 365, 368], "cost": [0, 2, 26, 58, 258, 260, 273, 276, 278, 349, 350, 361, 362, 363, 365], "return": [0, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 69, 70, 72, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 183, 184, 185, 188, 189, 190, 191, 192, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 218, 219, 220, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 237, 243, 245, 247, 248, 249, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 313, 326, 329, 331, 336, 337, 338, 339, 340, 342, 344, 346, 349, 350, 351, 352, 354, 355, 357, 360, 361, 362, 363, 364, 365, 367, 368], "process": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 35, 36, 39, 43, 45, 52, 55, 59, 60, 66, 67, 74, 87, 88, 91, 95, 100, 104, 107, 108, 109, 113, 126, 132, 135, 165, 173, 175, 211, 212, 239, 244, 247, 342, 346, 349, 350, 352, 353, 361, 362, 363, 364, 365, 367, 368], "good": [0, 1, 4, 9, 107, 349, 351, 352, 354, 362, 367, 368], "runtim": [0, 2, 3, 31, 87, 91, 107, 113, 175, 363], "perform": [0, 2, 3, 4, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 85, 86, 87, 90, 91, 92, 93, 107, 110, 113, 116, 132, 135, 144, 167, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 260, 269, 276, 279, 322, 326, 345, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361, 362, 363, 368], "To": [0, 2, 3, 4, 6, 7, 8, 9, 17, 18, 19, 31, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 74, 75, 77, 82, 83, 84, 87, 90, 91, 92, 96, 97, 100, 107, 108, 109, 110, 111, 112, 113, 114, 161, 173, 175, 233, 234, 235, 244, 266, 274, 309, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 367, 368], "read": [0, 2, 3, 7, 22, 35, 37, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 76, 77, 80, 87, 90, 91, 92, 107, 113, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 147, 148, 150, 151, 152, 154, 157, 158, 159, 161, 162, 163, 164, 166, 169, 170, 172, 173, 175, 184, 218, 232, 233, 234, 235, 238, 243, 245, 248, 249, 251, 253, 254, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 309, 322, 326, 344, 349, 350, 351, 353, 354, 360, 361, 362, 363, 364, 368], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 346, 349, 353, 356, 360, 364, 368], "beyond": [0, 87, 91, 107, 113], "api": [0, 2, 3, 5, 108, 109, 110, 149, 171, 345, 346, 353, 354, 355, 356, 357, 361, 362, 363, 365, 367, 368], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 46, 47, 48, 50, 74, 87, 88, 91, 103, 107, 113, 116, 127, 128, 138, 143, 150, 165, 167, 175, 176, 201, 205, 232, 238, 239, 245, 246, 247, 248, 249, 309, 341, 344, 345, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368], "paper": [0, 55, 58, 83, 84, 85, 86, 93, 96, 97, 101, 102, 104, 105, 110, 114, 115, 149, 169, 171, 199, 220, 229, 264, 271, 349, 351, 361, 362], "releas": [0, 4, 7, 10, 31, 87, 91, 107, 113, 167, 175, 279, 367], "sync": [0, 13, 14, 16, 17, 18, 19, 20, 328, 336, 346, 349, 367], "so": [0, 2, 3, 4, 6, 7, 10, 31, 34, 36, 39, 40, 87, 91, 101, 102, 107, 113, 163, 173, 175, 250, 251, 349, 351, 352, 355, 358, 361, 362, 363, 368], "make": [0, 2, 3, 4, 7, 31, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 72, 76, 77, 82, 87, 91, 92, 95, 97, 99, 105, 107, 113, 137, 145, 149, 150, 154, 161, 169, 175, 176, 199, 200, 203, 204, 211, 212, 213, 238, 249, 258, 260, 273, 276, 278, 289, 290, 291, 292, 307, 323, 332, 340, 344, 345, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "sure": [0, 3, 4, 7, 57, 76, 91, 95, 154, 238, 340, 344, 349, 351, 352, 355, 361, 362, 363, 365, 367, 368], "alwai": [0, 2, 3, 13, 14, 19, 25, 27, 31, 52, 61, 87, 91, 107, 113, 143, 144, 175, 267, 274, 344, 345, 350, 351, 352, 361, 362, 363, 365], "enjoi": [0, 2, 3, 58, 356], "latest": [0, 2, 3, 10, 104, 108, 109, 323, 351, 361, 362, 363, 367], "featur": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 33, 45, 56, 67, 74, 75, 87, 91, 100, 107, 108, 109, 111, 112, 113, 124, 127, 139, 143, 147, 163, 164, 168, 173, 176, 186, 187, 197, 198, 199, 200, 201, 203, 204, 205, 206, 211, 213, 214, 249, 258, 260, 273, 276, 278, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 340, 344, 349, 350, 351, 352, 354, 355, 356, 358, 363, 365, 368], "recent": [0, 7, 11, 172, 349, 352, 354, 358, 360, 361, 365, 368], "version": [0, 1, 2, 3, 6, 11, 31, 34, 36, 40, 55, 60, 74, 87, 90, 91, 92, 93, 104, 105, 107, 108, 110, 113, 114, 115, 172, 175, 183, 235, 258, 260, 273, 274, 276, 278, 279, 289, 292, 343, 344, 349, 351, 352, 353, 355, 358, 361, 362, 363, 364, 368], "although": [0, 1, 3, 8, 87, 91, 107, 113, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 346, 349, 350, 356, 365], "core": [0, 3, 8, 346, 352, 354, 367], "guarante": [0, 2, 31, 34, 36, 39, 63, 64, 65, 76, 77, 80, 87, 91, 107, 113, 173, 175, 356, 367], "backward": [0, 8, 31, 83, 84, 87, 91, 107, 113, 173, 175, 199, 200, 203, 204, 258, 259, 261, 265, 266, 272, 276, 277, 278, 279, 281, 349, 351, 352, 355, 356, 358, 361, 362, 363], "compat": [0, 2, 3, 7, 11, 13, 14, 31, 54, 69, 72, 74, 75, 76, 78, 87, 91, 93, 106, 107, 113, 127, 161, 169, 173, 175, 199, 200, 201, 203, 204, 205, 246, 258, 259, 261, 262, 264, 265, 266, 272, 274, 276, 277, 278, 279, 281, 284, 349, 352, 365, 367], "1": [0, 1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 74, 75, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 143, 145, 147, 149, 150, 151, 152, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 175, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 255, 258, 259, 260, 261, 262, 264, 265, 266, 269, 272, 273, 275, 276, 277, 278, 279, 280, 281, 287, 288, 289, 290, 291, 292, 295, 297, 298, 299, 303, 304, 306, 307, 309, 317, 322, 323, 324, 336, 340, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368], "13": [0, 2, 5, 10, 11, 74, 75, 110, 172, 175, 348, 350, 357, 361, 362, 363, 364, 365, 366], "nightli": [0, 6], "via": [0, 1, 4, 7, 8, 35, 38, 41, 42, 54, 56, 57, 58, 59, 60, 91, 107, 149, 166, 171, 263, 274, 345, 346, 349, 350, 351, 352, 354, 356, 365, 368], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 72, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 183, 184, 185, 195, 196, 201, 205, 207, 208, 220, 221, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 307, 308, 317, 321, 322, 323, 325, 326, 342, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 368], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 27, 143, 151, 233, 234, 235, 248, 265, 272, 342, 349, 361, 363, 367], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 31, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 69, 87, 91, 107, 113, 120, 149, 171, 175, 208, 311, 316, 326, 346, 350, 358, 361], "root": [0, 2, 3, 25, 27, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 107, 127, 164, 183, 202, 227, 228, 352, 353, 361, 362, 363, 364, 365, 368], "http": [0, 2, 5, 6, 7, 10, 17, 18, 19, 35, 43, 52, 55, 56, 57, 58, 59, 60, 66, 67, 83, 84, 85, 86, 93, 95, 96, 97, 101, 102, 104, 105, 106, 108, 109, 110, 114, 115, 127, 149, 169, 188, 189, 190, 191, 192, 193, 196, 197, 198, 203, 208, 209, 210, 214, 216, 217, 220, 222, 223, 229, 239, 244, 258, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 289, 294, 302, 341, 346, 359, 364, 367], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 52, 55, 56, 58, 83, 84, 85, 86, 93, 96, 97, 101, 102, 104, 105, 108, 109, 110, 114, 115, 124, 169, 346, 354, 358, 361, 362, 367], "com": [0, 2, 5, 6, 7, 10, 17, 18, 19, 55, 58, 59, 83, 84, 85, 86, 93, 95, 96, 97, 101, 102, 104, 105, 108, 109, 110, 114, 115, 346, 364, 367], "setup": [0, 7, 83, 84, 95, 96, 97], "py": [0, 3, 120, 220, 229, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368], "develop": [0, 3, 4, 7, 95, 349, 367], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 76, 78, 79, 80, 81, 87, 89, 91, 93, 94, 107, 110, 113, 118, 122, 123, 124, 126, 130, 134, 140, 143, 149, 150, 152, 159, 163, 166, 167, 169, 170, 172, 173, 174, 175, 176, 183, 185, 186, 187, 196, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 212, 214, 215, 230, 236, 237, 238, 239, 240, 243, 245, 246, 249, 251, 252, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 284, 287, 289, 290, 291, 292, 293, 295, 307, 310, 311, 314, 316, 319, 326, 328, 336, 345, 348, 349, 351, 354, 355, 356, 359, 363, 366, 368], "seri": [0, 2, 7, 8, 33, 62, 70, 78, 79, 81, 82, 113, 144, 166, 309, 344, 345, 349, 350, 351, 357, 358, 361, 362, 365, 368], "quick": [0, 52], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 26, 40, 54, 60, 87, 91, 107, 113, 123, 126, 164, 166, 175, 276, 343, 344, 345, 349, 350, 351, 352, 354, 358, 361, 362, 363, 365, 368], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 69, 72, 73, 74, 75, 78, 80, 85, 86, 87, 88, 90, 91, 92, 93, 95, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 143, 144, 145, 149, 150, 153, 154, 157, 158, 162, 163, 164, 165, 166, 167, 169, 171, 173, 175, 183, 184, 186, 187, 199, 200, 201, 203, 204, 205, 206, 209, 210, 211, 212, 230, 232, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 303, 304, 305, 306, 307, 313, 316, 321, 323, 326, 328, 330, 336, 340, 343, 349, 350, 351, 352, 353, 355, 358, 360, 361, 362, 363, 365, 367, 368], "hurri": [0, 353], "last": [0, 1, 2, 3, 4, 11, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 54, 73, 74, 75, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113, 123, 126, 139, 145, 150, 162, 164, 165, 186, 187, 199, 201, 203, 205, 206, 209, 210, 216, 224, 230, 236, 237, 240, 243, 249, 289, 291, 292, 349, 350, 351, 352, 353, 354, 358, 360, 361, 362, 363, 364, 365, 367, 368], "item": [0, 8, 13, 25, 27, 38, 45, 61, 73, 78, 138, 209, 210, 261, 262, 264, 317, 345, 346, 349, 351, 352, 355, 356, 361, 362, 363, 365], "navig": [0, 362], "previou": [0, 3, 4, 10, 31, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 107, 113, 163, 175, 184, 199, 203, 223, 237, 351, 352, 353, 354, 358, 363, 368], "whenev": [0, 1, 2, 3, 22, 31, 35, 38, 41, 42, 52, 58, 67, 74, 75, 85, 86, 90, 92, 93, 101, 102, 110, 114, 115, 120, 142, 167, 172, 274, 289, 290, 291, 292, 307, 328, 344, 365], "want": [0, 2, 3, 6, 7, 8, 75, 145, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 344, 349, 350, 351, 352, 353, 355, 356, 357, 361, 362, 363, 364, 365, 367, 368], "ted": [0, 52, 54, 55, 56, 57, 58, 59, 60, 342, 348, 359, 366], "s": [0, 1, 2, 3, 6, 7, 8, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 74, 75, 78, 83, 84, 87, 91, 95, 96, 97, 101, 102, 104, 107, 108, 109, 113, 114, 115, 127, 131, 149, 161, 163, 165, 166, 167, 169, 171, 173, 175, 176, 186, 187, 201, 205, 210, 211, 212, 214, 220, 229, 233, 235, 236, 239, 240, 243, 245, 248, 249, 252, 259, 265, 272, 274, 279, 289, 290, 291, 292, 293, 307, 344, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 78, 83, 84, 87, 91, 100, 103, 106, 107, 113, 120, 126, 131, 134, 136, 143, 149, 150, 162, 163, 166, 167, 169, 171, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 285, 287, 289, 290, 291, 292, 293, 307, 326, 333, 336, 342, 345, 346, 348, 350, 351, 353, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 368], "optim": [0, 1, 2, 8, 31, 40, 83, 84, 87, 91, 107, 113, 167, 175, 185, 208, 213, 214, 259, 274, 275, 276, 279, 321, 326, 336, 345, 346, 348, 351, 352, 353, 354, 356, 359, 361, 362, 363, 366], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 73, 87, 91, 107, 110, 113, 124, 127, 145, 149, 171, 176, 243, 244, 259, 261, 264, 266, 277, 279, 281, 309, 317, 323, 326, 328, 329, 330, 336, 346, 348, 349, 352, 353, 354, 355, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368], "storag": [0, 1, 8, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 73, 74, 75, 77, 78, 80, 87, 89, 91, 107, 113, 126, 127, 132, 135, 154, 175, 342, 346, 348, 350, 351, 352, 353, 355, 358, 359, 361, 362, 364, 366], "log": [0, 3, 4, 8, 40, 194, 195, 196, 209, 210, 218, 228, 238, 239, 245, 249, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 316, 319, 320, 322, 326, 336, 344, 345, 346, 348, 349, 350, 351, 353, 354, 358, 359, 361, 362, 363, 366, 367], "your": [0, 2, 3, 7, 8, 10, 17, 31, 87, 91, 95, 100, 107, 108, 109, 113, 173, 175, 340, 343, 344, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 365, 366, 367], "own": [0, 1, 3, 13, 14, 16, 21, 31, 87, 91, 107, 108, 109, 113, 175, 309, 348, 350, 351, 353, 359, 361, 362, 363, 366], "train": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 34, 36, 39, 40, 45, 52, 55, 61, 87, 91, 101, 102, 107, 108, 109, 113, 132, 140, 149, 162, 167, 169, 171, 175, 176, 189, 191, 201, 205, 236, 240, 241, 244, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 289, 326, 328, 336, 342, 346, 348, 350, 353, 356, 357, 359, 364, 365, 366, 368], "loop": [0, 8, 34, 36, 39, 87, 91, 107, 113, 183, 236, 240, 241, 244, 276, 326, 346, 348, 349, 350, 353, 355, 356, 357, 359, 360, 365, 366], "ppo": [0, 4, 8, 245, 249, 260, 273, 276, 342, 344, 348, 349, 350, 354, 355, 359, 361, 366], "pendulum": [0, 3, 13, 14, 15, 16, 20, 21, 78, 85, 86, 87, 88, 90, 91, 92, 104, 107, 113, 127, 130, 131, 137, 142, 143, 145, 152, 154, 159, 161, 163, 164, 166, 167, 173, 175, 201, 205, 336, 344, 348, 350, 351, 353, 354, 355, 359, 366, 367, 368], "introduct": [0, 345, 348, 353, 359, 361, 362, 366, 368], "multi": [0, 1, 7, 9, 27, 28, 31, 35, 38, 41, 42, 87, 91, 101, 102, 107, 111, 112, 113, 167, 175, 199, 201, 203, 205, 206, 211, 212, 243, 287, 289, 290, 291, 292, 342, 348, 349, 350, 351, 352, 353, 354, 359, 363, 366, 367], "agent": [0, 9, 27, 28, 100, 101, 102, 108, 109, 111, 112, 114, 115, 116, 161, 162, 209, 210, 211, 212, 214, 220, 229, 287, 342, 348, 353, 359, 363, 366], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 40, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 201, 205, 207, 208, 243, 248, 274, 307, 308, 309, 330, 331, 332, 336, 338, 339, 340, 342, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 74, 75, 78, 80, 83, 84, 87, 88, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 142, 143, 145, 149, 150, 151, 152, 154, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 218, 219, 220, 221, 227, 228, 229, 230, 232, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 302, 307, 309, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 334, 336, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 368], "pretrain": [0, 348, 359, 366], "recurr": [0, 2, 126, 199, 200, 201, 203, 205, 223, 348, 350, 354, 359, 365, 366], "dqn": [0, 2, 52, 136, 196, 238, 239, 258, 259, 261, 262, 264, 266, 267, 268, 271, 272, 274, 276, 277, 278, 279, 280, 281, 287, 333, 342, 344, 348, 354, 355, 358, 359, 366], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 83, 84, 87, 91, 103, 107, 113, 134, 143, 162, 181, 182, 196, 201, 205, 211, 212, 214, 221, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 252, 258, 259, 260, 261, 265, 266, 272, 273, 275, 276, 277, 278, 279, 281, 322, 328, 331, 332, 336, 338, 339, 344, 345, 346, 348, 350, 353, 355, 356, 359, 364, 365, 366, 367, 368], "replai": [0, 8, 15, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 82, 126, 127, 134, 150, 154, 163, 175, 261, 262, 264, 265, 266, 272, 277, 279, 281, 323, 326, 334, 336, 342, 346, 348, 359, 363, 364, 366], "buffer": [0, 3, 4, 8, 15, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 87, 91, 103, 107, 113, 126, 127, 131, 134, 149, 150, 154, 163, 166, 167, 169, 171, 175, 248, 251, 261, 262, 264, 265, 266, 272, 277, 279, 281, 323, 326, 334, 336, 342, 346, 348, 357, 359, 363, 364, 366, 368], "competit": [0, 3, 101, 102, 348, 359, 362, 366], "ddpg": [0, 189, 190, 191, 192, 261, 271, 280, 342, 344, 348, 350, 355, 359, 362, 366], "task": [0, 2, 3, 9, 27, 28, 40, 45, 55, 58, 85, 86, 87, 91, 94, 101, 102, 107, 108, 109, 110, 113, 114, 115, 149, 161, 167, 169, 171, 265, 272, 348, 349, 350, 351, 352, 353, 354, 359, 361, 362, 363, 366, 367, 368], "specif": [0, 1, 2, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 41, 42, 91, 107, 113, 114, 193, 237, 309, 326, 342, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 365, 366], "object": [0, 2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 36, 39, 45, 63, 64, 65, 69, 72, 76, 77, 80, 82, 87, 91, 96, 107, 113, 132, 135, 136, 145, 149, 166, 167, 169, 173, 175, 208, 220, 229, 232, 233, 245, 248, 249, 250, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 330, 331, 332, 335, 336, 340, 342, 344, 346, 348, 350, 351, 352, 356, 358, 359, 361, 362, 363, 365, 366, 368], "loss": [0, 3, 8, 36, 136, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 287, 288, 289, 321, 326, 333, 336, 345, 346, 348, 353, 355, 356, 357, 359, 363, 365, 366, 367], "trainer": [0, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 348, 349, 359, 366], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 74, 75, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 145, 147, 149, 151, 152, 153, 154, 157, 159, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 175, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 208, 211, 212, 215, 218, 219, 220, 221, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 258, 259, 261, 262, 264, 265, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 282, 283, 287, 289, 290, 291, 292, 295, 307, 309, 317, 318, 319, 320, 321, 323, 324, 325, 328, 336, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368], "packag": [0, 6, 7, 10, 120, 342, 343, 349, 355, 360, 361, 365, 368], "batch": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 73, 74, 75, 78, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 103, 104, 106, 107, 113, 114, 115, 124, 127, 131, 139, 145, 147, 150, 154, 163, 166, 167, 168, 172, 173, 175, 184, 194, 199, 200, 201, 203, 204, 205, 209, 210, 211, 212, 213, 218, 220, 226, 230, 243, 244, 248, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 317, 320, 323, 324, 325, 326, 328, 338, 339, 340, 342, 346, 350, 351, 352, 353, 356, 358, 360, 361, 362, 364, 367, 368], "size": [0, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 126, 128, 131, 132, 135, 136, 137, 139, 147, 149, 151, 152, 154, 158, 160, 161, 163, 165, 166, 167, 168, 171, 173, 175, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 218, 219, 220, 221, 222, 223, 226, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 253, 258, 259, 261, 262, 264, 265, 266, 272, 274, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 309, 317, 323, 342, 344, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364, 367, 368], "interoper": [0, 13, 14, 342], "singl": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 35, 36, 38, 39, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 78, 87, 90, 91, 101, 102, 107, 113, 114, 115, 127, 128, 149, 154, 167, 171, 175, 186, 187, 199, 200, 201, 203, 204, 205, 206, 212, 247, 251, 260, 262, 264, 266, 267, 273, 276, 277, 281, 289, 290, 291, 292, 298, 299, 300, 301, 303, 304, 305, 306, 307, 340, 342, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 365], "node": [0, 2, 17, 18, 19, 20, 21, 34, 36, 39, 60, 342, 356], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 21, 108, 109, 143, 145, 185, 194, 195, 196, 197, 202, 208, 209, 210, 215, 218, 219, 222, 223, 226, 227, 228, 236, 237, 238, 239, 245, 249, 250, 258, 259, 260, 265, 266, 267, 272, 273, 276, 277, 278, 279, 281, 342, 346, 350, 351, 354, 356, 361, 362, 363, 367, 368], "helper": [0, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 349, 350, 352, 361, 363], "compos": [0, 3, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 69, 70, 71, 78, 79, 87, 91, 107, 113, 127, 153, 166, 167, 173, 175, 242, 243, 269, 279, 309, 342, 349, 350, 351, 352, 356, 360, 362, 363, 365, 367, 368], "episod": [0, 3, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 74, 75, 87, 91, 107, 113, 123, 154, 157, 162, 183, 185, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 342, 350, 353, 358, 361, 362, 365], "format": [0, 3, 30, 31, 33, 52, 53, 54, 55, 56, 57, 58, 59, 60, 72, 78, 87, 91, 107, 108, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248, 309, 342, 349, 350, 353, 355, 357, 368], "tensorspec": [0, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 46, 47, 48, 49, 50, 87, 91, 103, 107, 113, 114, 115, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 184, 223, 232, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 252, 259, 262, 265, 266, 277, 279, 281, 287, 342, 363], "human": [0, 56, 342, 363], "feedback": [0, 342, 358, 367], "rlhf": [0, 40, 45, 61, 143, 342, 344], "envbas": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 88, 91, 107, 113, 121, 124, 132, 135, 144, 151, 152, 166, 167, 173, 175, 176, 185, 207, 208, 322, 330, 331, 332, 336, 338, 339, 340, 342, 353], "gymlikeenv": [0, 90, 92, 342], "envmetadata": [0, 342], "vector": [0, 1, 8, 23, 26, 33, 83, 84, 96, 97, 100, 108, 109, 110, 114, 115, 134, 172, 189, 191, 199, 200, 203, 204, 206, 289, 292, 302, 303, 304, 305, 306, 342, 349, 350, 352, 360, 361, 362, 363, 364, 368], "auto": [0, 64, 80, 122, 123, 172, 244, 259, 266, 275, 277, 279, 281, 342, 345, 361, 362], "reset": [0, 1, 2, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 75, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 113, 122, 123, 124, 127, 136, 139, 142, 144, 149, 157, 161, 162, 163, 164, 166, 167, 169, 172, 173, 175, 176, 184, 199, 201, 205, 231, 243, 244, 308, 342, 349, 350, 351, 352, 353, 356, 360, 361, 362, 367], "mask": [0, 1, 4, 22, 26, 29, 30, 33, 108, 109, 121, 150, 175, 196, 209, 210, 221, 237, 238, 239, 240, 241, 246, 247, 323, 342, 350, 352, 368], "action": [0, 2, 8, 9, 13, 14, 15, 16, 20, 26, 33, 40, 44, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 124, 130, 132, 134, 135, 136, 137, 140, 143, 144, 147, 151, 152, 154, 158, 161, 167, 172, 180, 183, 185, 188, 189, 190, 191, 192, 193, 195, 196, 197, 201, 205, 206, 207, 208, 209, 210, 211, 219, 220, 221, 223, 226, 227, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 252, 253, 258, 259, 261, 262, 264, 265, 266, 272, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 336, 340, 342, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 360, 361, 362, 364, 365, 367, 368], "record": [0, 2, 31, 87, 91, 107, 113, 118, 143, 175, 276, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 336, 342, 350, 351, 354, 358, 361], "domain": [0, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 87, 91, 107, 113, 134, 163, 180, 232, 238, 239, 245, 246, 247, 248, 249, 250, 251, 342, 351, 352, 354, 355, 361, 362, 363, 367, 368], "actor": [0, 3, 4, 20, 143, 185, 188, 189, 191, 196, 197, 208, 219, 221, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 287, 342, 345, 350, 352, 353, 355, 358, 361, 364, 367], "explor": [0, 1, 174, 214, 232, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 258, 322, 331, 332, 336, 342, 351, 352, 353, 355, 356, 358, 361, 362, 363], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 69, 74, 75, 78, 87, 91, 100, 107, 113, 120, 123, 125, 127, 128, 130, 132, 134, 135, 136, 144, 145, 149, 150, 153, 154, 155, 157, 159, 163, 164, 166, 167, 171, 173, 175, 180, 184, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 221, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 317, 319, 320, 321, 322, 323, 326, 336, 342, 346, 350, 353, 355, 356, 357, 360, 361, 362, 363, 365, 367, 368], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 35, 38, 40, 52, 53, 54, 55, 56, 57, 58, 59, 60, 71, 73, 87, 88, 91, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 124, 131, 132, 133, 137, 143, 145, 151, 152, 157, 158, 161, 163, 166, 172, 175, 184, 194, 209, 210, 218, 232, 245, 249, 253, 254, 277, 283, 289, 294, 302, 312, 326, 342, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368], "hook": [0, 31, 87, 91, 107, 113, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 221, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 342], "planner": [0, 185, 208, 342], "sac": [0, 266, 277, 279, 342], "redq": [0, 277, 342], "iql": [0, 265, 272, 342, 349, 361, 362], "cql": [0, 259, 264, 342], "dt": [0, 244, 342, 363], "td3": [0, 281, 342], "a2c": [0, 258, 342], "dreamer": [0, 118, 119, 197, 268, 269, 270, 342, 344], "checkpoint": [0, 342, 364], "builder": [0, 342, 350, 368], "logger": [0, 3, 307, 309, 311, 312, 313, 314, 315, 316, 320, 326, 336, 340, 342, 350, 361], "_util": [0, 3, 11, 342, 358], "implement_for": [0, 3, 342], "thing": [0, 3, 7, 8, 87, 91, 107, 113, 343, 351, 352, 353, 354, 355, 356, 357, 361, 362, 365, 368], "consid": [0, 1, 2, 3, 8, 19, 31, 35, 38, 41, 42, 63, 64, 80, 87, 91, 107, 113, 134, 173, 175, 194, 211, 226, 289, 291, 292, 343, 349, 353, 354, 355, 360, 363, 365], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 80, 87, 88, 91, 100, 101, 102, 104, 106, 107, 108, 109, 113, 114, 115, 121, 123, 126, 127, 131, 132, 134, 135, 143, 144, 145, 149, 150, 157, 163, 166, 167, 169, 171, 172, 173, 175, 181, 182, 183, 185, 196, 199, 200, 203, 204, 206, 207, 208, 209, 210, 213, 221, 227, 243, 245, 248, 249, 251, 255, 260, 262, 267, 273, 276, 279, 282, 287, 288, 289, 290, 291, 292, 307, 308, 309, 323, 340, 343, 344, 346, 349, 350, 351, 352, 354, 356, 357, 361, 362, 363, 364, 365, 368], "debug": [0, 6, 8, 40, 52, 53, 54, 55, 56, 57, 58, 59, 60, 343, 368], "work": [0, 1, 2, 3, 4, 8, 11, 31, 38, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 72, 74, 75, 77, 82, 87, 90, 91, 92, 95, 107, 110, 113, 128, 143, 149, 169, 172, 173, 175, 183, 186, 187, 206, 239, 247, 252, 260, 273, 276, 326, 343, 344, 349, 350, 351, 352, 353, 356, 360, 361, 362, 363, 364, 365, 367, 368], "habitat": [0, 3, 93, 343, 364], "lab": [0, 3, 85, 86, 93, 343], "mujoco": [0, 6, 8, 110, 343, 349, 351, 352], "error": [0, 1, 3, 7, 10, 11, 28, 31, 34, 36, 39, 87, 91, 107, 113, 116, 150, 175, 176, 343, 349, 351, 361, 362, 368], "solut": [0, 2, 3, 6, 7, 9, 20, 343, 344, 346, 367], "resourc": [0, 1, 20, 93, 343, 349, 351, 361, 362], "issu": [0, 3, 4, 5, 8, 52, 56, 63, 64, 80, 95, 127, 150, 164, 183, 232, 238, 239, 245, 246, 247, 248, 249, 343, 367], "index": [0, 3, 7, 8, 10, 15, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 72, 77, 78, 79, 80, 81, 82, 87, 91, 101, 102, 107, 113, 114, 115, 122, 127, 131, 134, 167, 183, 209, 210, 342, 353, 360, 361, 362, 365, 367], "search": [0, 106, 184, 350], "page": [0, 7, 316, 355], "somewhat": [1, 2, 345, 354, 368], "equival": [1, 3, 23, 25, 26, 29, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 83, 84, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113, 124, 133, 136, 167, 175, 196, 203, 206, 221, 238, 239, 246, 247, 276, 323, 356, 367, 368], "dataload": [1, 61, 73, 75, 350, 356, 365], "except": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 58, 87, 91, 107, 113, 127, 138, 154, 162, 163, 164, 167, 175, 199, 201, 203, 205, 218, 236, 240, 241, 244, 279, 309, 344, 350, 353, 365, 367, 368], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 58, 87, 91, 100, 101, 102, 107, 108, 109, 113, 114, 115, 123, 126, 138, 143, 149, 158, 166, 167, 171, 175, 205, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 323, 326, 344, 345, 346, 349, 350, 351, 352, 355, 360, 361, 362, 363, 364, 365, 367, 368], "over": [1, 2, 3, 4, 8, 13, 14, 31, 38, 42, 43, 45, 51, 52, 58, 73, 74, 87, 91, 101, 102, 107, 113, 134, 145, 157, 164, 175, 183, 230, 251, 267, 269, 274, 295, 307, 329, 346, 349, 350, 351, 353, 354, 355, 356, 361, 362, 363, 368], "non": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 32, 34, 35, 36, 39, 41, 42, 58, 65, 87, 91, 107, 108, 109, 113, 124, 125, 131, 139, 149, 163, 166, 167, 168, 169, 171, 175, 183, 199, 201, 203, 205, 211, 248, 249, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 272, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 344, 349, 352, 361, 362, 363, 365, 368], "static": [1, 11, 40, 45, 67, 74, 75, 93, 173, 272, 353, 363, 365], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 25, 27, 29, 30, 31, 35, 36, 37, 38, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 74, 75, 78, 80, 83, 84, 87, 88, 91, 96, 97, 100, 106, 107, 108, 109, 111, 112, 113, 114, 115, 123, 124, 126, 128, 131, 132, 133, 134, 135, 143, 145, 147, 149, 151, 154, 157, 161, 162, 163, 166, 167, 169, 171, 173, 175, 180, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 201, 203, 204, 205, 206, 209, 210, 211, 212, 215, 219, 230, 237, 238, 239, 240, 241, 243, 244, 248, 252, 253, 258, 259, 260, 261, 265, 266, 272, 273, 276, 277, 278, 279, 281, 288, 289, 290, 291, 292, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 317, 344, 345, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 367, 368], "like": [1, 2, 3, 4, 7, 20, 25, 27, 31, 35, 38, 41, 42, 45, 65, 69, 75, 87, 91, 93, 100, 107, 108, 109, 113, 136, 165, 175, 176, 199, 203, 212, 242, 258, 260, 273, 276, 277, 278, 345, 349, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 368], "being": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 61, 78, 87, 90, 91, 92, 93, 107, 110, 113, 126, 132, 134, 135, 144, 152, 167, 175, 181, 182, 201, 205, 240, 244, 260, 273, 276, 279, 309, 323, 328, 338, 339, 340, 344, 349, 350, 351, 352, 356, 361, 362, 363, 365], "accept": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 38, 55, 56, 59, 60, 61, 87, 91, 103, 107, 113, 122, 127, 131, 139, 149, 157, 163, 166, 167, 168, 169, 171, 175, 206, 230, 248, 249, 250, 279, 309, 346, 351, 353, 357, 365, 368], "two": [1, 2, 3, 4, 8, 10, 31, 35, 38, 40, 41, 42, 58, 69, 73, 75, 87, 91, 107, 113, 124, 145, 149, 171, 175, 192, 199, 201, 203, 205, 224, 249, 273, 284, 322, 326, 345, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 363, 365, 367, 368], "main": [1, 2, 3, 5, 19, 21, 60, 88, 249, 326, 344, 345, 349, 350, 360, 368], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 69, 72, 73, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 101, 102, 104, 105, 107, 108, 110, 113, 114, 115, 123, 124, 128, 130, 131, 149, 157, 158, 161, 163, 165, 166, 167, 169, 171, 175, 183, 186, 187, 199, 201, 203, 205, 206, 209, 210, 211, 212, 213, 230, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 273, 275, 276, 277, 278, 279, 281, 283, 287, 289, 290, 291, 292, 293, 297, 307, 308, 309, 316, 319, 329, 336, 337, 340, 349, 350, 351, 352, 353, 354, 356, 361, 362, 363, 365, 368], "list": [1, 2, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 69, 72, 73, 74, 75, 76, 77, 85, 86, 87, 90, 91, 92, 93, 101, 102, 103, 106, 107, 108, 109, 110, 113, 114, 115, 116, 125, 126, 130, 132, 135, 143, 145, 147, 149, 157, 159, 165, 167, 169, 171, 173, 175, 183, 186, 187, 189, 195, 198, 201, 205, 206, 209, 210, 216, 221, 239, 243, 246, 247, 249, 251, 252, 253, 274, 279, 286, 289, 292, 307, 308, 322, 323, 338, 339, 344, 349, 351, 353, 354, 355, 356, 360, 361, 363, 364, 365, 367, 368], "constructor": [1, 2, 15, 17, 18, 19, 20, 38, 45, 58, 66, 78, 87, 91, 104, 107, 113, 114, 123, 166, 186, 187, 206, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 337, 340, 344, 349, 350, 351, 353, 356, 361, 362, 365], "iter": [1, 2, 3, 11, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 69, 73, 83, 84, 87, 91, 96, 97, 107, 113, 137, 145, 158, 175, 186, 187, 206, 211, 212, 225, 232, 238, 245, 246, 248, 250, 251, 253, 274, 286, 322, 325, 326, 345, 346, 349, 351, 352, 356, 358, 361, 362, 363], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 37, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 83, 84, 87, 88, 91, 92, 93, 95, 96, 97, 103, 104, 107, 110, 113, 121, 167, 175, 199, 201, 203, 205, 240, 243, 250, 251, 330, 340, 344, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 365, 366, 368], "step": [1, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 52, 67, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 103, 104, 105, 107, 108, 109, 110, 113, 121, 126, 139, 142, 145, 161, 162, 163, 164, 167, 172, 175, 183, 184, 185, 197, 199, 201, 203, 205, 207, 208, 236, 240, 241, 243, 244, 245, 249, 258, 268, 276, 288, 289, 290, 291, 292, 295, 296, 297, 308, 311, 317, 322, 326, 346, 350, 352, 354, 355, 357, 358, 360, 363, 364, 367], "queri": [1, 3, 13, 31, 34, 36, 39, 87, 91, 107, 113, 149, 166, 169, 173, 175, 251, 349, 355, 363, 367], "defin": [1, 2, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 58, 87, 91, 107, 113, 150, 162, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 211, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 262, 264, 274, 289, 290, 291, 292, 293, 308, 337, 349, 350, 352, 355, 358, 363, 365, 368], "number": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 72, 74, 75, 80, 83, 84, 87, 90, 91, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 126, 127, 134, 140, 144, 145, 156, 161, 164, 167, 173, 175, 185, 186, 187, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 215, 216, 217, 220, 222, 223, 226, 227, 228, 229, 232, 236, 237, 240, 241, 243, 244, 245, 248, 249, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 277, 278, 279, 281, 317, 319, 322, 326, 328, 329, 330, 338, 339, 340, 344, 349, 350, 351, 352, 353, 354, 356, 358, 361, 362, 363, 364, 365, 368], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 45, 57, 73, 78, 87, 91, 107, 113, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 175, 176, 199, 201, 205, 206, 213, 214, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 290, 291, 292, 323, 349, 351, 352, 356, 357, 361, 362, 363, 365, 368], "deliv": [1, 2, 3, 15, 58, 349, 350, 353, 356, 367], "stack": [1, 2, 3, 7, 8, 13, 14, 17, 19, 20, 27, 28, 34, 35, 36, 38, 39, 41, 42, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 69, 87, 91, 100, 107, 108, 109, 113, 173, 199, 201, 203, 204, 205, 243, 250, 251, 308, 317, 344, 350, 353, 360, 361, 363, 365, 367], "user": [1, 2, 3, 5, 8, 31, 52, 54, 58, 60, 75, 87, 91, 107, 113, 128, 162, 167, 175, 176, 193, 276, 279, 309, 337, 345, 346, 349, 350, 353, 355, 356, 363, 367, 368], "reach": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 40, 73, 87, 91, 101, 102, 107, 113, 114, 115, 161, 236, 240, 241, 244, 349, 351, 358, 361, 362, 367, 368], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 74, 75, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 127, 132, 133, 135, 136, 137, 144, 145, 147, 151, 152, 154, 156, 158, 161, 163, 164, 166, 167, 173, 175, 183, 184, 185, 199, 201, 205, 208, 243, 258, 259, 260, 261, 262, 264, 265, 266, 272, 273, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 345, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "state": [1, 2, 3, 4, 13, 14, 15, 16, 31, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 103, 107, 108, 109, 110, 111, 112, 113, 123, 126, 127, 128, 130, 136, 145, 152, 161, 162, 166, 167, 173, 175, 176, 183, 184, 185, 188, 193, 197, 199, 200, 201, 203, 204, 205, 206, 208, 216, 219, 220, 222, 223, 229, 233, 243, 248, 254, 258, 260, 264, 273, 274, 276, 277, 278, 279, 287, 288, 289, 290, 291, 292, 293, 340, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 361, 362, 363, 368], "after": [1, 2, 3, 8, 13, 14, 16, 17, 19, 20, 25, 31, 40, 52, 69, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 104, 105, 107, 110, 113, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 183, 199, 201, 205, 213, 236, 238, 240, 246, 269, 279, 350, 351, 352, 353, 354, 356, 358, 361, 362, 363, 364, 365, 368], "predefin": [1, 350, 352, 356, 365], "becaus": [1, 3, 4, 7, 34, 36, 39, 40, 52, 87, 91, 107, 113, 136, 143, 161, 166, 172, 175, 192, 212, 232, 238, 239, 243, 245, 246, 247, 248, 249, 349, 350, 352, 354, 355, 356, 360, 361, 362, 363, 365, 368], "potenti": [1, 2, 363, 365], "comput": [1, 3, 4, 8, 13, 15, 20, 26, 31, 40, 83, 84, 87, 91, 96, 97, 107, 113, 145, 159, 167, 170, 175, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 225, 227, 228, 230, 233, 236, 237, 239, 240, 243, 244, 245, 247, 249, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 330, 345, 349, 351, 352, 353, 354, 360, 361, 362, 364, 365], "heavi": [1, 8, 52, 365], "crucial": [1, 2, 3, 236, 240, 241, 244, 265, 272, 274, 349, 350, 351, 352, 353, 355, 357, 361, 362, 363, 368], "configur": [1, 8, 20, 21, 40, 143, 188, 193, 219, 274, 276, 344, 349, 350, 351, 355, 361, 362, 363], "hyperparamet": [1, 72, 175, 258, 259, 261, 262, 264, 265, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 349, 363, 365], "appropri": [1, 3, 4, 7, 62, 70, 78, 79, 81, 82, 107, 113, 136, 337, 340, 349, 357, 365], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 73, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 336, 337, 338, 339, 340, 344, 345, 349, 352, 354, 358, 361, 362, 363, 364, 367], "take": [1, 2, 3, 8, 22, 40, 55, 83, 84, 87, 91, 96, 97, 107, 113, 130, 161, 164, 166, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 211, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 252, 255, 257, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 317, 328, 344, 346, 349, 350, 351, 353, 354, 355, 361, 362, 363, 365, 368], "consider": [1, 2, 3, 8, 350, 361, 362, 365], "whether": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 101, 102, 103, 107, 108, 109, 113, 114, 115, 123, 132, 135, 162, 167, 175, 184, 186, 187, 201, 205, 206, 253, 258, 259, 260, 261, 262, 264, 266, 267, 273, 274, 276, 277, 278, 279, 281, 287, 289, 292, 349, 350, 351, 353, 361, 362, 363, 368], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 67, 69, 74, 75, 76, 78, 85, 86, 87, 90, 91, 92, 93, 100, 103, 107, 108, 109, 113, 114, 115, 123, 124, 127, 130, 131, 132, 133, 136, 137, 139, 143, 145, 150, 151, 152, 154, 157, 158, 161, 162, 164, 166, 167, 172, 173, 175, 176, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 212, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 245, 247, 248, 249, 252, 255, 258, 260, 266, 271, 273, 274, 276, 277, 278, 280, 288, 289, 290, 291, 292, 293, 309, 311, 321, 322, 323, 326, 336, 338, 339, 340, 344, 346, 349, 350, 351, 352, 354, 356, 357, 360, 361, 362, 363, 364, 365, 367, 368], "occur": [1, 8, 14, 27, 28, 52, 87, 91, 93, 107, 113, 128, 137, 145, 150, 172, 184, 232, 238, 239, 245, 246, 247, 248, 249, 269, 365, 368], "serial": [1, 2, 3, 31, 87, 91, 107, 113, 173, 175], "parallel": [1, 3, 8, 87, 90, 91, 92, 107, 108, 109, 113, 167, 172, 176, 258, 337, 338, 339, 340, 350, 351, 361, 362], "syncdatacollector": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 31, 124, 127, 154, 336, 339, 342, 349, 350, 351, 352, 356, 358, 361, 362, 365], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 100, 103, 106, 107, 108, 109, 110, 113, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 338, 339, 340, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 365, 368], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 34, 36, 39, 45, 55, 60, 61, 88, 104, 107, 113, 173, 338, 339, 340, 349, 351, 367, 368], "multisyncdatacollector": [1, 14, 17, 18, 19, 20, 339, 342, 351, 356, 367], "split": [1, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 74, 75, 100, 108, 109, 199, 203, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 344, 346, 351, 354, 365, 367], "workload": 1, "across": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 35, 38, 41, 42, 67, 74, 75, 83, 84, 85, 86, 90, 92, 93, 95, 96, 97, 104, 105, 107, 110, 173, 175, 211, 244, 328, 342, 344, 349, 353, 357, 361, 362, 363], "aggreg": [1, 3, 52, 78, 108, 109, 184, 186, 187, 189, 190, 251], "result": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 73, 74, 75, 87, 88, 91, 107, 113, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 183, 184, 199, 201, 203, 205, 206, 211, 221, 237, 239, 240, 247, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 289, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 328, 344, 350, 352, 353, 354, 355, 356, 357, 358, 363, 364, 367, 368], "final": [1, 2, 3, 4, 20, 34, 36, 39, 40, 163, 172, 199, 201, 203, 205, 211, 236, 240, 241, 242, 244, 250, 289, 322, 344, 349, 350, 351, 357, 358, 361, 362, 363, 368], "multiasyncdatacollector": [1, 16, 17, 18, 19, 20, 338, 342, 349, 350, 351, 356, 367], "sever": [1, 2, 3, 8, 29, 31, 45, 55, 87, 91, 107, 113, 128, 130, 167, 175, 276, 349, 351, 357, 358, 365, 368], "gather": [1, 3, 17, 19, 20, 45, 61, 63, 64, 74, 80, 150, 210, 218, 288, 330, 343, 350, 351, 352, 356, 361, 362, 363, 365, 368], "continu": [1, 9, 24, 46, 75, 87, 91, 107, 108, 109, 113, 114, 115, 180, 189, 190, 191, 192, 244, 251, 258, 259, 266, 272, 276, 277, 278, 279, 280, 281, 289, 294, 302, 344, 349, 351, 352, 354, 361, 362, 363, 365, 367, 368], "concomitantli": 1, "network": [1, 4, 8, 31, 87, 91, 100, 107, 108, 109, 113, 175, 186, 187, 189, 190, 191, 192, 195, 197, 198, 203, 206, 211, 212, 214, 216, 217, 220, 222, 223, 224, 229, 233, 234, 235, 237, 248, 252, 259, 260, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 285, 287, 289, 290, 291, 292, 293, 335, 336, 344, 345, 346, 355, 358, 360, 363, 368], "impli": [1, 368], "weight": [1, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 40, 67, 69, 72, 83, 84, 87, 91, 107, 111, 112, 113, 131, 149, 163, 166, 167, 169, 171, 175, 199, 200, 201, 203, 204, 205, 211, 214, 248, 258, 259, 260, 266, 269, 279, 328, 335, 344, 346, 349, 350, 351, 352, 360, 363, 365, 367], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 34, 36, 39, 54, 60, 87, 90, 91, 92, 93, 107, 110, 113, 143, 145, 158, 167, 168, 173, 175, 176, 206, 211, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 361, 362, 363, 364, 365, 367, 368], "slightli": [1, 52, 344, 345, 352, 361, 363, 364, 365, 368], "lag": [1, 349, 350, 351], "therefor": [1, 2, 3, 7, 35, 38, 41, 42, 59, 60, 87, 91, 107, 113, 154, 276, 287, 355, 361, 368], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 69, 74, 75, 78, 80, 87, 91, 100, 103, 106, 107, 108, 109, 113, 121, 124, 127, 136, 143, 149, 154, 157, 161, 162, 164, 166, 168, 171, 172, 183, 184, 199, 200, 203, 204, 209, 210, 211, 236, 240, 241, 244, 245, 248, 249, 257, 258, 259, 260, 265, 266, 267, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 345, 346, 349, 350, 351, 353, 360, 361, 362, 363, 365, 368], "asynchron": [1, 9, 14, 20, 31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248, 258, 338, 349, 350, 351], "off": [1, 2, 4, 202, 228, 238, 279, 307, 322, 331, 344, 346, 349, 350, 351, 354, 355, 361, 362, 364, 368], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 69, 74, 80, 87, 91, 107, 108, 109, 113, 114, 132, 135, 139, 145, 162, 167, 172, 175, 176, 196, 199, 201, 203, 205, 212, 213, 233, 235, 237, 239, 246, 258, 265, 267, 272, 276, 322, 344, 346, 349, 350, 351, 352, 353, 354, 356, 357, 361, 362, 363, 364, 365, 368], "remot": [1, 2, 17, 18, 19, 20, 107, 113, 368], "rollout": [1, 2, 3, 13, 14, 15, 16, 20, 22, 40, 78, 83, 84, 87, 91, 93, 94, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 127, 130, 132, 135, 136, 137, 143, 147, 151, 152, 157, 158, 159, 161, 162, 164, 175, 176, 185, 201, 205, 208, 243, 244, 258, 307, 309, 330, 344, 349, 351, 352, 354, 355, 356, 357, 358, 364, 365, 367], "necessari": [1, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 52, 55, 56, 58, 59, 60, 87, 91, 101, 102, 107, 113, 114, 115, 158, 277, 289, 290, 291, 292, 293, 345, 349, 351, 354, 355, 356], "synchronis": [1, 88, 361, 362], "either": [1, 2, 5, 21, 31, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 87, 91, 107, 113, 161, 162, 175, 254, 281, 313, 346, 349, 350, 352, 361, 364, 365, 367, 368], "update_policy_weights_": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 349, 362, 367], "update_at_each_batch": [1, 13, 14, 16], "true": [1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 69, 72, 73, 74, 75, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 126, 127, 128, 131, 134, 137, 139, 142, 143, 144, 145, 149, 150, 152, 153, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 171, 173, 175, 176, 180, 183, 184, 185, 186, 187, 189, 190, 191, 192, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 227, 228, 232, 233, 234, 235, 236, 238, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 259, 260, 261, 264, 265, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 289, 290, 291, 292, 295, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 316, 319, 320, 322, 323, 326, 340, 344, 345, 346, 349, 350, 351, 352, 353, 354, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "second": [1, 3, 8, 52, 55, 78, 124, 199, 201, 203, 205, 239, 260, 273, 276, 279, 311, 325, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 131, 132, 133, 135, 136, 137, 143, 147, 148, 149, 151, 152, 154, 158, 161, 163, 165, 166, 167, 169, 171, 175, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 208, 211, 212, 213, 214, 219, 220, 221, 229, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 247, 248, 251, 253, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 307, 323, 328, 334, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364, 365, 367], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 45, 46, 47, 67, 74, 87, 91, 107, 113, 124, 139, 143, 166, 175, 195, 196, 200, 204, 215, 233, 234, 235, 238, 239, 242, 248, 254, 258, 260, 261, 262, 267, 273, 276, 278, 287, 288, 289, 290, 291, 292, 326, 342, 346, 349, 350, 351, 352, 353, 354, 360, 361, 362, 363, 368], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 69, 74, 75, 80, 86, 87, 88, 91, 103, 107, 113, 127, 145, 163, 166, 167, 173, 175, 180, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 249, 250, 251, 252, 255, 262, 265, 266, 274, 287, 289, 290, 291, 292, 307, 309, 313, 322, 330, 331, 332, 336, 338, 339, 344, 345, 346, 349, 351, 352, 353, 354, 363, 365, 368], "cpu": [1, 2, 3, 8, 10, 13, 14, 15, 16, 20, 22, 23, 25, 27, 31, 34, 36, 37, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 80, 83, 84, 85, 86, 87, 90, 91, 92, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 131, 132, 133, 135, 136, 137, 147, 149, 151, 152, 154, 158, 161, 163, 166, 167, 169, 171, 175, 180, 183, 185, 195, 199, 200, 201, 203, 204, 205, 208, 213, 214, 220, 221, 229, 232, 233, 234, 235, 237, 238, 239, 243, 245, 246, 247, 248, 251, 253, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 287, 307, 323, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364, 365, 367, 368], "slower": 1, "than": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 52, 54, 58, 67, 74, 75, 77, 78, 87, 91, 95, 107, 110, 113, 152, 192, 201, 203, 205, 206, 215, 230, 232, 236, 238, 248, 253, 274, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 343, 345, 349, 350, 351, 353, 355, 356, 361, 362, 363, 365, 367, 368], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 66, 67, 69, 70, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 88, 90, 91, 92, 93, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 121, 124, 127, 130, 132, 133, 134, 135, 144, 145, 149, 154, 157, 160, 162, 163, 164, 166, 167, 168, 171, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 212, 215, 216, 217, 218, 219, 221, 222, 223, 225, 230, 232, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 272, 273, 274, 276, 277, 278, 279, 280, 281, 287, 289, 290, 291, 292, 296, 297, 311, 319, 321, 322, 326, 330, 340, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 368], "cuda": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 87, 91, 93, 94, 95, 107, 113, 131, 143, 148, 149, 163, 166, 167, 169, 171, 175, 199, 200, 203, 204, 248, 318, 349, 350, 351, 352, 361, 362, 364, 368], "multipl": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 43, 69, 83, 84, 96, 97, 107, 113, 128, 130, 134, 144, 154, 157, 161, 166, 173, 199, 203, 205, 211, 213, 214, 232, 238, 245, 246, 248, 249, 252, 260, 266, 273, 276, 277, 281, 295, 340, 344, 346, 349, 350, 351, 353, 355, 356, 361, 362, 363, 365, 367], "infer": [1, 107, 113, 127, 173, 201, 205, 213, 237, 264, 307, 349, 351, 356, 358, 365], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 20, 31, 52, 55, 67, 74, 75, 83, 84, 85, 86, 87, 90, 91, 96, 97, 103, 104, 105, 107, 113, 144, 145, 167, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 250, 251, 252, 255, 279, 309, 316, 322, 338, 339, 340, 343, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367], "dispatch": [1, 17, 18, 19, 20, 230, 243, 309, 349], "avail": [1, 3, 4, 6, 20, 35, 38, 41, 42, 52, 55, 60, 67, 73, 74, 75, 85, 86, 95, 101, 102, 107, 108, 109, 110, 114, 115, 123, 126, 143, 196, 221, 245, 249, 274, 309, 338, 339, 344, 349, 350, 351, 352, 353, 354, 361, 362, 363, 365, 368], "speed": [1, 2, 4, 8, 26, 87, 91, 107, 113, 345, 349, 350, 351, 352, 361, 362, 363, 365], "avoid": [1, 2, 3, 31, 63, 64, 80, 87, 91, 107, 113, 120, 167, 173, 175, 232, 248, 253, 260, 273, 276, 279, 329, 351, 362], "oom": [1, 3, 34, 36, 39, 63, 64, 80], "choic": [1, 2, 54, 60, 107, 215, 344, 345, 349, 350, 355, 361, 362], "pass": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 31, 35, 38, 40, 41, 42, 45, 52, 55, 56, 58, 59, 60, 63, 64, 67, 69, 74, 75, 78, 80, 87, 88, 89, 91, 100, 104, 107, 108, 109, 113, 114, 123, 124, 132, 135, 152, 166, 168, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 211, 212, 213, 215, 216, 217, 219, 220, 222, 223, 225, 229, 230, 232, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 260, 273, 274, 276, 289, 290, 291, 292, 293, 307, 323, 338, 339, 340, 344, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 365, 368], "ie": [1, 3, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 45, 46, 47, 58, 66, 75, 87, 91, 95, 106, 107, 113, 127, 139, 168, 173, 184, 201, 205, 237, 258, 260, 261, 265, 266, 272, 273, 276, 277, 278, 279, 281, 289, 290, 291, 292, 344, 345, 350, 362], "store": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 74, 78, 80, 87, 91, 107, 113, 172, 173, 175, 185, 208, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 316, 342, 346, 349, 351, 352, 354, 356, 358, 361, 362, 364, 368], "while": [1, 2, 3, 7, 8, 31, 87, 91, 107, 113, 154, 167, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 265, 272, 273, 276, 279, 344, 349, 351, 352, 354, 356, 357, 361, 362, 363, 364, 365, 367], "wait": [1, 19, 20, 21, 352, 363], "also": [1, 2, 3, 8, 9, 11, 13, 14, 22, 31, 34, 36, 38, 39, 41, 52, 55, 56, 58, 59, 60, 61, 63, 64, 67, 69, 74, 75, 78, 80, 87, 91, 101, 102, 107, 108, 109, 113, 114, 115, 120, 123, 124, 126, 127, 134, 145, 152, 154, 157, 158, 161, 163, 167, 175, 183, 186, 187, 199, 203, 223, 243, 245, 250, 251, 252, 258, 259, 261, 262, 264, 265, 266, 272, 276, 279, 289, 296, 297, 307, 309, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 365, 368], "impact": [1, 58, 132, 135, 258, 260, 273, 276, 278, 350, 352, 361, 362], "memori": [1, 3, 8, 20, 26, 31, 34, 36, 39, 45, 52, 54, 55, 56, 58, 59, 60, 63, 87, 88, 91, 95, 107, 113, 127, 131, 149, 163, 166, 167, 169, 171, 173, 175, 203, 204, 248, 340, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "manag": [1, 8, 285, 286, 289, 290, 291, 292, 322, 355], "kei": [1, 2, 3, 7, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 66, 67, 69, 72, 74, 75, 78, 87, 91, 96, 97, 107, 108, 109, 113, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 148, 149, 150, 151, 152, 154, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 183, 184, 185, 195, 196, 201, 205, 207, 208, 221, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 307, 309, 320, 321, 322, 324, 325, 326, 330, 345, 346, 349, 351, 352, 353, 355, 360, 361, 362, 363, 365, 367, 368], "control": [1, 3, 5, 8, 15, 74, 85, 86, 87, 91, 100, 107, 108, 109, 113, 134, 183, 189, 190, 191, 192, 201, 205, 207, 208, 223, 230, 244, 248, 249, 250, 258, 260, 273, 276, 280, 289, 294, 302, 307, 344, 346, 349, 350, 351, 353, 354, 355, 361, 362, 363, 365], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 72, 73, 78, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 101, 102, 104, 105, 107, 110, 113, 114, 115, 127, 128, 132, 135, 140, 143, 144, 145, 149, 150, 161, 163, 164, 166, 167, 169, 175, 176, 195, 199, 200, 202, 203, 204, 205, 209, 210, 211, 228, 233, 234, 235, 237, 243, 245, 248, 249, 251, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 284, 287, 289, 290, 291, 292, 307, 309, 317, 321, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 365, 368], "storing_devic": [1, 13, 14, 15, 16, 17, 18, 19, 20, 350, 362], "dure": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 35, 36, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 67, 69, 72, 74, 87, 91, 107, 108, 109, 113, 123, 124, 127, 130, 132, 135, 137, 140, 147, 159, 167, 175, 201, 205, 212, 289, 291, 292, 322, 326, 345, 349, 350, 351, 352, 354, 355, 356, 358, 361, 362, 363, 365, 368], "heurist": [1, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 243, 244, 349, 356, 368], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 54, 72, 78, 83, 84, 87, 91, 96, 97, 107, 113, 214, 276, 289, 290, 291, 292, 293, 308, 343, 344, 346, 349, 350, 351, 352, 354, 356, 357, 362, 365, 368], "same": [1, 2, 3, 4, 11, 15, 17, 18, 19, 20, 25, 27, 28, 31, 34, 36, 39, 43, 45, 54, 58, 73, 74, 77, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 104, 105, 107, 108, 109, 110, 113, 127, 132, 134, 135, 140, 144, 145, 166, 167, 173, 175, 186, 187, 200, 201, 204, 205, 206, 209, 210, 211, 212, 237, 244, 252, 279, 349, 350, 351, 353, 354, 356, 360, 361, 362, 364, 365, 368], "default": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 72, 73, 74, 75, 78, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 121, 123, 124, 125, 126, 127, 128, 132, 134, 135, 136, 137, 139, 143, 144, 145, 147, 149, 150, 154, 156, 157, 158, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 175, 176, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 225, 226, 227, 228, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 252, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 336, 340, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 364, 365, 367, 368], "behaviour": [1, 3, 13, 14, 20, 58, 91, 128, 132, 135, 145, 150, 162, 183, 201, 202, 205, 228, 307, 322, 344, 350, 361, 365], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 27, 87, 91, 107, 113, 127, 132, 135, 145, 163, 164, 205, 245, 249, 250, 251, 328, 338, 339, 344, 349, 350, 353, 354, 362, 363, 368], "choos": [1, 100, 201, 205, 276, 342, 344, 345, 349, 350, 351, 361, 362, 365], "follow": [1, 2, 3, 6, 7, 8, 31, 34, 36, 37, 39, 40, 52, 54, 55, 56, 57, 58, 59, 60, 67, 83, 84, 87, 91, 96, 97, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 123, 143, 149, 169, 175, 186, 187, 199, 201, 203, 205, 206, 239, 246, 247, 257, 258, 259, 260, 261, 265, 266, 272, 273, 276, 277, 278, 279, 281, 309, 326, 344, 345, 346, 349, 350, 351, 352, 355, 356, 360, 361, 362, 363, 365, 367, 368], "max_frames_per_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 329, 349, 351, 367], "frame": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 52, 127, 140, 175, 236, 240, 243, 244, 308, 309, 311, 319, 322, 326, 329, 330, 349, 350, 351, 352, 354, 361, 362, 365, 367, 368], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 73, 74, 76, 77, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 104, 105, 106, 107, 110, 113, 123, 124, 127, 130, 131, 134, 137, 139, 142, 143, 145, 147, 148, 149, 157, 159, 163, 166, 167, 169, 171, 172, 173, 175, 176, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 212, 213, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 241, 243, 244, 247, 248, 249, 251, 252, 255, 260, 273, 276, 279, 288, 289, 290, 291, 292, 307, 308, 322, 346, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 363, 365, 367, 368], "frames_per_batch": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 124, 127, 154, 329, 349, 350, 351, 352, 356, 358, 361, 362, 365, 367], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 31, 38, 40, 41, 52, 54, 55, 58, 69, 72, 74, 75, 78, 87, 88, 91, 101, 102, 107, 108, 109, 113, 114, 115, 149, 154, 157, 161, 162, 163, 164, 171, 173, 175, 196, 199, 200, 201, 203, 205, 211, 212, 216, 220, 221, 229, 236, 238, 239, 240, 247, 251, 295, 298, 299, 300, 301, 303, 304, 305, 306, 309, 322, 323, 338, 339, 344, 349, 350, 351, 352, 354, 355, 356, 358, 361, 362, 363, 364, 365, 367, 368], "init_random_fram": [1, 13, 14, 15, 16, 17, 18, 19, 20, 329, 349, 350, 358], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 40, 44, 46, 47, 58, 60, 68, 78, 87, 91, 103, 107, 113, 134, 144, 145, 163, 176, 199, 201, 203, 205, 240, 245, 248, 249, 259, 277, 322, 330, 344, 349, 350, 351, 352, 353, 354, 356, 363, 364, 365, 367, 368], "rand_step": [1, 3, 85, 86, 87, 88, 90, 91, 92, 98, 99, 103, 104, 105, 107, 113, 142, 163, 173, 363, 367, 368], "reset_at_each_it": [1, 13, 14, 15, 16, 17, 18, 19, 20, 349], "split_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 54, 56, 58, 59, 60, 349, 350, 351], "trajectori": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 41, 52, 54, 55, 56, 58, 59, 60, 66, 67, 74, 75, 78, 83, 84, 87, 91, 96, 97, 107, 113, 150, 161, 166, 175, 185, 205, 208, 244, 276, 289, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 317, 342, 345, 349, 350, 351, 352, 353, 356, 358, 363, 367, 368], "pad": [1, 2, 3, 22, 37, 43, 54, 56, 58, 59, 60, 127, 186, 187, 189, 190, 205, 209, 210, 211, 323], "along": [1, 2, 3, 13, 14, 22, 27, 28, 34, 36, 39, 40, 45, 54, 56, 58, 59, 60, 64, 67, 69, 74, 75, 78, 80, 126, 127, 128, 145, 147, 150, 157, 165, 205, 206, 209, 210, 214, 238, 245, 248, 249, 274, 344, 349, 350, 352, 353, 355, 361, 362, 363, 365], "point": [1, 2, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 57, 62, 66, 67, 70, 78, 79, 81, 82, 87, 91, 107, 113, 123, 126, 127, 131, 149, 162, 163, 165, 166, 167, 169, 171, 175, 207, 248, 257, 267, 326, 343, 350, 351, 360, 361, 362, 363, 365, 368], "boolean": [1, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 67, 74, 75, 91, 123, 150, 161, 184, 209, 210, 236, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 346, 352], "repres": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 41, 56, 85, 86, 87, 91, 107, 113, 114, 115, 140, 150, 173, 175, 196, 209, 210, 221, 238, 239, 246, 247, 249, 284, 289, 323, 349, 351, 352, 353, 354, 355, 361, 362], "valid": [1, 2, 3, 22, 34, 36, 37, 45, 61, 78, 116, 123, 150, 167, 175, 186, 187, 206, 209, 210, 236, 244, 273, 289, 290, 291, 292, 323, 346, 368], "exploration_typ": [1, 13, 14, 15, 16, 17, 18, 19, 20, 322, 342, 349, 350], "strategi": [1, 2, 15, 58, 72, 100, 210, 218, 240, 344, 346, 349, 350, 354, 361, 362, 365], "reset_when_don": [1, 13, 14, 15, 16], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 44, 46, 47, 49, 69, 87, 91, 103, 107, 108, 109, 113, 114, 116, 124, 126, 127, 136, 143, 161, 162, 166, 167, 172, 173, 175, 186, 187, 209, 210, 211, 212, 236, 238, 245, 246, 249, 252, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 309, 326, 336, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 368], "organ": [1, 2, 363, 365], "within": [1, 2, 3, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 110, 113, 124, 127, 132, 135, 136, 154, 161, 172, 173, 175, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 262, 267, 287, 307, 309, 344, 350, 353, 354, 355, 356, 357, 358, 361, 363, 367], "differ": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 58, 72, 83, 84, 87, 91, 96, 97, 100, 107, 108, 109, 113, 123, 127, 134, 145, 152, 167, 168, 175, 196, 199, 200, 201, 203, 204, 205, 206, 208, 211, 212, 221, 272, 276, 284, 289, 290, 291, 295, 296, 297, 322, 326, 328, 338, 339, 344, 345, 346, 349, 350, 351, 353, 355, 357, 360, 361, 362, 363, 364, 365, 368], "how": [1, 2, 3, 17, 18, 19, 31, 35, 41, 58, 66, 67, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 175, 258, 260, 271, 273, 276, 309, 311, 326, 343, 344, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 363, 364, 365, 367, 368], "tabl": [1, 344, 350, 354], "summar": [1, 3, 363], "what": [1, 3, 8, 35, 44, 52, 74, 87, 91, 107, 113, 136, 163, 176, 183, 246, 343, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 367, 368], "expect": [1, 2, 3, 4, 7, 25, 31, 38, 44, 45, 67, 73, 74, 87, 91, 103, 106, 107, 113, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 145, 147, 149, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 199, 200, 201, 203, 204, 205, 211, 212, 239, 244, 248, 251, 258, 259, 260, 261, 262, 264, 265, 266, 272, 273, 274, 276, 277, 278, 279, 281, 287, 330, 343, 344, 345, 346, 349, 351, 352, 353, 354, 355, 356, 361, 362, 363, 365, 368], "n": [1, 2, 3, 6, 7, 23, 26, 31, 33, 40, 87, 91, 107, 113, 127, 134, 139, 168, 175, 199, 200, 203, 208, 243, 244, 249, 258, 266, 274, 288, 323, 344, 346, 350, 352, 354, 361, 362, 365, 368], "b": [1, 2, 3, 7, 8, 22, 25, 27, 34, 36, 38, 39, 40, 41, 42, 78, 199, 200, 203, 204, 211, 212, 213, 214, 220, 229, 252, 289, 290, 291, 292, 293, 295, 309, 344, 350, 364, 365], "cat_result": [1, 13, 14], "na": 1, "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 74, 75, 80, 83, 84, 87, 90, 91, 93, 94, 96, 97, 103, 104, 105, 107, 110, 111, 112, 113, 121, 123, 125, 127, 128, 130, 131, 133, 134, 143, 144, 145, 149, 154, 157, 159, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 185, 186, 187, 189, 190, 191, 192, 193, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 218, 222, 223, 226, 227, 228, 230, 232, 236, 237, 239, 240, 241, 244, 247, 248, 251, 252, 255, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 287, 288, 289, 290, 291, 292, 295, 296, 297, 317, 324, 336, 340, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368], "t": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 73, 78, 87, 88, 90, 91, 104, 105, 107, 113, 123, 127, 132, 135, 136, 149, 153, 154, 162, 164, 171, 173, 175, 176, 183, 199, 203, 238, 244, 248, 280, 289, 290, 291, 292, 293, 295, 309, 316, 326, 328, 340, 343, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 367, 368], "p": [1, 2, 4, 69, 72, 88, 111, 112], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 52, 54, 56, 58, 59, 60, 83, 84, 87, 91, 96, 97, 107, 108, 109, 113, 131, 132, 133, 135, 149, 154, 158, 162, 163, 165, 166, 167, 169, 171, 172, 175, 199, 202, 203, 206, 211, 223, 227, 228, 248, 251, 257, 258, 259, 261, 262, 264, 265, 266, 272, 274, 276, 277, 278, 279, 281, 328, 338, 339, 340, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 368], "case": [1, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 78, 87, 91, 107, 113, 132, 133, 135, 165, 167, 176, 205, 206, 212, 245, 248, 249, 251, 252, 257, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 289, 290, 291, 292, 309, 317, 328, 338, 339, 340, 342, 344, 346, 349, 350, 351, 352, 353, 354, 356, 357, 361, 362, 363, 365, 368], "dimens": [1, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 44, 45, 46, 47, 54, 56, 58, 59, 60, 63, 64, 67, 74, 75, 78, 80, 85, 86, 87, 90, 91, 92, 93, 107, 113, 114, 115, 126, 127, 128, 139, 145, 147, 150, 157, 160, 165, 168, 173, 186, 187, 188, 193, 201, 203, 205, 206, 209, 210, 211, 213, 214, 219, 220, 224, 225, 226, 227, 230, 238, 243, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 340, 344, 349, 350, 351, 352, 353, 361, 362, 363, 365], "time": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 18, 19, 20, 31, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 78, 83, 84, 87, 88, 91, 96, 97, 100, 106, 107, 108, 109, 110, 113, 120, 126, 128, 150, 157, 163, 164, 167, 173, 175, 183, 197, 199, 203, 205, 243, 244, 260, 266, 269, 273, 274, 276, 277, 281, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 326, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "adapt": [1, 121, 161, 273, 349, 363], "equal": [1, 13, 14, 16, 52, 67, 74, 75, 104, 107, 113, 144, 145, 186, 187, 199, 201, 203, 205, 206, 212, 280, 284, 317, 338, 339, 349, 351, 364], "introduc": [1, 2, 107, 113, 199, 201, 203, 205, 244, 349, 361], "some": [1, 2, 3, 4, 7, 8, 9, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 54, 60, 63, 64, 69, 78, 80, 83, 84, 87, 91, 96, 97, 101, 102, 107, 108, 109, 113, 114, 115, 123, 149, 167, 169, 175, 176, 189, 201, 205, 225, 249, 250, 251, 309, 317, 329, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 365, 367, 368], "confus": [1, 31, 87, 91, 107, 113, 167, 175], "other": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 34, 35, 36, 39, 41, 42, 45, 52, 54, 56, 58, 59, 60, 63, 64, 65, 69, 72, 73, 74, 75, 76, 77, 80, 87, 90, 91, 92, 103, 107, 113, 130, 133, 134, 151, 158, 165, 169, 173, 175, 199, 201, 205, 214, 215, 237, 239, 240, 247, 249, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 289, 307, 323, 338, 339, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364, 367, 368], "better": [1, 3, 8, 9, 13, 14, 201, 205, 345, 351, 353, 363], "consist": [1, 2, 3, 31, 35, 38, 41, 42, 55, 58, 87, 91, 107, 113, 143, 172, 175, 187, 206, 349, 350, 351, 363, 364, 368], "interact": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 58, 87, 91, 101, 102, 107, 113, 167, 245, 249, 349, 351, 353, 354, 356, 361, 362, 363, 368], "keep": [1, 3, 4, 7, 8, 14, 35, 38, 41, 42, 73, 78, 107, 113, 145, 149, 171, 173, 175, 183, 244, 319, 326, 349, 350, 351, 352, 356, 357, 358, 362, 363, 365, 367, 368], "separ": [1, 2, 4, 8, 13, 14, 16, 17, 19, 20, 22, 52, 55, 149, 171, 259, 261, 264, 266, 277, 279, 281, 349, 350, 354, 355, 361, 362, 365, 368], "interchang": [1, 351, 353, 357, 364, 365], "between": [1, 2, 3, 4, 5, 13, 14, 16, 20, 31, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 73, 74, 75, 87, 91, 101, 102, 107, 113, 114, 115, 134, 144, 155, 167, 175, 176, 186, 187, 195, 199, 201, 205, 206, 211, 212, 239, 245, 249, 258, 260, 261, 264, 265, 266, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 284, 289, 322, 326, 345, 349, 350, 352, 356, 361, 362, 363, 365, 368], "wherea": [1, 2, 21, 58, 83, 84, 85, 86, 90, 92, 93, 96, 97, 104, 105, 110, 134, 175, 274, 346, 357], "correspond": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 55, 58, 60, 66, 67, 87, 91, 103, 107, 113, 149, 163, 167, 171, 173, 175, 201, 203, 205, 209, 210, 240, 241, 244, 245, 249, 262, 265, 266, 279, 287, 289, 290, 291, 292, 293, 349, 350, 351, 353, 355, 356, 357, 361, 362, 363, 364], "sub": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 52, 58, 67, 74, 78, 87, 91, 107, 113, 150, 250, 251, 317, 326, 344, 349, 350, 351, 356, 360, 367, 368], "doesn": [1, 4, 11, 78, 104, 132, 135, 353], "understood": [1, 349], "serv": [1, 17, 19, 20, 93, 365, 368], "basi": [1, 78, 211, 365], "simplest": [1, 78, 252, 349, 351, 352, 354, 361, 362, 365, 368], "scenario": [1, 2, 101, 102, 107, 114, 115, 307, 349, 354, 361, 362, 363], "transit": [1, 31, 54, 58, 75, 78, 87, 91, 107, 113, 175, 254, 349, 352, 353, 354, 356, 361, 363, 365], "sampl": [1, 4, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 87, 91, 103, 106, 107, 113, 126, 127, 150, 154, 177, 178, 181, 182, 185, 194, 202, 208, 209, 210, 218, 219, 222, 227, 228, 232, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 258, 259, 260, 261, 262, 264, 273, 275, 276, 281, 317, 323, 326, 329, 342, 344, 349, 350, 351, 352, 353, 354, 356, 358, 361, 362, 364, 367, 368], "attent": [1, 2, 8, 349, 352, 368], "given": [1, 2, 3, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 74, 75, 87, 91, 103, 107, 113, 131, 134, 145, 149, 163, 166, 167, 169, 171, 175, 183, 185, 196, 197, 199, 203, 208, 221, 225, 232, 238, 239, 240, 243, 244, 247, 248, 249, 250, 251, 253, 257, 261, 262, 264, 288, 289, 290, 291, 292, 293, 295, 318, 322, 336, 344, 346, 349, 350, 351, 353, 354, 355, 356, 357, 362, 363, 368], "built": [1, 2, 3, 5, 7, 69, 83, 84, 90, 96, 97, 106, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 282, 287, 334, 336, 337, 340, 349, 350, 351, 352, 355, 357, 365, 368], "flatten": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 39, 44, 46, 47, 78, 124, 139, 323, 352, 362], "suffici": [1, 3, 4, 349], "preprocess": [1, 2, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 350], "popul": [1, 2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 142, 163, 349, 351, 352, 354, 356, 363, 365], "replaybuff": [1, 2, 35, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 74, 81, 127, 150, 154, 175, 262, 267, 287, 334, 336, 342, 351, 356, 358, 361, 362, 364, 365, 367], "lazytensorstorag": [1, 2, 35, 38, 41, 42, 66, 78, 154, 175, 351, 358, 362, 365], "lambda": [1, 2, 11, 13, 14, 15, 16, 20, 21, 38, 78, 87, 88, 91, 107, 113, 120, 124, 143, 163, 175, 230, 238, 243, 246, 268, 270, 289, 292, 300, 301, 305, 306, 307, 336, 345, 349, 350, 361, 362, 365, 367, 368], "reshap": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 58, 74, 78, 124, 201, 205, 206, 307, 351, 361, 362], "extend": [1, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 69, 70, 74, 75, 77, 78, 79, 81, 82, 126, 154, 175, 323, 346, 349, 350, 351, 352, 356, 358, 361, 362, 364, 365, 367], "slice": [1, 2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 74, 75, 126, 365], "recommend": [1, 2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 34, 35, 36, 38, 39, 41, 42, 78, 95, 356, 361, 362], "achiev": [1, 2, 3, 4, 31, 87, 91, 95, 107, 113, 162, 175, 184, 323, 346, 349, 350, 351, 352, 361, 362, 363, 365, 368], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 35, 36, 38, 39, 41, 42, 45, 58, 60, 61, 78, 87, 88, 91, 95, 107, 108, 113, 114, 115, 124, 127, 149, 166, 167, 169, 172, 173, 175, 180, 183, 186, 187, 189, 190, 191, 192, 193, 198, 201, 205, 206, 207, 211, 212, 237, 249, 262, 267, 277, 279, 287, 309, 323, 330, 331, 332, 336, 338, 339, 344, 349, 350, 351, 352, 354, 357, 361, 362, 363, 364, 365, 367, 368], "multidimension": [1, 2, 41, 66, 67, 365], "slicesampl": [1, 2, 52, 67, 365], "sampler": [1, 2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 150, 262, 267, 287, 349, 351, 361, 362, 365], "One": [1, 2, 4, 8, 30, 33, 45, 78, 83, 84, 107, 113, 127, 154, 169, 218, 236, 248, 252, 280, 284, 313, 349, 350, 365, 368], "must": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 69, 74, 75, 76, 77, 78, 80, 83, 87, 88, 91, 96, 107, 108, 109, 110, 113, 114, 123, 124, 127, 130, 136, 140, 143, 145, 147, 158, 162, 163, 164, 167, 168, 173, 175, 186, 187, 196, 201, 205, 206, 209, 210, 211, 212, 221, 232, 238, 239, 243, 245, 246, 247, 248, 249, 252, 253, 258, 259, 261, 262, 264, 265, 266, 267, 268, 272, 274, 276, 277, 278, 279, 280, 281, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 349, 350, 351, 352, 354, 360, 363, 365], "ensur": [1, 2, 3, 31, 35, 41, 66, 67, 73, 87, 91, 107, 113, 127, 149, 161, 167, 169, 173, 175, 238, 344, 350, 351, 363, 365], "shape": [1, 2, 3, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 78, 80, 85, 86, 87, 90, 91, 92, 96, 97, 100, 101, 102, 106, 107, 108, 109, 111, 112, 113, 114, 115, 124, 126, 128, 132, 135, 136, 137, 143, 145, 147, 151, 152, 154, 158, 161, 163, 165, 173, 174, 175, 176, 180, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 221, 226, 229, 232, 233, 234, 235, 237, 238, 239, 243, 245, 246, 247, 248, 251, 252, 253, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 284, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 317, 323, 326, 336, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 367, 368], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 52, 202, 227, 228, 257, 343, 349, 350, 351, 352, 355, 361, 362, 364, 368], "need": [1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 19, 20, 31, 34, 36, 76, 78, 87, 91, 95, 100, 107, 108, 109, 113, 127, 130, 139, 149, 152, 164, 167, 171, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 213, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 246, 247, 248, 252, 255, 257, 266, 277, 278, 279, 281, 288, 293, 309, 326, 340, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 365, 367, 368], "dimension": [1, 35, 38, 41, 42, 134, 201, 205, 289, 294, 302, 362], "num_slic": [1, 2, 52, 58, 67, 74, 75, 365], "4": [1, 2, 3, 7, 23, 25, 26, 27, 31, 33, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 74, 75, 80, 83, 84, 85, 86, 87, 91, 96, 97, 98, 99, 100, 103, 105, 107, 111, 112, 113, 121, 123, 124, 127, 136, 154, 161, 162, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 203, 204, 206, 208, 211, 212, 215, 216, 217, 218, 219, 220, 221, 229, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 253, 258, 259, 261, 262, 264, 265, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 307, 308, 344, 348, 349, 350, 351, 352, 356, 357, 361, 362, 363, 364, 365, 366, 367, 368], "trajectory_kei": [1, 22], "traj_id": [1, 2, 3, 13, 14, 15, 22, 124, 154, 356, 365, 367], "total_fram": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 124, 127, 154, 326, 329, 336, 346, 349, 350, 351, 352, 356, 358, 361, 362, 365, 367], "dim": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 74, 127, 128, 147, 163, 168, 173, 204, 225, 230, 243, 340, 350, 351, 361, 363, 365], "requir": [1, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 54, 56, 58, 67, 74, 75, 87, 91, 95, 104, 107, 110, 113, 124, 131, 149, 163, 166, 167, 169, 171, 175, 206, 230, 248, 250, 251, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 307, 309, 311, 344, 346, 349, 350, 351, 352, 353, 354, 355, 357, 361, 362, 363, 365, 368], "ndim": [1, 2, 35, 38, 41, 42, 63, 64, 78, 80, 87, 91, 107, 113, 175, 243], "parallelenv": [1, 2, 3, 13, 14, 15, 16, 19, 78, 87, 91, 104, 108, 109, 110, 113, 307, 337, 342, 349, 350, 351, 353, 360, 367, 368], "make_env": [1, 3, 107, 113, 115, 173, 307, 331, 332, 349, 350, 368], "regular": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 39, 66, 72, 87, 91, 107, 113, 167, 195, 221, 239, 246, 247, 248, 249, 267, 328, 342, 346, 349, 350, 353, 354, 358, 365, 368], "behav": [1, 3, 93, 103, 199, 203, 218, 265, 272, 364], "iif": 1, "accordingli": [1, 161, 162, 203, 246, 352, 353, 355, 356, 357], "3": [1, 2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 20, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 69, 74, 75, 78, 80, 85, 86, 87, 90, 91, 92, 93, 94, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 121, 123, 124, 127, 131, 134, 136, 137, 143, 145, 147, 149, 151, 152, 154, 157, 158, 161, 162, 163, 165, 166, 167, 169, 171, 175, 180, 185, 186, 187, 189, 190, 191, 193, 196, 198, 199, 200, 201, 203, 204, 205, 206, 208, 211, 212, 215, 218, 220, 230, 232, 233, 234, 235, 238, 239, 245, 247, 248, 251, 252, 253, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 272, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 295, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 325, 344, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 361, 362, 363, 364, 365, 366, 367, 368], "isn": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 39, 58, 66, 78, 123, 136, 176, 238, 248, 354, 355, 357, 361, 362], "current": [1, 2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 75, 87, 91, 93, 104, 107, 113, 123, 124, 127, 150, 162, 163, 164, 166, 167, 175, 177, 178, 183, 197, 223, 243, 244, 258, 260, 267, 273, 276, 278, 279, 312, 346, 349, 350, 351, 352, 353, 355, 356, 357, 361, 362, 363, 365, 367, 368], "fulli": [1, 8, 31, 87, 91, 107, 113, 175, 200, 204, 350, 355, 363, 365], "ani": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 91, 104, 107, 108, 109, 113, 114, 115, 121, 123, 139, 149, 150, 154, 167, 169, 173, 175, 176, 184, 186, 187, 193, 206, 214, 237, 243, 248, 249, 250, 251, 258, 259, 261, 262, 264, 265, 266, 272, 274, 276, 277, 278, 279, 281, 289, 291, 292, 307, 314, 326, 343, 349, 350, 351, 354, 355, 361, 362, 363, 365, 367, 368], "consecut": [1, 3, 52, 73, 95, 205, 244, 309, 352, 353, 356, 362, 365, 368], "won": [1, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 58, 87, 88, 90, 91, 104, 105, 107, 113, 149, 171, 175, 326, 340, 350, 351, 353, 354], "therebi": [1, 307, 345, 349, 350], "interrupt": [1, 2, 91, 243, 295], "These": [1, 2, 7, 31, 40, 55, 60, 87, 91, 107, 113, 114, 149, 171, 175, 344, 345, 349, 351, 361, 362, 363, 365, 368], "tool": [1, 2, 3, 5, 352, 353, 361, 363, 365, 368], "backend": [1, 3, 7, 11, 17, 18, 20, 21, 87, 90, 91, 107, 113, 117, 120, 346, 349, 351, 352, 353, 356, 357, 363], "gloo": [1, 17, 18, 21], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 21, 342], "rpc": [1, 19, 21], "rpcdatacollector": [1, 21, 342], "launcher": [1, 17, 18, 19, 21], "rai": [1, 20], "submitit": [1, 17, 18, 19, 21], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 125, 126, 128, 131, 132, 133, 134, 135, 136, 137, 143, 145, 147, 149, 151, 152, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 175, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 256, 258, 259, 261, 262, 264, 265, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 317, 324, 325, 336, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "multiprocess": [1, 2, 3, 17, 18, 19, 52, 60, 88, 89, 107, 113, 173, 349, 350, 351, 352, 361, 362, 363, 364, 368], "synchron": [1, 13, 18, 20, 104, 338, 339, 350, 351, 361], "mode": [1, 6, 13, 14, 15, 16, 17, 18, 19, 20, 31, 87, 91, 104, 107, 113, 132, 135, 162, 167, 173, 175, 177, 181, 182, 194, 201, 202, 205, 218, 226, 227, 228, 245, 249, 274, 307, 322, 349, 350, 352, 361, 362, 367, 368], "find": [1, 4, 6, 7, 17, 18, 19, 35, 37, 43, 74, 75, 203, 236, 244, 320, 324, 349, 350, 354, 355, 361, 362], "folder": [1, 2, 34, 36, 39, 114, 350], "all": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 85, 86, 87, 88, 90, 91, 92, 93, 101, 102, 103, 107, 108, 109, 113, 114, 115, 116, 126, 127, 130, 131, 132, 133, 135, 138, 143, 144, 145, 149, 157, 159, 163, 164, 166, 167, 169, 171, 173, 175, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 211, 212, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 248, 249, 251, 252, 255, 269, 274, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 321, 326, 329, 338, 339, 340, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 367, 368], "variou": [1, 2, 3, 201, 205, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 282, 287, 309, 338, 339, 349, 350, 351, 353, 354, 355, 357, 361, 362, 365, 368], "machin": [1, 2, 7, 17, 18, 19, 31, 57, 95, 361, 362], "wonder": 1, "why": [1, 2, 3, 183, 361, 363, 368], "instead": [1, 4, 7, 8, 11, 26, 31, 58, 87, 91, 107, 113, 139, 163, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 258, 260, 262, 265, 266, 267, 272, 273, 276, 277, 278, 279, 287, 289, 293, 297, 340, 344, 353, 354, 355, 358, 360, 363, 365, 368], "lower": [1, 2, 3, 20, 24, 130, 173, 222, 223, 252, 351, 361, 363], "io": [1, 52, 58, 96, 97, 104, 203, 204], "footprint": [1, 2, 365], "commun": [1, 2, 3, 107, 343, 351, 368], "yet": [1, 83, 84, 96, 97, 364], "spec": [1, 2, 3, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 48, 49, 50, 54, 83, 84, 87, 89, 90, 91, 92, 93, 96, 97, 103, 104, 105, 107, 110, 113, 114, 115, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 147, 149, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 180, 183, 184, 196, 221, 223, 232, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 287, 344, 349, 350, 351, 352, 353, 354, 358, 360, 361, 362, 367], "plai": [1, 3, 108, 109, 127, 350, 351, 355, 365, 368], "role": [1, 3, 102, 350, 355, 368], "opposit": [1, 361], "direct": [1, 2, 31, 87, 91, 107, 113, 175, 199, 203, 274, 350, 355], "sinc": [1, 2, 3, 4, 5, 7, 31, 35, 38, 41, 42, 52, 60, 75, 78, 87, 91, 107, 108, 109, 110, 113, 175, 176, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 211, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 252, 255, 307, 309, 349, 350, 351, 352, 353, 354, 355, 361, 363, 364, 365, 367, 368], "faster": [1, 2, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 59, 60, 104, 289, 290, 291, 292, 352, 361, 362], "share": [1, 3, 6, 8, 22, 34, 36, 39, 63, 64, 65, 67, 74, 76, 77, 80, 88, 107, 113, 173, 201, 205, 211, 212, 233, 234, 235, 258, 260, 261, 265, 266, 272, 273, 276, 277, 278, 279, 281, 340, 342, 344, 351, 352, 358, 360, 361, 362, 367, 368], "among": [1, 3, 108, 109, 361, 362], "prohibit": [1, 3, 78], "slow": [1, 3, 4, 34, 36, 39], "compar": [1, 3, 58, 78, 322, 345, 349, 351, 354, 355, 361, 362, 365, 368], "gpu": [1, 7, 8, 31, 63, 64, 80, 87, 91, 95, 107, 113, 175, 349, 351, 352, 361, 362, 368], "nativ": [1, 7, 9, 56, 87, 91, 107, 113, 127, 309, 352, 365], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 39, 41, 52, 66, 67, 74, 78, 83, 84, 91, 123, 145, 173, 185, 194, 197, 199, 201, 203, 205, 208, 219, 226, 236, 245, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 273, 275, 276, 277, 278, 279, 281, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 344, 345, 349, 350, 351, 354, 361, 362, 363, 365, 367, 368], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 69, 72, 74, 75, 77, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 101, 102, 104, 105, 107, 110, 113, 114, 115, 123, 124, 128, 130, 131, 149, 157, 158, 163, 165, 166, 167, 169, 171, 175, 201, 205, 209, 210, 211, 232, 236, 237, 238, 240, 241, 243, 244, 245, 246, 248, 249, 252, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 273, 275, 276, 277, 278, 279, 281, 283, 287, 289, 290, 291, 292, 293, 297, 307, 316, 337, 349, 350, 351, 354, 357, 361, 362, 365, 368], "build": [1, 3, 7, 22, 25, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 83, 84, 87, 91, 92, 93, 96, 97, 101, 102, 104, 107, 110, 113, 114, 115, 154, 173, 175, 185, 201, 205, 208, 242, 245, 249, 326, 333, 334, 335, 344, 346, 351, 352, 354, 355, 356, 357, 361, 362, 363, 364, 367, 368], "mani": [1, 2, 3, 4, 38, 83, 84, 85, 86, 87, 90, 92, 93, 96, 97, 104, 105, 110, 258, 260, 266, 273, 276, 277, 281, 344, 349, 350, 351, 353, 354, 356, 358, 361, 362, 363, 365, 368], "eg": [1, 2, 3, 11, 34, 36, 39, 63, 64, 65, 76, 77, 80, 85, 86, 87, 90, 91, 92, 93, 95, 107, 110, 113, 134, 161, 167, 211, 237, 309], "gymnasium": [1, 3, 5, 11, 87, 90, 91, 92, 98, 99, 107, 113, 117, 120, 137, 158, 161, 172, 350, 351, 363, 367], "warn": [1, 3, 236, 240, 241, 244, 350, 353, 355, 356, 357], "quickli": [1, 3, 350, 361, 362, 368], "becom": [1, 3, 4, 20, 199, 203, 361, 362, 368], "quit": [1, 3, 52, 87, 91, 107, 113, 344, 349, 350, 351, 354, 361, 362, 368], "annoi": [1, 3], "By": [1, 2, 3, 33, 85, 86, 87, 90, 91, 92, 93, 101, 102, 107, 108, 109, 110, 113, 114, 115, 230, 249, 274, 322, 340, 349, 361, 364, 365, 368], "filter": [1, 2, 3, 4, 45, 67, 74, 75, 258, 259, 261, 265, 266, 272, 276, 277, 279, 353], "out": [1, 2, 3, 4, 5, 9, 20, 31, 45, 54, 58, 67, 74, 75, 87, 91, 107, 108, 109, 113, 163, 175, 176, 199, 200, 203, 209, 210, 213, 214, 232, 237, 238, 239, 244, 245, 246, 247, 248, 249, 285, 286, 346, 349, 350, 351, 352, 353, 354, 356, 361, 362, 363, 365, 367, 368], "still": [1, 2, 3, 9, 58, 83, 84, 87, 91, 96, 97, 107, 113, 236, 273, 274, 349, 350, 352, 360, 363, 365, 368], "wish": [1, 3, 13, 14, 16, 58, 120, 355, 365], "displai": [1, 3, 7, 87, 91, 107, 113, 326, 346, 349, 350, 361, 362, 363], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 72, 73, 74, 75, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 127, 128, 131, 132, 135, 136, 137, 139, 142, 143, 144, 145, 147, 149, 150, 151, 152, 154, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 171, 173, 175, 176, 183, 184, 185, 186, 187, 189, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 220, 221, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 287, 289, 290, 291, 292, 298, 299, 300, 301, 303, 304, 305, 306, 309, 316, 319, 320, 322, 323, 324, 326, 340, 344, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "central": [2, 211, 349, 350, 353, 361, 362, 365], "part": [2, 3, 4, 8, 31, 40, 52, 55, 56, 58, 59, 60, 83, 87, 91, 96, 107, 113, 126, 145, 154, 157, 175, 183, 201, 205, 253, 317, 340, 349, 351, 352, 358, 361, 363, 368], "algorithm": [2, 3, 8, 9, 103, 258, 276, 277, 279, 342, 345, 346, 349, 350, 351, 352, 355, 356, 357, 361, 362, 364, 365], "implement": [2, 3, 9, 11, 13, 14, 15, 31, 76, 87, 91, 103, 104, 107, 113, 124, 131, 132, 133, 137, 140, 143, 151, 152, 158, 161, 166, 167, 173, 175, 186, 199, 200, 201, 202, 203, 204, 205, 226, 227, 228, 258, 259, 263, 264, 265, 272, 274, 275, 276, 278, 279, 307, 317, 331, 344, 346, 349, 350, 351, 352, 354, 355, 356, 361, 362, 363, 367], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 25, 31, 35, 38, 40, 41, 42, 52, 54, 58, 60, 73, 75, 78, 83, 84, 87, 88, 91, 95, 96, 97, 107, 113, 127, 143, 149, 152, 169, 172, 173, 175, 176, 185, 205, 211, 212, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 309, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "give": [2, 3, 7, 41, 55, 87, 91, 103, 107, 113, 127, 343, 345, 349, 350, 361, 362, 363, 364, 367], "abil": [2, 274, 363, 365], "panel": [2, 351], "usag": [2, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 54, 60, 78, 124, 127, 136, 201, 205, 265, 272, 279, 282, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "includ": [2, 3, 4, 7, 9, 20, 31, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 76, 77, 80, 87, 91, 103, 107, 113, 162, 167, 173, 175, 274, 279, 329, 344, 346, 349, 350, 351, 352, 361, 362, 363, 365, 368], "almost": [2, 352], "physic": [2, 6, 7, 107, 110, 346, 349, 361, 362, 363], "theori": 2, "crude": 2, "made": [2, 3, 31, 38, 52, 63, 64, 65, 76, 77, 80, 87, 91, 107, 113, 175, 244, 262, 287, 349, 350, 352, 361, 362, 364, 365], "liststorag": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 365], "veri": [2, 3, 96, 97, 350, 353, 356, 361, 363, 365, 367, 368], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 28, 31, 33, 34, 36, 39, 52, 58, 67, 69, 72, 74, 75, 83, 84, 87, 91, 96, 97, 107, 113, 123, 124, 152, 175, 183, 206, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 282, 284, 287, 344, 346, 349, 351, 352, 353, 354, 355, 361, 362, 363, 365, 368], "complex": [2, 31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248, 349, 350, 353, 354], "tensor": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 121, 123, 124, 126, 127, 128, 131, 132, 134, 135, 136, 137, 139, 142, 145, 147, 149, 150, 151, 152, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 258, 259, 261, 262, 264, 265, 266, 269, 270, 272, 274, 276, 277, 278, 279, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364, 367, 368], "contigu": [2, 8, 55, 58, 59, 87, 91, 107, 113, 180, 351, 361, 362, 363, 365, 367, 368], "tensorstorag": [2, 38, 52, 53, 54, 55, 56, 57, 58, 59, 60, 78, 356, 365], "lazymemmapstorag": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 74, 75, 126, 127, 349, 350, 352, 356, 361, 364, 365], "citizen": 2, "pytre": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 69], "tupl": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 69, 74, 77, 78, 85, 86, 87, 91, 107, 113, 121, 134, 136, 142, 143, 145, 150, 158, 175, 183, 189, 195, 196, 201, 204, 205, 206, 215, 219, 220, 221, 238, 239, 243, 246, 247, 252, 258, 259, 261, 265, 266, 268, 272, 274, 276, 277, 278, 279, 281, 289, 290, 291, 292, 320, 322, 324, 333, 365], "dictionari": [2, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 34, 36, 39, 45, 67, 72, 74, 75, 87, 90, 91, 92, 101, 102, 107, 113, 114, 115, 163, 167, 175, 245, 249, 279, 322, 338, 339, 340, 346, 350, 351, 353, 355, 361, 363, 368], "nest": [2, 3, 25, 27, 31, 34, 36, 38, 39, 48, 63, 64, 69, 80, 87, 90, 91, 92, 107, 113, 127, 161, 164, 175, 184, 243, 289, 290, 291, 292, 293, 307, 346, 350, 351, 362, 363, 365, 367], "construct": [2, 3, 5, 31, 35, 38, 41, 42, 52, 69, 87, 90, 91, 107, 108, 113, 132, 135, 175, 176, 201, 205, 223, 249, 326, 344, 350, 351, 352, 354, 361, 363, 365, 368], "ram": [2, 90, 92, 365, 368], "prealloc": [2, 3, 363], "ve": [2, 40, 349, 352, 358], "been": [2, 3, 5, 7, 8, 17, 19, 20, 40, 69, 73, 87, 91, 95, 101, 102, 107, 113, 143, 161, 162, 166, 199, 203, 236, 241, 243, 244, 349, 350, 351, 352, 360, 361, 362, 363, 365, 368], "here": [2, 3, 4, 7, 8, 9, 10, 59, 60, 78, 85, 86, 87, 91, 95, 107, 108, 109, 113, 127, 316, 344, 345, 346, 349, 350, 351, 352, 353, 354, 356, 358, 361, 362, 363, 365, 367, 368], "start": [2, 3, 4, 5, 13, 20, 45, 52, 60, 67, 74, 75, 88, 100, 107, 113, 183, 321, 348, 349, 350, 359, 362, 363, 365, 366, 368], "replay_buff": [2, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 323, 336, 349, 350, 351, 356, 361, 362, 365], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 20, 21, 22, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 74, 75, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 99, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 120, 121, 123, 124, 126, 127, 130, 136, 137, 142, 143, 145, 147, 149, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 166, 171, 173, 175, 180, 183, 184, 185, 189, 190, 191, 192, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 208, 211, 212, 215, 220, 221, 229, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 307, 309, 319, 322, 336, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "rb": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 74, 75, 78, 127, 154, 175, 350, 352, 356, 358, 362, 364, 365, 367], "10": [2, 3, 7, 21, 22, 25, 31, 35, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 69, 74, 75, 78, 80, 83, 84, 87, 88, 91, 96, 97, 103, 107, 108, 109, 111, 112, 113, 114, 115, 121, 124, 126, 127, 162, 164, 165, 175, 185, 188, 189, 191, 193, 195, 199, 200, 203, 204, 208, 219, 230, 240, 241, 244, 245, 252, 259, 262, 264, 266, 276, 277, 278, 281, 287, 289, 290, 291, 292, 295, 309, 317, 346, 348, 349, 350, 351, 352, 353, 354, 358, 361, 362, 363, 365, 366, 367, 368], "add": [2, 3, 4, 6, 20, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 66, 69, 70, 78, 79, 81, 82, 87, 91, 107, 113, 127, 143, 167, 175, 201, 205, 213, 242, 258, 321, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 365, 367], "string": [2, 17, 18, 19, 31, 37, 45, 61, 87, 91, 101, 107, 113, 120, 149, 161, 171, 175, 201, 205, 238, 243, 245, 246, 257, 308, 325, 345, 349, 351, 352, 365], "element": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 74, 75, 78, 80, 106, 107, 113, 127, 150, 159, 162, 163, 186, 187, 199, 200, 203, 232, 236, 238, 243, 248, 249, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 273, 275, 276, 277, 278, 279, 281, 317, 349, 351, 354, 356, 365, 368], "30": [2, 3, 38, 56, 123, 144, 222, 223, 307, 311, 350, 351, 356, 361, 362, 363, 365], "none": [2, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 72, 74, 75, 76, 77, 78, 80, 87, 88, 90, 91, 100, 101, 102, 103, 107, 108, 109, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 139, 141, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 336, 338, 339, 340, 344, 346, 349, 350, 351, 352, 353, 355, 356, 357, 361, 362, 363, 365, 367, 368], "int": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 122, 123, 124, 126, 127, 128, 129, 131, 134, 139, 140, 144, 145, 147, 149, 150, 153, 160, 161, 164, 167, 168, 169, 171, 175, 176, 180, 185, 186, 187, 188, 189, 191, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 258, 259, 260, 266, 268, 269, 273, 274, 275, 276, 277, 281, 289, 291, 292, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 317, 318, 319, 322, 323, 326, 328, 334, 338, 339, 340, 363, 365], "tell": [2, 3, 4, 7, 108, 109, 349, 352, 356, 361, 362], "our": [2, 3, 7, 8, 17, 38, 127, 309, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 364, 365, 367], "far": [2, 40, 202, 227, 228, 358, 363, 368], "restrict": [2, 3, 350, 364, 365, 368], "empti": [2, 3, 25, 27, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 69, 87, 91, 106, 107, 113, 132, 135, 149, 151, 164, 167, 169, 171, 313, 349, 363, 365], "64": [2, 3, 34, 36, 39, 52, 58, 69, 127, 153, 189, 190, 198, 201, 205, 212, 220, 287, 349, 350, 351, 352, 354, 358, 360, 363, 365, 367, 368], "dtype": [2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 74, 75, 80, 83, 84, 85, 86, 87, 90, 91, 92, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 121, 124, 125, 131, 132, 133, 134, 135, 136, 137, 143, 145, 147, 149, 151, 152, 154, 158, 161, 163, 165, 166, 167, 169, 171, 175, 176, 180, 183, 184, 185, 195, 196, 199, 200, 201, 203, 204, 205, 208, 213, 214, 220, 221, 229, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 247, 248, 251, 253, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 295, 344, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 367, 368], "unit8": 2, "img": 2, "randint": [2, 45, 69, 165, 365], "255": [2, 69, 165, 363, 365], "uint8": [2, 3, 34, 36, 39, 47, 52, 58, 85, 86, 101, 102, 136, 147, 165, 350, 357, 364, 365, 367], "next": [2, 3, 4, 8, 13, 14, 15, 22, 25, 27, 31, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 69, 74, 75, 78, 83, 84, 85, 86, 87, 88, 90, 91, 92, 96, 97, 101, 102, 103, 107, 111, 112, 113, 114, 115, 123, 124, 126, 127, 132, 135, 136, 137, 142, 143, 147, 151, 152, 154, 157, 158, 161, 163, 172, 173, 175, 180, 183, 185, 200, 201, 204, 205, 208, 223, 243, 254, 258, 259, 261, 262, 264, 265, 266, 267, 272, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 309, 320, 322, 324, 350, 352, 354, 357, 358, 363, 364, 367, 368], "ask": [2, 8, 52, 58, 67, 74, 75, 309, 351, 352, 353, 354, 361, 362, 364, 368], "do": [2, 3, 4, 7, 60, 87, 91, 107, 113, 114, 115, 150, 172, 173, 183, 212, 213, 234, 289, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 367, 368], "automat": [2, 3, 5, 60, 63, 64, 69, 80, 87, 90, 91, 92, 107, 108, 109, 113, 123, 132, 135, 145, 172, 186, 232, 243, 245, 307, 344, 349, 351, 353, 354, 361, 362, 363, 365, 367], "hand": [2, 3, 7, 20, 25, 361, 362, 363], "look": [2, 3, 5, 7, 8, 31, 87, 91, 100, 107, 108, 109, 113, 149, 150, 169, 175, 245, 249, 250, 251, 345, 351, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 367, 368], "assum": [2, 3, 6, 25, 33, 40, 41, 42, 54, 56, 58, 59, 60, 74, 87, 91, 107, 113, 126, 129, 139, 149, 150, 157, 163, 167, 169, 171, 180, 201, 205, 230, 252, 262, 267, 279, 287, 298, 299, 300, 301, 303, 304, 305, 306, 309, 349, 351, 352, 360, 363], "lead": [2, 3, 4, 8, 10, 11, 22, 25, 27, 31, 35, 38, 41, 42, 54, 73, 85, 86, 87, 90, 92, 93, 163, 202, 220, 227, 228, 349, 352, 361, 362, 363, 365, 367], "leav": [2, 25, 34, 36, 38, 39, 87, 176, 184, 349, 356, 365], "tree": [2, 34, 36, 39, 87, 91, 107, 113, 361, 365], "match": [2, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 77, 85, 86, 87, 88, 90, 91, 92, 93, 107, 113, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 186, 187, 194, 201, 205, 206, 211, 212, 226, 232, 237, 238, 245, 246, 248, 249, 252, 253, 259, 266, 273, 275, 277, 279, 323, 328, 344, 349, 351, 360, 362, 363, 365, 368], "don": [2, 3, 4, 6, 7, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 127, 350, 351, 356, 365, 367, 368], "throw": [2, 31, 34, 36, 39, 87, 91, 107, 113, 175, 368], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 22, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 74, 75, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 126, 127, 131, 132, 135, 136, 137, 147, 151, 152, 154, 158, 161, 163, 166, 167, 175, 183, 184, 185, 193, 195, 196, 201, 205, 208, 220, 221, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 287, 309, 317, 323, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364, 365, 367, 368], "max": [2, 22, 33, 36, 41, 45, 61, 66, 67, 78, 134, 164, 226, 227, 228, 237, 244, 259, 260, 266, 275, 277, 279, 349, 351, 352, 358, 361, 362], "label": [2, 36, 37, 40, 45, 349, 361, 365], "100": [2, 13, 14, 15, 16, 31, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 78, 83, 84, 87, 91, 96, 97, 107, 113, 130, 136, 145, 154, 159, 161, 175, 211, 239, 243, 309, 318, 336, 350, 351, 353, 355, 358, 360, 361, 362, 363, 364, 365, 367, 368], "rb_pytre": 2, "randn": [2, 25, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 69, 74, 75, 80, 126, 145, 180, 188, 189, 193, 195, 196, 199, 200, 203, 204, 209, 210, 211, 215, 218, 219, 221, 232, 233, 234, 235, 237, 238, 245, 246, 248, 251, 252, 253, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 289, 290, 291, 292, 325, 344, 365, 367, 368], "c": [2, 3, 6, 7, 25, 34, 36, 38, 39, 41, 42, 57, 145, 165, 203, 204, 350, 365], "zero": [2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 69, 74, 75, 78, 80, 87, 91, 107, 113, 124, 126, 128, 132, 134, 135, 145, 151, 154, 175, 180, 183, 185, 190, 191, 192, 198, 199, 200, 201, 203, 204, 205, 209, 210, 212, 220, 229, 240, 241, 244, 247, 255, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 295, 352, 365, 367], "assert": [2, 3, 6, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 78, 91, 94, 107, 113, 120, 124, 127, 130, 132, 135, 143, 152, 159, 173, 176, 180, 212, 215, 230, 289, 290, 291, 292, 317, 325, 356, 360, 365, 368], "len": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 80, 147, 186, 187, 206, 212, 349, 356, 358, 361, 363, 364, 365, 367], "ambigu": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "signatur": [2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 77, 87, 91, 107, 113, 124, 131, 149, 163, 166, 167, 169, 171, 175, 248, 345, 349, 353, 363], "deal": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 349, 351, 362, 365], "interpret": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 350], "put": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 91, 101, 102, 114, 115, 173, 316, 340, 344, 350, 351, 352, 353, 361, 363], "solv": [2, 4, 9, 10, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 343, 349, 350, 351, 356, 358, 361, 362, 363, 365], "clear": [2, 3, 25, 27, 28, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 95, 107, 113, 175, 318, 353, 356], "cut": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "distinct": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 124, 355, 360], "view": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 107, 113, 121, 175, 196, 199, 203, 206, 353, 363, 365, 367, 368], "indic": [2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113, 114, 115, 127, 128, 161, 162, 163, 164, 167, 175, 184, 186, 187, 206, 209, 210, 212, 243, 244, 246, 247, 255, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 330, 340, 343, 346, 351, 352, 356, 357, 358, 363, 365, 368], "through": [2, 3, 4, 5, 8, 11, 13, 14, 15, 16, 17, 19, 20, 25, 27, 58, 83, 84, 87, 91, 95, 96, 97, 100, 107, 108, 109, 113, 123, 132, 135, 150, 206, 220, 243, 245, 249, 250, 251, 255, 289, 290, 291, 292, 344, 349, 350, 351, 353, 355, 360, 361, 362, 363, 364, 365, 368], "collate_fn": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 365, 367], "__init__": [2, 3, 7, 87, 103, 120, 121, 124, 132, 135, 151, 185, 196, 199, 203, 208, 253, 259, 261, 266, 272, 277, 279, 281, 346, 352, 354, 358, 361, 363, 368], "major": 2, "worri": [2, 43], "even": [2, 3, 4, 8, 14, 17, 18, 19, 20, 63, 64, 65, 67, 74, 76, 77, 80, 87, 88, 91, 95, 107, 113, 123, 184, 349, 351, 353, 361, 362, 363, 368], "though": [2, 4, 87, 91, 107, 113, 206, 351, 361, 362], "too": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 37, 40, 44, 46, 47, 87, 91, 107, 113, 144, 163, 202, 227, 228, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 350, 354, 357, 363, 365, 368], "latter": [2, 17, 18, 19, 31, 54, 87, 91, 107, 113, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 276, 338, 339], "inv": [2, 3, 130, 134, 137, 147, 154, 159, 363], "method": [2, 3, 4, 11, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 74, 75, 76, 77, 78, 80, 87, 90, 91, 92, 93, 107, 110, 113, 123, 124, 127, 131, 132, 133, 136, 137, 139, 143, 145, 149, 151, 152, 153, 154, 158, 161, 163, 166, 167, 169, 171, 175, 185, 232, 233, 234, 235, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 258, 259, 261, 262, 264, 265, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 293, 307, 308, 337, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 361, 363, 365, 368], "obvious": 2, "ignor": [2, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 87, 91, 107, 113, 134, 137, 158, 165, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 209, 210, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 289, 365], "multithread": [2, 3, 35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 61, 104, 105, 356, 365], "thread": [2, 13, 14, 16, 34, 36, 39, 83, 84, 96, 97, 107, 113], "prefetch": [2, 35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 61, 349, 350, 352, 365], "advis": [2, 55, 368], "benchmark": [2, 3, 9, 84, 96, 97, 361, 362], "techniqu": [2, 8, 107, 113, 350, 356, 365], "real": [2, 5, 58, 249, 345, 352, 363], "life": [2, 136], "adopt": [2, 3, 5, 349, 368], "throughput": [2, 9, 349], "constant": [2, 127, 145, 162, 346, 349, 351, 352, 368], "throughout": [2, 3, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 351, 361, 368], "further": [2, 3, 5, 349, 351, 353], "refin": [2, 58, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287], "coupl": [2, 352, 354, 355, 363, 365], "get": [2, 3, 4, 6, 7, 8, 9, 25, 27, 34, 35, 36, 38, 39, 52, 54, 58, 63, 64, 67, 74, 75, 76, 77, 78, 80, 87, 88, 91, 107, 113, 121, 126, 128, 132, 134, 135, 143, 145, 150, 162, 163, 165, 167, 173, 232, 240, 241, 245, 246, 249, 289, 290, 291, 292, 293, 309, 313, 344, 348, 349, 350, 351, 352, 359, 361, 362, 363, 365, 366, 367, 368], "first_elt": 2, "128": [2, 52, 54, 58, 75, 83, 84, 96, 97, 190, 193, 350, 352, 358, 361, 363, 364, 365], "wa": [2, 3, 5, 7, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 73, 74, 87, 91, 107, 113, 167, 176, 184, 203, 258, 260, 271, 273, 276, 278, 280, 295, 345, 350, 351, 353, 354, 355, 356, 357, 360, 361, 365, 367], "print": [2, 3, 6, 7, 13, 14, 15, 20, 21, 22, 23, 25, 26, 27, 31, 33, 34, 35, 36, 37, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 69, 74, 75, 78, 83, 84, 85, 86, 87, 88, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 120, 123, 124, 127, 128, 132, 133, 134, 135, 142, 145, 151, 152, 154, 157, 161, 163, 164, 165, 173, 175, 180, 183, 184, 186, 187, 189, 190, 191, 192, 193, 196, 198, 201, 206, 209, 210, 211, 212, 215, 218, 221, 232, 233, 234, 235, 237, 238, 240, 241, 243, 244, 246, 248, 251, 253, 274, 307, 336, 344, 346, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 367, 368], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 128], "larger": [2, 4, 265, 272], "volum": 2, "due": [2, 3, 5, 355, 364, 365, 368], "serialis": [2, 34, 36, 39], "memorymappedtensor": [2, 34, 36, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 311, 356, 364], "well": [2, 3, 8, 20, 22, 31, 35, 37, 38, 41, 42, 72, 76, 87, 91, 107, 113, 167, 175, 189, 203, 222, 223, 274, 293, 349, 350, 352, 353, 354, 355, 357, 364, 365, 367, 368], "specifi": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 101, 102, 107, 108, 109, 113, 114, 115, 132, 133, 135, 157, 160, 162, 168, 175, 185, 203, 248, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 316, 344, 349, 351, 352, 356, 361], "file": [2, 6, 7, 8, 34, 36, 39, 52, 54, 55, 56, 58, 59, 60, 114, 308, 309, 311, 346, 348, 349, 350, 352, 354, 358, 360, 361, 365, 366, 368], "locat": [2, 7, 34, 36, 39, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 136, 145, 156, 202, 215, 227, 228, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 349, 350, 351, 357, 361, 362, 365], "improv": [2, 4, 140, 258, 345, 361, 362, 365], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 107, 113, 351, 361, 365], "found": [2, 3, 6, 7, 10, 13, 14, 15, 16, 20, 22, 25, 31, 34, 36, 39, 45, 52, 54, 55, 56, 58, 59, 60, 74, 75, 85, 86, 87, 90, 91, 92, 95, 107, 113, 121, 127, 154, 157, 164, 173, 175, 184, 240, 241, 245, 249, 273, 274, 276, 349, 350, 352, 353, 355, 357, 365], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 37, 44, 46, 47, 67, 134, 203, 204, 265, 352, 356, 365], "sharabl": [2, 107, 113], "collabor": [2, 58], "rather": [2, 4, 77, 152, 349, 350, 351, 353, 355, 361, 362, 365], "incur": [2, 83, 84, 96, 97], "transmiss": 2, "overhead": [2, 83, 84, 96, 97, 107, 113], "subclass": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 69, 87, 91, 107, 113, 122, 123, 166, 172, 176, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 248, 249, 250, 252, 255, 274, 276, 350, 352, 356, 363, 365], "instanti": [2, 3, 20, 34, 35, 36, 38, 39, 41, 42, 95, 123, 166, 212, 307, 349, 350, 354, 355, 357, 361, 362, 363, 365, 368], "content": [2, 8, 15, 25, 27, 34, 35, 36, 38, 39, 41, 42, 73, 87, 90, 91, 92, 104, 107, 113, 151, 186, 187, 206, 211, 212, 245, 274, 351, 363, 367], "map": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 87, 91, 100, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 116, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 175, 180, 196, 215, 232, 233, 234, 235, 238, 245, 246, 248, 249, 251, 252, 253, 254, 279, 287, 322, 342, 344, 345, 349, 350, 351, 352, 354, 355, 364, 367], "writer": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 67, 69, 70, 74, 78, 79, 82, 351, 365], "tensordictroundrobinwrit": [2, 69], "goe": [2, 4, 108, 109, 349, 351, 361, 362, 368], "prioritizedsampl": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 262, 267, 287, 349, 365], "access": [2, 3, 7, 8, 31, 35, 55, 57, 87, 91, 107, 113, 149, 169, 175, 340, 343, 349, 353, 361, 362, 363, 365], "show": [2, 31, 87, 91, 107, 113, 175, 212, 309, 344, 349, 351, 352, 361, 362, 363, 365, 367], "tensordictreplaybuff": [2, 35, 38, 41, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 74, 75, 78, 126, 127, 323, 336, 342, 349, 350, 352, 365], "mp": [2, 17, 18, 19, 52, 53, 54, 55, 56, 57, 58, 59, 60, 88, 173], "def": [2, 3, 11, 21, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 88, 91, 103, 107, 113, 120, 121, 123, 124, 132, 135, 151, 167, 175, 185, 196, 199, 200, 203, 204, 208, 243, 245, 253, 259, 261, 266, 272, 274, 277, 279, 281, 307, 346, 349, 350, 360, 361, 362, 363, 365, 367, 368], "updat": [2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 35, 36, 39, 40, 41, 66, 67, 87, 91, 103, 107, 108, 109, 113, 121, 123, 124, 132, 134, 135, 151, 161, 162, 167, 170, 173, 175, 184, 185, 199, 201, 205, 208, 236, 240, 241, 244, 245, 246, 247, 248, 249, 258, 259, 260, 261, 262, 264, 266, 267, 268, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 287, 289, 290, 291, 292, 293, 322, 326, 328, 331, 332, 335, 336, 346, 350, 351, 352, 355, 358, 361, 362, 363, 365, 367, 368], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 78, 83, 84, 85, 86, 87, 90, 91, 92, 96, 97, 98, 99, 107, 113, 121, 124, 126, 128, 132, 133, 134, 135, 142, 143, 145, 154, 157, 163, 165, 167, 173, 183, 185, 195, 196, 201, 205, 207, 208, 220, 221, 229, 232, 233, 234, 235, 237, 238, 240, 241, 244, 245, 246, 248, 251, 253, 287, 290, 291, 292, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 317, 325, 344, 345, 349, 352, 362, 363, 367, 368], "__name__": [2, 3, 21, 88, 307, 350], "__main__": [2, 3, 21, 88, 307], "21": [2, 58, 59, 75, 107, 108, 109, 113, 348, 350, 351, 361, 363, 366], "proc": 2, "target": [2, 4, 8, 20, 31, 87, 88, 91, 107, 113, 162, 166, 175, 248, 249, 258, 259, 260, 261, 262, 264, 266, 267, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 288, 289, 290, 291, 292, 293, 329, 335, 336, 345, 346, 352, 358, 361, 363], "arg": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 74, 75, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 122, 131, 149, 151, 160, 163, 166, 167, 168, 170, 171, 175, 185, 186, 187, 195, 201, 205, 206, 207, 208, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 316, 319, 323, 326, 340, 349, 350, 360, 365, 368], "join": [2, 88, 342, 350, 351, 361], "now": [2, 3, 7, 35, 107, 127, 212, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 364, 365, 368], "length": [2, 19, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 52, 58, 61, 67, 74, 75, 77, 87, 91, 96, 97, 107, 113, 150, 173, 185, 186, 187, 189, 191, 193, 199, 203, 206, 208, 211, 212, 232, 248, 253, 317, 323, 349, 351, 352, 356, 358, 363, 365, 368], "20": [2, 45, 59, 74, 75, 78, 87, 91, 95, 107, 113, 162, 175, 198, 199, 200, 203, 204, 237, 317, 350, 351, 352, 361, 362, 363, 365, 367, 368], "_data": [2, 363], "It": [2, 3, 4, 7, 22, 31, 37, 40, 41, 43, 45, 54, 60, 69, 72, 78, 82, 87, 91, 93, 103, 104, 107, 108, 109, 113, 114, 115, 124, 126, 136, 143, 145, 150, 162, 167, 172, 175, 176, 189, 191, 197, 211, 212, 220, 222, 223, 229, 230, 239, 240, 243, 244, 247, 249, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 287, 288, 289, 307, 316, 322, 343, 344, 345, 349, 350, 352, 353, 361, 362, 363, 364, 365, 367, 368], "difficult": [2, 4, 107, 357], "pai": [2, 8, 349], "word": [2, 3, 40, 52, 54, 56, 58, 59, 60, 274, 349, 356, 363, 368], "1m": [2, 52, 58, 329, 349, 351, 352], "doe": [2, 3, 17, 34, 35, 36, 39, 41, 45, 52, 54, 58, 66, 67, 74, 76, 77, 82, 87, 91, 101, 102, 107, 113, 114, 115, 193, 199, 200, 201, 203, 204, 205, 213, 230, 237, 250, 251, 258, 260, 267, 273, 276, 288, 326, 344, 346, 349, 350, 351, 352, 353, 356, 361, 363, 365, 368], "howev": [2, 3, 5, 7, 31, 87, 91, 107, 113, 127, 157, 162, 167, 175, 258, 260, 273, 276, 278, 279, 344, 349, 350, 352, 355, 363, 365, 368], "capac": [2, 35, 38, 41, 42, 63, 64, 66, 74, 80, 351, 356], "There": [2, 10, 69, 201, 205, 344, 346, 351, 352, 354, 356, 361, 362, 363, 365, 368], "circumv": 2, "account": [2, 63, 64, 80, 123, 127, 209, 210, 344, 350, 352, 365, 368], "save": [2, 3, 8, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 107, 113, 172, 175, 308, 309, 311, 316, 326, 346, 356, 357, 358, 361, 362], "convent": [2, 3, 52, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 114, 115, 345, 349, 352, 361, 362, 363], "overridden": [2, 3, 52, 55, 56, 58, 59, 60, 87, 91, 107, 113, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 289, 291, 292, 352, 361], "dim_extend": [2, 35, 38, 41, 42], "obtain": [2, 7, 40, 52, 87, 91, 107, 113, 126, 149, 162, 171, 185, 220, 323, 349, 351, 353, 354, 355, 361, 362], "counterpart": 2, "desir": [2, 3, 31, 87, 91, 107, 113, 122, 124, 131, 145, 147, 149, 150, 163, 166, 167, 169, 171, 175, 181, 182, 186, 187, 206, 212, 232, 238, 239, 245, 246, 247, 248, 249, 344, 349, 361, 362, 363, 365], "diversifi": 2, "offer": [2, 3, 7, 83, 84, 87, 91, 96, 97, 101, 102, 107, 113, 307, 344, 349, 350, 353, 355, 356, 361, 363, 365, 368], "accomplish": [2, 176, 353], "anoth": [2, 3, 8, 58, 67, 74, 87, 90, 91, 92, 95, 107, 113, 124, 132, 133, 135, 163, 166, 206, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 344, 345, 349, 351, 352, 354, 355, 360, 361, 362, 363, 368], "__especially__": 2, "offlin": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 52, 53, 55, 127, 176, 259, 264, 265, 272, 316, 346, 353, 364, 365, 367], "docstr": [2, 31, 87, 91, 107, 113, 175, 353, 354], "extens": [2, 35, 38, 41, 42, 75, 346, 365], "detail": [2, 3, 5, 6, 7, 31, 87, 91, 107, 108, 109, 113, 165, 167, 175, 196, 199, 203, 239, 258, 267, 276, 343, 346, 350, 356, 360, 365], "note": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 87, 91, 107, 113, 132, 135, 173, 175, 184, 199, 201, 203, 205, 244, 245, 249, 267, 350, 354, 360, 361, 362, 368], "without": [2, 3, 7, 9, 31, 40, 52, 54, 58, 74, 75, 87, 91, 107, 113, 114, 115, 121, 123, 132, 135, 165, 175, 199, 200, 203, 204, 234, 235, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 288, 289, 290, 291, 292, 293, 336, 343, 344, 349, 350, 351, 353, 354, 355, 356, 361, 362, 363, 365, 368], "happi": 2, "concaten": [2, 8, 13, 14, 20, 29, 30, 58, 127, 128, 145, 166, 203, 206, 251, 349, 350, 354, 361, 362, 363, 365, 368], "schedul": [2, 4, 7, 40, 322, 351, 363], "transformedenv": [2, 3, 13, 31, 87, 88, 91, 107, 113, 121, 124, 127, 130, 131, 132, 135, 136, 137, 139, 142, 143, 144, 145, 147, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 166, 173, 175, 201, 205, 243, 309, 349, 350, 351, 352, 353, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "stepcount": [2, 13, 31, 87, 91, 101, 102, 107, 113, 114, 115, 166, 175, 349, 350, 351, 352, 353, 358, 361, 362, 367], "gymenv": [2, 3, 5, 13, 14, 15, 16, 20, 21, 31, 78, 87, 88, 91, 93, 107, 113, 123, 124, 127, 130, 131, 136, 142, 143, 145, 147, 152, 153, 154, 157, 159, 162, 163, 164, 166, 167, 173, 175, 201, 205, 243, 307, 309, 336, 342, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 364, 365, 367, 368], "randompolici": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 127, 154, 356, 365], "cartpol": [2, 3, 31, 85, 86, 87, 91, 107, 113, 123, 124, 127, 157, 162, 175, 243, 307, 350, 352, 354, 356, 357, 358, 365, 368], "v1": [2, 3, 13, 14, 15, 16, 20, 21, 31, 54, 56, 78, 87, 88, 90, 91, 92, 96, 97, 104, 107, 113, 123, 124, 127, 130, 137, 142, 143, 145, 152, 154, 157, 159, 161, 162, 163, 164, 166, 175, 201, 205, 243, 284, 298, 299, 300, 301, 303, 304, 305, 306, 307, 344, 350, 352, 353, 354, 355, 356, 357, 358, 363, 365, 367, 368], "action_spec": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 83, 84, 87, 91, 96, 97, 103, 107, 108, 109, 113, 121, 124, 127, 132, 135, 143, 151, 154, 185, 196, 208, 221, 223, 232, 238, 245, 246, 259, 262, 264, 277, 279, 281, 336, 344, 349, 350, 351, 352, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 367, 368], "8": [2, 3, 6, 7, 31, 38, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 74, 75, 83, 84, 85, 86, 87, 91, 107, 113, 123, 162, 186, 187, 189, 190, 198, 206, 233, 234, 235, 245, 248, 251, 272, 349, 350, 355, 356, 360, 361, 362, 363, 364, 365, 367, 368], "traj_kei": [2, 67, 74, 75, 365], "truncated_kei": [2, 67, 74, 75, 154, 161], "strict_length": [2, 52, 58, 67, 74, 75, 309], "i": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 35, 38, 42, 43, 63, 64, 66, 67, 74, 75, 80, 87, 91, 107, 113, 149, 154, 157, 167, 171, 175, 200, 204, 215, 221, 239, 243, 245, 247, 248, 249, 289, 290, 291, 292, 317, 329, 349, 350, 351, 352, 354, 355, 356, 358, 361, 362, 363, 365, 367, 368], "enumer": [2, 13, 14, 15, 20, 31, 38, 42, 75, 87, 91, 107, 113, 175, 282, 345, 349, 350, 351, 352, 358, 361, 365, 367], "break": [2, 5, 13, 14, 15, 20, 31, 38, 42, 52, 55, 56, 58, 59, 60, 61, 67, 74, 75, 78, 87, 91, 107, 113, 124, 127, 154, 173, 175, 309, 350, 356, 358, 365, 367], "step_count": [2, 13, 14, 15, 31, 87, 91, 96, 97, 107, 113, 161, 175, 351, 352, 353, 358, 367], "32": [2, 21, 25, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 75, 111, 112, 114, 115, 186, 187, 188, 189, 190, 192, 193, 198, 206, 211, 212, 216, 217, 219, 220, 229, 287, 307, 348, 349, 350, 352, 354, 355, 363, 364, 365, 366, 367, 368], "33": [2, 25, 31, 69, 87, 91, 107, 113, 175, 186, 187, 206, 350, 351, 362, 363], "34": [2, 186, 187, 206, 350, 363, 365], "35": [2, 186, 187, 206, 348, 350, 363, 364, 366], "36": [2, 348, 350, 351, 361, 363, 366], "37": [2, 126, 348, 350, 351, 352, 363, 365, 366], "38": [2, 7, 348, 350, 354, 363, 366], "39": [2, 56, 96, 97, 350, 363, 364], "40": [2, 96, 97, 350, 351, 361, 362, 363], "41": [2, 350, 361, 363], "11": [2, 10, 22, 26, 33, 45, 63, 64, 66, 75, 80, 88, 165, 175, 185, 208, 350, 351, 363, 365], "12": [2, 10, 59, 63, 64, 75, 80, 96, 97, 107, 111, 112, 113, 175, 348, 350, 351, 361, 362, 363, 365, 366], "14": [2, 6, 11, 52, 53, 54, 55, 56, 57, 58, 59, 60, 74, 75, 87, 91, 107, 113, 145, 175, 348, 350, 351, 361, 363, 365, 366, 367], "15": [2, 22, 52, 53, 54, 55, 56, 57, 58, 59, 60, 75, 87, 91, 107, 113, 175, 237, 244, 268, 350, 363, 365], "16": [2, 3, 31, 59, 67, 75, 83, 84, 87, 91, 96, 97, 107, 113, 127, 175, 350, 351, 352, 361, 363, 364, 365], "17": [2, 59, 75, 107, 175, 350, 361, 363], "could": [2, 3, 4, 6, 22, 350, 351, 357, 361, 362, 364, 368], "sai": [2, 31, 87, 91, 107, 113, 175, 211, 361, 364, 368], "interleav": 2, "cannot": [2, 3, 4, 7, 21, 25, 26, 27, 30, 33, 65, 67, 74, 75, 87, 90, 91, 92, 95, 107, 113, 132, 135, 150, 157, 246, 350, 351, 352, 361, 362, 363], "handl": [2, 3, 20, 31, 87, 91, 107, 113, 172, 173, 175, 205, 206, 326, 338, 339, 349, 350, 351, 353, 355, 362, 365], "suggest": [2, 287, 349, 362], "serialenv": [2, 3, 87, 91, 107, 163, 175, 243, 342, 368], "squeez": [2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 123, 124, 127, 160, 162, 186, 187, 224, 225, 349, 363, 365], "6": [2, 3, 7, 13, 14, 15, 16, 22, 31, 38, 52, 59, 60, 67, 75, 85, 86, 107, 111, 112, 123, 145, 147, 162, 186, 187, 189, 190, 191, 194, 198, 200, 206, 211, 212, 216, 226, 243, 245, 253, 348, 350, 356, 361, 362, 363, 365, 366, 367], "5": [2, 3, 13, 14, 22, 23, 25, 27, 31, 35, 38, 41, 42, 52, 69, 74, 75, 78, 87, 88, 91, 96, 97, 101, 102, 104, 107, 111, 112, 113, 114, 115, 123, 124, 126, 154, 161, 162, 175, 185, 186, 187, 189, 190, 195, 196, 197, 198, 199, 202, 203, 206, 208, 211, 212, 216, 221, 227, 228, 237, 238, 243, 246, 252, 273, 276, 278, 281, 307, 344, 348, 349, 350, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 367, 368], "7": [2, 3, 6, 10, 26, 31, 33, 35, 38, 41, 67, 75, 87, 91, 101, 102, 107, 113, 123, 162, 185, 186, 187, 190, 206, 208, 211, 295, 348, 349, 350, 356, 361, 362, 363, 365, 366, 367], "9": [2, 3, 7, 22, 31, 35, 38, 41, 59, 60, 67, 75, 78, 85, 86, 100, 108, 109, 123, 162, 173, 175, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 282, 287, 345, 348, 349, 350, 351, 353, 356, 361, 362, 363, 364, 365, 366], "18": [2, 59, 75, 111, 112, 114, 115, 175, 212, 348, 350, 351, 356, 362, 363, 364, 366], "19": [2, 59, 74, 75, 78, 175, 350, 361, 362, 363], "independ": [2, 13, 14, 15, 16, 17, 18, 19, 20, 55, 107, 113, 166, 168, 212, 345, 346, 349, 350, 362, 365, 367], "congruent": 2, "custom": [2, 3, 5, 31, 87, 91, 107, 113, 169, 175, 211, 212, 252, 267, 276, 282, 340, 344, 349, 350, 351, 352, 354, 355, 357, 361, 362], "name": [2, 3, 6, 7, 11, 15, 31, 34, 36, 39, 45, 52, 55, 57, 60, 61, 83, 85, 87, 91, 96, 100, 101, 102, 104, 107, 108, 109, 110, 113, 114, 115, 116, 134, 137, 152, 157, 158, 161, 167, 169, 172, 175, 184, 201, 205, 238, 246, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 289, 291, 292, 293, 307, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 346, 349, 350, 351, 352, 355, 357, 361, 362, 363, 368], "randomcroptensordict": [2, 349], "unlik": [2, 73, 101, 102, 114, 115, 243, 267, 276, 309, 350, 354, 356, 367], "stop": [2, 3, 15, 20, 40, 60, 67, 74, 75, 87, 91, 107, 113, 351, 356, 361, 362, 367, 368], "signal": [2, 3, 13, 14, 15, 16, 22, 52, 54, 56, 58, 59, 60, 67, 74, 75, 78, 91, 101, 102, 114, 115, 127, 136, 161, 164, 184, 345, 349, 351, 361, 362, 365, 368], "disk": [2, 3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 326, 346, 349, 350, 352, 356, 357, 365], "dump": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 307, 308, 309, 357, 358, 361], "load": [2, 6, 7, 13, 14, 15, 16, 31, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 86, 87, 91, 107, 113, 120, 173, 175, 340, 346, 349, 351, 365], "json": 2, "metadata": [2, 52, 54, 351, 353, 355, 356, 361, 362, 368], "anticip": [2, 132, 135], "compli": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 58], "back": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 44, 46, 47, 54, 172, 176, 232, 238, 239, 245, 246, 247, 248, 249, 351, 361, 362, 363, 365], "exact": [2, 3, 107, 203], "statu": [2, 3, 87], "prioriti": [2, 4, 35, 41, 42, 63, 64, 65, 66, 67, 76, 77, 80, 261, 262, 264, 265, 266, 267, 272, 277, 279, 281, 287, 346, 349, 350, 365], "heap": 2, "under": [2, 3, 4, 20, 31, 40, 52, 54, 55, 56, 58, 59, 60, 85, 86, 87, 90, 91, 92, 93, 107, 110, 113, 175, 232, 238, 239, 245, 246, 247, 248, 249, 274, 289, 290, 291, 292, 293, 309, 345, 349, 350, 354, 361, 363, 368], "hood": [2, 20, 52, 87, 91, 107, 113, 363], "just": [2, 3, 4, 11, 77, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 100, 104, 105, 107, 108, 109, 110, 113, 123, 130, 184, 212, 317, 344, 346, 349, 350, 351, 352, 353, 354, 356, 361, 362, 363, 365, 367, 368], "public": [2, 57, 149, 171], "serializ": 2, "altern": [2, 4, 26, 104, 193, 209, 210, 211, 257, 307, 349, 351, 361, 362], "state_dict": [2, 13, 14, 15, 16, 20, 31, 34, 36, 39, 87, 91, 107, 113, 167, 173, 175, 279, 340, 346, 349, 350, 368], "load_state_dict": [2, 13, 14, 15, 16, 20, 31, 34, 36, 39, 87, 91, 107, 113, 167, 173, 175, 279, 346, 349], "drawback": 2, "struggl": 2, "big": [2, 351, 356, 365, 368], "sequenti": [2, 9, 31, 87, 91, 107, 113, 126, 143, 175, 250, 251, 276, 344, 351, 352, 354, 362, 363, 364, 368], "known": [2, 3, 5, 7, 8, 296, 297, 349, 350, 353], "seamless": [2, 206], "integr": [2, 31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 192, 201, 205, 208, 248, 344, 353, 354, 356, 361, 362, 363, 364], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 349, 350, 355], "essenti": [2, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 350, 353, 361, 363, 365], "understand": [2, 3, 8, 349, 350, 353, 354, 361, 362], "purpos": [2, 3, 7, 87, 91, 107, 113, 127, 199, 258, 260, 273, 276, 278, 336, 349, 351, 352, 355, 357, 361, 362, 364, 368], "guid": [2, 108, 109, 111, 112, 162, 343, 349, 362], "explan": [2, 31, 87, 91, 107, 113, 175], "effect": [2, 3, 25, 31, 35, 38, 41, 42, 52, 58, 67, 69, 72, 74, 75, 87, 91, 107, 113, 123, 127, 167, 175, 326, 349, 354, 361, 365, 368], "realm": [2, 354], "As": [2, 3, 4, 31, 52, 87, 91, 100, 107, 108, 109, 113, 154, 249, 289, 344, 349, 350, 351, 352, 353, 355, 356, 361, 362, 363, 364, 365, 367, 368], "practition": 2, "often": [2, 3, 8, 271, 326, 349, 350, 353, 355, 363, 365, 368], "encount": [2, 4, 58, 243, 343, 350, 354, 363], "situat": [2, 101, 102], "sometim": [2, 3, 352, 368], "discard": [2, 3, 45, 54, 56, 91, 169, 183, 308, 365, 368], "variabl": [2, 3, 4, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 52, 55, 56, 59, 60, 83, 84, 85, 86, 87, 90, 92, 93, 96, 97, 101, 102, 105, 106, 110, 114, 115, 199, 200, 201, 203, 204, 205, 208, 233, 234, 235, 274, 277, 346, 350], "observ": [2, 3, 8, 13, 14, 15, 16, 20, 31, 44, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 141, 142, 143, 145, 146, 147, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 175, 183, 188, 189, 190, 191, 192, 193, 196, 201, 205, 211, 216, 217, 219, 221, 222, 232, 233, 234, 235, 237, 238, 240, 241, 243, 244, 245, 246, 253, 254, 258, 259, 260, 261, 262, 264, 265, 266, 269, 272, 273, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 307, 309, 336, 344, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 367, 368], "immedi": [2, 25, 27, 31, 87, 91, 107, 113, 175, 288, 361, 362], "200": [2, 13, 14, 15, 20, 31, 52, 87, 90, 91, 92, 107, 113, 114, 115, 154, 175, 189, 190, 197, 222, 223, 307, 309, 349, 352, 356, 358, 363, 365], "199": [2, 363], "info": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 72, 74, 75, 85, 86, 87, 90, 91, 92, 93, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 169, 172, 174, 316, 353, 358, 361, 362, 365], "At": [2, 207, 240, 350, 351, 352, 356, 360, 363, 364], "glanc": [2, 353], "seem": [2, 349, 352, 353], "togeth": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 40, 87, 91, 100, 107, 108, 109, 113, 127, 150, 199, 201, 203, 205, 229, 233, 234, 235, 254, 344, 350, 352, 353, 361], "less": [2, 104, 230, 338, 339, 345, 351, 352, 365, 367], "omit": [2, 321, 351, 355, 363, 365], "proper": [2, 3, 4, 6, 7, 289, 290, 291, 292, 350, 351, 361, 362, 365], "imposs": [2, 3, 78, 176, 258, 260, 273, 276, 278], "determin": [2, 35, 41, 54, 66, 67, 87, 91, 107, 113, 114, 115, 149, 171, 211, 244, 350, 354, 361, 362], "complic": [2, 363, 365, 368], "matter": [2, 356], "inconsist": [2, 368], "miss": [2, 3, 4, 6, 7, 11, 25, 31, 87, 91, 107, 113, 167, 175, 183, 250, 251, 279, 343, 349, 352], "behavior": [2, 4, 31, 87, 91, 107, 113, 167, 175, 265, 272, 352, 362, 363], "primari": [2, 356], "elimin": [2, 3, 353], "represent": [2, 27, 28, 31, 87, 91, 107, 113, 149, 169, 171, 175, 349, 363, 364, 368], "upon": [2, 3, 8, 361, 363], "canon": 2, "definit": [2, 33, 76, 211], "markov": [2, 3, 353, 368], "decis": [2, 3, 188, 219, 237, 263, 275, 352, 353, 354, 361, 362, 365, 368], "mdp": [2, 353, 363], "context": [2, 3, 5, 8, 31, 87, 88, 91, 106, 107, 113, 163, 168, 175, 212, 213, 237, 285, 286, 289, 290, 291, 292, 294, 302, 309, 322, 344, 345, 349, 350, 351, 361, 362, 363, 364, 365], "condit": [2, 45, 162, 238, 239, 243, 246, 247, 257, 349, 361, 363, 365], "complet": [2, 7, 9, 73, 87, 91, 107, 113, 127, 161, 343, 345, 349, 351, 353, 360], "termin": [2, 3, 7, 13, 14, 15, 16, 31, 40, 52, 53, 54, 55, 56, 57, 58, 59, 60, 85, 86, 87, 90, 91, 92, 96, 97, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 123, 124, 136, 151, 175, 184, 185, 201, 205, 208, 243, 250, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 349, 350, 351, 353, 354, 356, 357, 361, 362, 363, 364, 365, 367, 368], "truncat": [2, 3, 13, 14, 15, 16, 31, 37, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 74, 75, 85, 86, 87, 90, 91, 92, 101, 102, 107, 108, 109, 113, 114, 115, 136, 137, 144, 151, 154, 161, 167, 175, 184, 201, 205, 228, 243, 295, 349, 351, 353, 354, 356, 357, 361, 364, 365, 367, 368], "reward": [2, 3, 13, 14, 15, 31, 34, 39, 40, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 78, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 121, 124, 125, 130, 131, 132, 133, 135, 136, 137, 143, 147, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 166, 167, 168, 170, 171, 173, 175, 180, 183, 185, 201, 208, 237, 243, 254, 258, 259, 261, 262, 264, 265, 266, 269, 272, 274, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 319, 320, 322, 324, 340, 345, 346, 349, 350, 351, 352, 353, 354, 356, 357, 361, 362, 363, 364, 365, 367, 368], "imit": [2, 3], "addit": [2, 3, 4, 31, 54, 87, 91, 107, 113, 114, 131, 149, 163, 166, 167, 169, 171, 175, 199, 236, 237, 243, 248, 257, 274, 289, 307, 345, 349, 350, 353, 361, 362, 365], "inform": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 43, 44, 46, 47, 58, 87, 88, 91, 94, 107, 113, 175, 186, 187, 206, 212, 345, 346, 349, 350, 351, 352, 353, 361, 362, 363, 365], "stateless": [2, 3, 87, 91, 107, 113, 124, 166, 274, 349, 353, 363, 368], "simul": [2, 3, 5, 7, 8, 83, 84, 93, 96, 97, 110, 114, 115, 119, 185, 208, 344, 349, 351, 353, 357, 361, 362], "furthermor": [2, 361, 362], "certain": [2, 4, 17, 18, 19, 20, 31, 45, 87, 91, 107, 113, 120, 140, 161, 167, 175, 200, 204, 240, 273, 344, 349, 350, 351, 358, 361, 362, 368], "composit": [2, 3, 25, 27, 72, 77, 82, 87, 91, 107, 113, 351, 354, 363], "accommod": [2, 3, 353, 354], "uniform": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 41, 44, 46, 47, 66, 67, 361], "unambigu": 2, "distinguish": [2, 101, 102, 114, 115], "happen": [2, 3, 87, 91, 107, 113, 236, 350, 355, 356, 357, 364, 368], "limit": [2, 40, 87, 91, 103, 107, 113, 127, 143, 258, 260, 273, 276, 278, 349, 350, 352, 361, 362, 363], "everyth": [2, 350, 351, 352, 357, 358], "belong": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 52, 58, 172, 173, 344, 349, 356, 362], "rule": [2, 107, 132, 135, 249, 344, 351], "entri": [2, 3, 13, 14, 16, 22, 25, 27, 31, 34, 36, 37, 39, 45, 49, 54, 55, 56, 57, 59, 60, 74, 75, 85, 86, 87, 90, 91, 92, 93, 101, 102, 107, 110, 113, 114, 115, 123, 127, 129, 130, 132, 135, 136, 139, 142, 145, 147, 149, 152, 154, 157, 159, 161, 162, 163, 171, 173, 175, 183, 184, 201, 209, 210, 237, 238, 243, 246, 247, 259, 279, 289, 290, 291, 292, 344, 349, 351, 352, 353, 354, 355, 357, 361, 362, 363, 364, 365, 368], "field": [2, 3, 13, 14, 15, 16, 22, 25, 31, 37, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 80, 83, 84, 85, 86, 87, 90, 91, 92, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 124, 132, 135, 136, 137, 147, 151, 152, 154, 158, 161, 163, 167, 175, 183, 185, 195, 196, 201, 205, 208, 220, 221, 229, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 247, 248, 251, 253, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 287, 330, 343, 344, 350, 351, 353, 354, 355, 356, 357, 361, 362, 363, 364, 365, 367, 368], "taken": [2, 3, 87, 91, 107, 113, 153, 209, 210, 241, 345, 349, 351, 352, 354, 361, 362, 363], "is_shar": [2, 3, 13, 14, 15, 22, 25, 34, 36, 37, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 80, 83, 84, 85, 86, 87, 90, 91, 92, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 124, 132, 135, 136, 137, 147, 151, 152, 154, 158, 161, 163, 173, 183, 185, 195, 196, 201, 205, 208, 220, 221, 229, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 247, 248, 251, 253, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 287, 344, 351, 353, 354, 355, 356, 357, 361, 362, 363, 364, 365, 367, 368], "brought": [2, 351, 352, 354], "step_mdp": [2, 3, 87, 91, 107, 113, 201, 205, 342, 352, 353, 363, 367, 368], "count": [2, 3, 31, 87, 88, 161, 244, 322, 326, 329, 349, 350, 351, 352, 365, 368], "trigger": [2, 7], "partial": [2, 3, 87, 91, 107, 113, 126, 127, 162, 163, 164, 326, 352], "turn": [2, 17, 18, 19, 20, 34, 36, 39, 141, 168, 172, 238, 307, 322, 345, 349, 350, 352, 354, 363, 364], "retain": 2, "regard": [2, 54, 60, 196, 239, 258, 267, 276, 349, 351, 363], "posit": [2, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 85, 86, 87, 91, 107, 113, 139, 140, 160, 161, 164, 167, 168, 175, 215, 279, 345, 351, 361, 362, 363, 365], "both": [2, 3, 7, 31, 35, 38, 41, 42, 58, 87, 88, 90, 91, 101, 102, 107, 108, 109, 113, 127, 152, 167, 175, 184, 186, 187, 201, 204, 205, 206, 211, 212, 233, 234, 235, 239, 247, 258, 260, 261, 265, 266, 272, 273, 274, 276, 277, 278, 279, 281, 322, 344, 349, 351, 353, 355, 361, 362, 363, 364, 365, 368], "mark": [2, 3, 15, 60, 87, 91, 107, 113, 201, 205, 289, 291, 292, 356, 365], "identifi": [2, 37], "marl": [2, 100, 116, 127, 164, 211, 353, 361, 362], "abov": [2, 3, 7, 31, 87, 91, 107, 113, 175, 202, 227, 228, 257, 345, 346, 349, 351, 353, 354, 361, 362, 363, 368], "output": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 67, 74, 75, 85, 86, 87, 90, 91, 92, 93, 101, 102, 103, 106, 107, 108, 109, 110, 113, 114, 115, 124, 125, 127, 130, 131, 132, 133, 135, 137, 143, 145, 149, 151, 152, 157, 158, 161, 164, 166, 167, 169, 171, 172, 175, 176, 184, 186, 187, 188, 189, 190, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 211, 212, 215, 221, 230, 232, 233, 236, 237, 238, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 307, 309, 317, 344, 345, 349, 350, 351, 352, 353, 354, 357, 360, 361, 362, 363, 364, 365, 367, 368], "typic": [2, 3, 4, 8, 31, 87, 91, 107, 113, 136, 162, 175, 245, 259, 274, 276, 279, 344, 345, 346, 351, 353, 355, 356, 361, 362, 363], "adjust": [2, 349, 361, 362, 363], "grumodul": [2, 126], "lstmmodul": [2, 352], "skip": [2, 3, 31, 52, 87, 91, 107, 113, 140, 167, 175, 176, 245, 249, 274, 279, 289, 290, 291, 292, 308, 309, 319, 322, 349, 350, 363], "accumul": [2, 8, 175], "upcom": [2, 274, 298, 299, 300, 301, 303, 304, 305, 306, 349], "popular": [2, 3, 344, 352, 355, 362], "rainbow": 2, "multistep": [2, 13, 14, 15, 16, 17, 18, 19, 20, 175, 342, 350], "fail": [2, 7, 21, 25, 27, 107, 121, 176], "shift": [2, 31, 255, 289, 290, 291, 292, 351], "naiv": [2, 169, 353], "consum": [2, 73, 75, 243, 350, 351, 356, 362, 365], "approxim": [2, 362, 368], "twice": [2, 8], "flat": [2, 78], "would": [2, 3, 31, 40, 87, 91, 107, 113, 175, 199, 201, 203, 205, 206, 211, 346, 350, 351, 352, 353, 355, 356, 363, 365, 368], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 13, 16, 127, 193, 219, 258, 263, 275, 276, 317, 340, 351, 352, 362, 365], "2x": 2, "small": [2, 169, 349, 351, 361, 362, 368], "clearer": [2, 354], "lazi": [2, 27, 28, 49, 50, 87, 91, 107, 113, 114, 115, 149, 169, 186, 211, 213, 250, 251, 349, 350, 354, 356, 360, 365, 368], "certainli": 2, "benefici": 2, "welcom": [2, 353], "wrapper": [2, 3, 11, 16, 34, 36, 39, 40, 41, 42, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 172, 215, 230, 236, 237, 241, 243, 244, 249, 254, 289, 314, 315, 316, 340, 342, 351, 352, 353, 355, 356, 357, 361, 362, 364, 368], "around": [2, 5, 7, 16, 41, 42, 103, 243, 249, 289, 349, 350, 362, 368], "selecttransform": [2, 87, 91, 107, 113], "excludetransform": [2, 59, 158, 365], "promptli": 2, "virtual": [2, 3, 90], "instal": [2, 3, 5, 10, 17, 18, 19, 54, 57, 87, 91, 107, 108, 109, 111, 112, 113, 311, 326, 343, 349, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 368], "respons": [2, 3, 8, 67, 74, 87, 91, 107, 113, 326, 355, 356, 368], "d4rl": [2, 54, 60], "repositori": [2, 7, 55, 56, 57, 60, 115, 361, 362], "wheel": [2, 351], "publish": 2, "openml": [2, 57, 106], "scikit": [2, 57, 106], "panda": [2, 57], "raw": [2, 3, 4, 40, 202, 227, 228, 350, 356, 363], "go": [2, 3, 7, 100, 107, 150, 154, 237, 295, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "natur": [2, 3, 349, 352, 354, 355, 356, 365], "modifi": [2, 3, 7, 8, 25, 27, 31, 45, 87, 91, 107, 113, 124, 131, 139, 143, 149, 163, 166, 167, 169, 171, 175, 237, 244, 248, 329, 349, 350, 351, 353, 361, 362, 363], "fly": [2, 173, 273, 345, 351, 363, 365, 368], "extra": [2, 10, 31, 87, 91, 107, 113, 127, 173, 175, 183, 316, 344, 351, 352, 365], "least": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 74, 87, 130, 357, 368], "pre": [2, 7, 21, 31, 45, 58, 64, 87, 91, 107, 113, 149, 169, 171, 175, 368], "appli": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 107, 113, 121, 123, 124, 126, 127, 128, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 148, 150, 151, 152, 154, 157, 158, 161, 162, 163, 164, 166, 167, 169, 170, 172, 173, 175, 199, 203, 227, 238, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 273, 275, 276, 277, 278, 279, 281, 289, 307, 321, 346, 349, 350, 351, 356, 361, 363, 367, 368], "conisder": 2, "space": [2, 9, 33, 44, 87, 91, 107, 113, 130, 134, 180, 193, 196, 211, 217, 221, 232, 236, 238, 239, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 262, 264, 265, 266, 281, 287, 344, 350, 351, 352, 353, 354, 355, 361, 362, 363, 367, 368], "per": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 55, 74, 78, 95, 96, 97, 107, 108, 109, 130, 157, 186, 187, 197, 211, 212, 240, 243, 311, 326, 338, 339, 349, 350, 351, 352, 354, 355, 358, 361, 362, 365, 367], "pipelin": [2, 3, 7, 344, 351], "replac": [2, 3, 6, 7, 25, 27, 31, 52, 58, 67, 74, 75, 123, 134, 136, 183, 240, 344, 361, 365], "onc": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 39, 58, 69, 87, 91, 107, 113, 123, 154, 167, 175, 236, 241, 243, 244, 324, 346, 350, 351, 352, 354, 357, 363, 365, 368], "produc": [2, 123, 124, 186, 187, 206, 212, 218, 233, 235, 237, 309, 351, 352, 353, 354, 356, 365, 368], "unless": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 58, 73, 87, 91, 107, 108, 109, 113, 167, 175, 279, 351], "download": [2, 7, 10, 52, 54, 55, 56, 58, 59, 60, 95, 149, 171, 309, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368], "forc": [2, 3, 6, 7, 13, 14, 16, 17, 18, 19, 20, 52, 55, 56, 58, 59, 60, 350, 361, 362, 363], "robosetexperiencereplai": [2, 74, 75], "fk1": [2, 59], "v4": [2, 59, 91, 107, 153, 298, 299, 300, 301, 303, 304, 305, 306, 349, 351, 364], "expert": [2, 59], "fk1_microopenrandom_v2d": [2, 59], "func": [2, 52, 53, 54, 55, 56, 57, 58, 59, 60, 174, 349, 355, 360, 365, 368], "obs_norm": 2, "norm": [2, 4, 8, 83, 84, 326, 349, 350, 351, 361, 362, 363], "num_work": [2, 34, 36, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 104, 107, 113, 349, 350], "os": [2, 36, 45, 61, 350], "cpu_count": [2, 36, 45, 61], "num_chunk": [2, 52, 53, 54, 55, 56, 57, 58, 59, 60], "1000": [2, 4, 38, 66, 74, 75, 87, 91, 107, 113, 127, 173, 240, 244, 245, 249, 271, 349, 350, 351, 352, 354, 356, 358, 364, 365], "mp_start_method": [2, 52, 53, 54, 55, 56, 57, 58, 59, 60, 107, 113], "fork": [2, 5, 52, 53, 54, 55, 56, 57, 58, 59, 60, 349, 350, 351, 352, 361, 362, 364], "recreat": [2, 363], "customari": [2, 344], "moreov": [2, 3], "fine": [2, 3, 74, 87, 91, 107, 113, 124, 143, 356, 364], "grain": [2, 3, 74, 87, 91, 107, 113, 124], "nomenclatur": 2, "compact": 2, "propos": [2, 127, 136, 207, 271, 280, 344, 352, 365], "replaybufferensembl": [2, 52, 72, 77, 82], "primit": [2, 3, 4, 58, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281], "individu": [2, 4, 17, 18, 19, 20, 31, 45, 69, 78, 87, 91, 101, 102, 107, 113, 175, 349, 362], "dummi": [2, 3, 307, 349, 356, 368], "semant": [2, 27, 28, 344], "ident": [2, 3, 13, 14, 15, 31, 34, 36, 39, 74, 87, 91, 104, 107, 113, 136, 211, 212, 289, 290, 291, 292, 338, 339, 350, 353, 361, 362], "another_kei": [2, 69], "renam": [2, 34, 36, 39, 69, 152, 154, 183, 349, 355], "resiz": [2, 3, 60, 69, 127, 350, 352, 353, 365, 368], "imag": [2, 3, 4, 7, 58, 129, 149, 165, 171, 206, 307, 309, 349, 350, 353, 357, 362, 364, 368], "comops": 2, "totensorimag": [2, 3, 60, 69, 127, 153, 350, 352, 365, 367, 368], "renametransform": [2, 69, 87, 91, 107, 113], "rb0": [2, 69], "in_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 83, 84, 87, 91, 103, 107, 113, 118, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 139, 141, 143, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 159, 162, 164, 165, 166, 167, 169, 171, 173, 185, 195, 201, 205, 208, 220, 229, 230, 232, 233, 234, 235, 237, 238, 243, 245, 246, 248, 249, 251, 252, 253, 258, 259, 260, 261, 262, 264, 265, 266, 272, 273, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 308, 309, 336, 344, 349, 350, 351, 352, 354, 355, 358, 360, 361, 362, 363, 364, 365, 367, 368], "pixel": [2, 3, 7, 25, 60, 69, 85, 86, 90, 92, 93, 110, 127, 129, 136, 139, 141, 145, 147, 149, 153, 165, 169, 171, 189, 216, 217, 307, 309, 344, 349, 350, 352, 357, 361, 364, 365, 367, 368], "rb1": [2, 69], "out_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 83, 84, 87, 91, 103, 107, 113, 118, 125, 126, 127, 128, 129, 130, 132, 133, 135, 139, 141, 143, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 159, 162, 164, 165, 166, 169, 171, 173, 185, 195, 196, 201, 205, 208, 220, 221, 229, 230, 232, 233, 234, 235, 237, 239, 243, 245, 246, 247, 248, 249, 251, 252, 253, 258, 259, 260, 265, 266, 272, 273, 276, 277, 278, 279, 287, 289, 290, 291, 292, 307, 309, 322, 336, 344, 349, 350, 351, 352, 354, 358, 360, 361, 362, 363, 364, 365, 367, 368], "pixels33": [2, 69], "data0": [2, 69], "244": [2, 69, 149, 171, 363], "data1": [2, 69], "_": [2, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 88, 95, 114, 115, 128, 132, 134, 135, 143, 145, 152, 165, 173, 175, 232, 248, 253, 257, 258, 259, 261, 265, 266, 272, 276, 277, 279, 281, 289, 290, 291, 292, 311, 346, 349, 350, 351, 352, 358, 361, 362, 363, 365, 367], "rang": [2, 3, 4, 8, 11, 26, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 78, 87, 88, 91, 101, 102, 107, 113, 154, 165, 173, 175, 200, 204, 273, 281, 345, 346, 349, 351, 352, 355, 356, 358, 361, 362, 363, 365, 367], "parent": [2, 3, 20, 25, 27, 44, 53, 69, 77, 82, 87, 91, 107, 113, 124, 127, 128, 131, 133, 136, 139, 140, 145, 149, 157, 161, 162, 163, 164, 166, 168, 169, 175, 233, 274, 276, 293, 307, 309, 349, 356, 361, 363, 367, 368], "basic": [2, 103, 344, 351, 355, 356, 358, 361, 368], "properti": [2, 3, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 103, 107, 113, 123, 166, 167, 175, 194, 202, 213, 218, 226, 227, 228, 243, 274, 279, 354, 356, 363, 365], "input": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 87, 91, 101, 102, 103, 106, 107, 108, 109, 113, 114, 115, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 183, 184, 186, 187, 189, 190, 191, 192, 195, 196, 199, 200, 201, 203, 204, 205, 206, 211, 212, 213, 214, 221, 222, 223, 224, 225, 230, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 320, 324, 329, 336, 344, 345, 346, 349, 350, 351, 352, 353, 361, 362, 363, 367, 368], "send": [2, 3, 8, 316, 367], "receiv": [2, 3, 31, 40, 87, 91, 107, 113, 166, 167, 175, 206, 295, 345, 349, 351, 355, 360, 363], "spawn": [2, 3, 4, 17, 21, 95, 104, 107, 113, 350, 361, 362], "check_env_spec": [2, 3, 91, 107, 151, 307, 342, 351, 361, 362, 363], "saniti": [2, 3, 7, 176, 351], "utmost": 2, "commonli": [2, 67, 74, 75, 368], "emploi": [2, 214], "languag": [2, 40], "scarc": 2, "address": [2, 365], "subdomain": 2, "facilit": [2, 3, 7, 148, 149, 169, 171, 233, 234, 235, 344, 349, 352, 354, 363], "extern": [2, 3, 132, 135, 361, 368], "token": [2, 36, 37, 40, 43, 45, 61], "manner": [2, 91, 149, 169, 344, 349, 350, 351, 356, 360, 363, 365], "dm": [3, 349, 368], "base": [3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 34, 35, 36, 38, 39, 41, 42, 45, 58, 71, 78, 79, 81, 83, 84, 87, 91, 95, 96, 97, 103, 104, 105, 107, 113, 114, 154, 163, 169, 170, 211, 233, 242, 258, 259, 261, 262, 264, 265, 266, 268, 272, 276, 277, 278, 279, 281, 316, 326, 344, 345, 346, 349, 350, 352, 353, 354, 355, 360, 361, 362, 363, 365, 368], "goal": [3, 4, 52, 53, 54, 55, 56, 57, 58, 59, 60, 162, 349, 350, 351, 352, 362, 363], "abl": [3, 100, 108, 109, 349, 351, 352, 354, 360, 361, 362, 363, 365, 367], "experi": [3, 35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 66, 67, 176, 311, 312, 313, 314, 315, 316, 343, 350, 351, 356, 357, 361, 362, 365], "box": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 20, 21, 87, 88, 91, 101, 102, 107, 108, 109, 111, 112, 113, 127, 130, 136, 142, 143, 145, 147, 152, 154, 157, 163, 166, 172, 173, 175, 307, 336, 349, 350, 351, 352, 355, 360, 361, 362, 364, 365, 367, 368], "hope": 3, "nn": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 83, 84, 87, 91, 103, 107, 113, 131, 134, 136, 143, 149, 163, 166, 167, 169, 171, 175, 185, 186, 187, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 210, 211, 212, 215, 220, 221, 229, 232, 233, 234, 235, 237, 238, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 253, 258, 259, 261, 262, 264, 265, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 336, 344, 345, 349, 350, 351, 352, 354, 355, 358, 360, 361, 362, 363, 364, 365, 367, 368], "organis": [3, 59, 87, 91, 107, 113, 167, 350], "arbitrari": [3, 33, 38, 87, 91, 107, 113, 123, 344, 349, 350, 363, 365], "structur": [3, 7, 34, 35, 36, 38, 39, 40, 41, 42, 45, 78, 87, 91, 107, 113, 132, 135, 184, 211, 244, 289, 290, 291, 292, 293, 342, 345, 349, 351, 352, 353, 356, 361, 362, 363, 364], "attribut": [3, 4, 31, 34, 36, 39, 45, 58, 87, 90, 91, 92, 107, 113, 136, 149, 169, 175, 201, 205, 249, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 349, 352, 363], "live": [3, 12, 13, 14, 15, 16, 18, 19, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 103, 107, 113, 136, 175], "actual": [3, 4, 7, 52, 54, 55, 56, 58, 59, 60, 87, 91, 107, 113, 172, 329, 345, 349, 351, 361, 362, 363], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 72, 87, 90, 91, 92, 107, 113, 128, 133, 136, 145, 183, 185, 186, 208, 243, 245, 249, 252, 258, 259, 260, 262, 273, 276, 277, 279, 281, 287, 289, 290, 291, 292, 340, 346, 350, 351, 354, 363, 368], "care": [3, 8, 87, 91, 107, 113, 166, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 309, 349, 351, 361, 362, 363, 365], "parametr": [3, 214, 249, 259, 265, 272, 279, 349, 351], "hardwar": 3, "observation_spec": [3, 87, 91, 103, 107, 113, 121, 124, 127, 128, 129, 130, 131, 132, 133, 135, 136, 139, 141, 142, 143, 145, 147, 149, 151, 153, 157, 159, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 175, 185, 201, 205, 208, 330, 336, 349, 351, 355, 360, 361, 362, 363, 368], "compositespec": [3, 27, 28, 49, 87, 89, 91, 103, 107, 113, 121, 124, 132, 133, 134, 135, 137, 143, 151, 152, 158, 161, 163, 166, 175, 180, 184, 185, 208, 232, 236, 245, 251, 252, 342, 349, 351, 352, 361, 362, 363, 368], "pair": [3, 31, 34, 36, 39, 54, 85, 86, 87, 91, 107, 113, 154, 163, 201, 233, 245, 249, 274, 289, 290, 291, 292, 293, 344, 345, 349, 350, 351, 354, 355, 360, 363, 368], "state_spec": [3, 87, 91, 103, 107, 113, 121, 185, 208, 363, 368], "reward_spec": [3, 87, 91, 103, 107, 113, 121, 124, 125, 130, 131, 132, 133, 135, 151, 155, 156, 157, 159, 166, 168, 175, 185, 208, 351, 361, 362, 363, 368], "done_spec": [3, 87, 91, 107, 113, 132, 133, 135, 136, 151, 166, 175, 184, 361, 362, 363, 368], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 101, 102, 107, 113, 114, 115, 244, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 344, 361, 362, 363, 364], "input_spec": [3, 87, 91, 103, 107, 113, 124, 131, 132, 133, 134, 145, 147, 151, 152, 157, 158, 161, 162, 163, 166, 167, 168, 170, 175, 351, 363], "full_action_spec": [3, 87, 91, 107, 113, 185, 208, 351, 361, 362], "full_state_spec": [3, 87, 91, 107, 113, 185, 208, 351], "lock": [3, 25, 27, 34, 36, 39, 87, 91, 107, 113, 124, 163, 173, 363], "output_spec": [3, 87, 91, 107, 113, 124, 131, 132, 133, 137, 143, 151, 152, 158, 161, 166, 167, 175, 361, 363], "full_observation_spec": [3, 87, 91, 107, 113, 185, 208, 361], "full_reward_spec": [3, 87, 91, 107, 113, 124, 133, 151, 361, 362], "full_done_spec": [3, 87, 91, 107, 113, 124, 133, 151, 184, 361, 362], "importantli": [3, 245, 249], "action_s": 3, "help": [3, 4, 31, 87, 91, 107, 113, 136, 175, 258, 260, 273, 276, 278, 343, 345, 349, 350, 351, 352, 361, 362], "With": [3, 96, 97, 100, 162, 346, 350, 353, 355, 356, 357, 361, 362, 365, 368], "necessarili": [3, 87, 91, 107, 113, 368], "present": [3, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 73, 87, 90, 91, 107, 113, 137, 154, 158, 167, 175, 183, 184, 188, 189, 190, 191, 192, 198, 203, 214, 219, 243, 244, 248, 249, 250, 251, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 340, 346, 349, 358, 360, 361, 362, 365, 367], "0s": [3, 52, 58, 163, 352], "step_and_maybe_reset": [3, 87, 91, 107, 113, 353], "done_kei": [3, 22, 87, 91, 107, 113, 123, 127, 136, 154, 161, 175, 183, 361, 362], "assign": [3, 4, 13, 14, 16, 31, 34, 36, 39, 87, 91, 107, 113, 167, 175, 261, 262, 264, 279, 351, 354, 361, 362, 365], "_reset": [3, 87, 91, 103, 107, 113, 121, 123, 124, 127, 132, 135, 151, 184, 185, 208, 361], "data_": [3, 87, 91, 107, 113], "append": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 88, 91, 107, 113, 123, 130, 131, 154, 163, 167, 172, 200, 201, 204, 205, 238, 246, 349, 350, 351, 352, 361, 362, 363, 364, 365, 367], "set_se": [3, 13, 14, 15, 16, 20, 31, 83, 84, 87, 91, 96, 97, 103, 107, 113, 123, 145, 152, 157, 162, 164, 167, 175, 356, 358, 363, 367, 368], "seed": [3, 13, 14, 15, 16, 20, 59, 87, 91, 103, 107, 108, 109, 113, 114, 115, 121, 124, 132, 135, 151, 167, 176, 307, 326, 361], "determinist": [3, 31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 188, 197, 216, 223, 232, 241, 248, 249, 252, 259, 344, 349, 350, 352, 354, 355, 358, 361, 363, 368], "preced": [3, 31, 352], "risk": [3, 150], "overlap": [3, 41, 78], "reproduc": [3, 127, 176, 349, 351, 362], "maximum": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 40, 43, 45, 61, 63, 64, 65, 66, 80, 87, 91, 107, 113, 134, 155, 161, 162, 164, 226, 227, 228, 252, 259, 265, 266, 272, 274, 275, 279, 309, 323, 349, 350, 351, 352, 354, 361, 362, 365], "max_step": [3, 13, 78, 87, 91, 101, 102, 103, 107, 113, 114, 115, 161, 175, 307, 353, 354, 355, 357, 358, 361, 362, 367, 368], "tensordictmodul": [3, 13, 14, 15, 16, 17, 18, 19, 20, 40, 83, 84, 87, 91, 103, 107, 113, 126, 143, 196, 201, 205, 208, 220, 221, 229, 230, 233, 234, 235, 236, 237, 238, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 259, 261, 265, 266, 268, 269, 270, 272, 274, 277, 279, 281, 287, 288, 289, 290, 291, 292, 322, 336, 342, 349, 351, 352, 355, 358, 360, 361, 362, 363, 364], "trail": [3, 173], "treat": [3, 31, 354, 355], "figur": [3, 349, 351, 352, 362, 363, 368], "brief": [3, 351, 353, 355, 365], "deliveri": 3, "design": [3, 31, 33, 72, 77, 82, 87, 91, 101, 102, 107, 113, 127, 150, 167, 175, 237, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 363, 365, 368], "metaclass": 3, "everi": [3, 8, 25, 27, 31, 33, 76, 87, 91, 107, 113, 161, 162, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 211, 212, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 326, 346, 349, 350, 351, 352, 353, 354, 361, 362, 363], "flank": [3, 352], "dual": 3, "strictli": [3, 8, 31, 87, 91, 107, 113, 167, 175, 279, 349, 351], "refer": [3, 7, 8, 9, 20, 31, 40, 87, 90, 91, 92, 107, 113, 167, 173, 175, 185, 196, 197, 208, 209, 210, 211, 216, 217, 222, 223, 239, 258, 267, 268, 269, 270, 276, 279, 289, 294, 302, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 365, 368], "union": [3, 11, 13, 15, 16, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 66, 67, 87, 91, 107, 113, 121, 134, 136, 142, 145, 149, 150, 154, 156, 158, 169, 171, 173, 175, 183, 187, 194, 196, 209, 210, 211, 212, 213, 214, 218, 220, 221, 226, 227, 228, 229, 243, 248, 264, 266, 271, 277, 280, 302, 320, 322, 323, 331, 332, 334, 336, 337, 338, 339, 340], "carri": [3, 20, 45, 87, 91, 107, 113, 163, 274, 350, 352, 361, 362, 363, 365], "assess": [3, 13, 14, 15, 16, 17, 18, 19, 20, 101, 102, 116, 349], "split_trajectori": [3, 13, 14, 15, 16, 17, 18, 19, 20, 52, 58, 67, 74, 75, 342], "adjac": [3, 22, 139, 243], "reli": [3, 199, 200, 203, 204, 258, 345, 349, 351, 354, 356, 363, 368], "junction": 3, "inittrack": [3, 201, 205, 243, 349, 352], "tutori": [3, 341, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 368], "scratch": [3, 8, 350, 363], "gym3": 3, "envpool": [3, 104, 105], "interfac": [3, 94, 106, 206, 213, 344, 349, 351, 357, 363, 365], "simultan": [3, 19, 104, 105, 107, 113, 363], "advantag": [3, 8, 198, 258, 260, 273, 276, 278, 289, 290, 291, 292, 293, 294, 296, 298, 300, 302, 303, 305, 345, 346, 349, 350, 351, 352, 362, 363, 368], "scale": [3, 4, 54, 87, 91, 107, 113, 127, 143, 145, 156, 162, 165, 197, 202, 215, 222, 223, 227, 228, 233, 234, 235, 245, 249, 251, 258, 259, 272, 276, 277, 278, 279, 324, 330, 340, 344, 349, 350, 351, 352, 354, 362, 367], "varieti": 3, "inherit": [3, 87, 91, 107, 113, 207, 274, 346, 351, 361, 362], "Of": [3, 7, 343, 363, 368], "cours": [3, 4, 343, 363, 368], "from_pixel": [3, 83, 84, 85, 86, 90, 92, 93, 96, 97, 110, 127, 153, 307, 309, 349, 350, 352, 353, 357, 358, 364, 365, 367, 368], "81": [3, 350, 363, 365], "simpli": [3, 6, 34, 36, 39, 45, 77, 78, 82, 137, 158, 172, 274, 344, 345, 349, 351, 355, 361, 362, 368], "d": [3, 35, 38, 41, 42, 55, 57, 59, 60, 61, 66, 67, 199, 203, 245, 249, 367], "privat": [3, 87, 91, 107, 113, 172, 363, 368], "absenc": 3, "total": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 29, 30, 33, 52, 75, 78, 260, 273, 276, 317, 319, 322, 326, 329, 330, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368], "accord": [3, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 39, 40, 69, 72, 145, 156, 202, 213, 222, 227, 228, 287, 344, 354, 355, 361, 363, 365], "inner": [3, 87, 91, 107, 113, 134, 346, 350, 351, 362, 368], "logic": [3, 361], "nevertheless": [3, 351, 353, 365], "kept": [3, 22, 73, 75, 134, 158, 166, 176, 183, 202, 227, 228, 355, 361], "mind": [3, 52, 58, 67, 74, 75, 87, 91, 107, 113, 361, 362], "desig": 3, "wherev": 3, "expos": [3, 110, 132, 135, 250, 350], "modif": [3, 5, 25, 27, 31, 87, 91, 107, 113, 139, 175, 184, 274, 351, 363], "lost": [3, 8, 172], "eras": [3, 67, 74, 87, 91, 107, 113, 167], "intern": [3, 347], "face": [3, 5, 8, 9, 353, 368], "NOT": [3, 150], "outsid": [3, 15, 357, 361, 362, 363], "right": [3, 6, 7, 22, 40, 74, 350, 351, 362, 363, 368], "preliminari": 3, "warranti": 3, "affect": [3, 8, 31, 87, 91, 107, 113, 166, 167, 175, 176, 289, 290, 291, 292, 361], "assumpt": [3, 363, 365], "preclud": 3, "presenc": [3, 355], "annihil": 3, "reason": [3, 4, 8, 31, 58, 87, 91, 107, 108, 109, 113, 149, 169, 175, 205, 345, 349, 350, 351, 355, 356, 361, 363, 365], "advanc": [3, 20, 35, 38, 41, 42, 353, 356, 365], "explicitli": [3, 4, 123, 350, 352, 356, 361, 362, 365], "place": [3, 25, 27, 31, 34, 36, 39, 63, 64, 69, 72, 80, 87, 88, 91, 107, 113, 114, 115, 123, 131, 136, 149, 163, 166, 167, 169, 171, 172, 173, 175, 184, 237, 243, 248, 323, 328, 329, 350, 351, 354, 357, 361, 362, 363, 365], "superse": 3, "pettingzoowrapp": [3, 342], "group": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 52, 87, 91, 100, 101, 102, 107, 108, 109, 113, 114, 115, 116, 344, 350, 354, 356, 362, 365], "associ": [3, 31, 34, 36, 39, 87, 91, 107, 113, 175, 222, 340, 349, 365], "environemtn": 3, "__not__": 3, "constrain": [3, 143, 201, 205, 276], "li": 3, "fact": [3, 7, 8, 349, 351, 353, 361, 362, 363, 364, 365, 368], "predict": [3, 31, 40, 195, 197, 207, 208, 237, 254, 258, 260, 264, 267, 269, 270, 273, 276, 278, 288, 344, 349, 350, 355], "know": [3, 4, 9, 35, 38, 41, 42, 236, 277, 322, 349, 350, 351, 352, 353, 354, 355, 356, 361, 362, 365], "meaning": 3, "perfectli": [3, 346, 349, 363], "meaningless": 3, "val": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 355, 367], "agent0": 3, "agent1": 3, "overrid": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 38, 44, 46, 47, 52, 87, 91, 107, 113, 123, 340, 344], "bool": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 69, 72, 73, 74, 75, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 127, 128, 132, 134, 135, 136, 137, 139, 143, 144, 145, 147, 149, 151, 152, 154, 156, 157, 158, 161, 163, 165, 167, 168, 169, 171, 173, 175, 176, 183, 184, 185, 186, 187, 189, 190, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 227, 228, 232, 238, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 287, 289, 290, 291, 292, 295, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 316, 319, 320, 322, 323, 324, 326, 340, 350, 351, 353, 354, 356, 357, 361, 362, 363, 364, 365, 367, 368], "500": [3, 349, 350, 363, 367], "launch": [3, 13, 14, 16, 17, 18, 19, 21, 52, 55, 107, 113], "bottleneck": [3, 8, 67, 74, 75], "great": [3, 7, 8, 361, 367], "speedup": [3, 8, 361, 368], "precis": [3, 132, 135, 183, 200, 204, 349, 351], "misspecifi": 3, "caus": [3, 7, 8, 63, 64, 80, 87, 91, 95, 107, 113, 150, 368], "breakag": 3, "rais": [3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 58, 87, 91, 107, 113, 116, 127, 138, 144, 154, 162, 163, 164, 167, 175, 176, 236, 240, 241, 244, 279, 349, 351, 352, 354, 358, 360, 361, 362, 365, 368], "mismatch": [3, 350], "mostli": [3, 16, 309, 345, 357, 365, 368], "subprocess": [3, 13, 14, 16, 88, 107, 113], "multithreadedenv": [3, 342], "underneath": 3, "higher": [3, 4, 130, 252, 349, 350, 351, 361, 365, 368], "flexibl": [3, 9, 104, 282, 345, 346, 349, 365, 368], "cover": [3, 343, 351, 353, 356, 357, 363, 367], "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 60, 61, 69, 87, 91, 100, 103, 106, 107, 108, 109, 113, 124, 131, 132, 133, 136, 137, 143, 149, 151, 152, 158, 161, 163, 166, 167, 169, 171, 173, 175, 178, 182, 186, 187, 206, 211, 212, 214, 220, 229, 236, 238, 245, 248, 249, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 283, 287, 295, 307, 338, 342, 344, 349, 350, 351, 356, 361, 362, 363, 365, 368], "atari": [3, 4, 52, 127, 309, 357, 368], "classic": [3, 103, 109, 350], "benchmark_batched_env": 3, "seamlessli": [3, 363], "infrastructur": [3, 361, 362], "act": [3, 4, 74, 75, 108, 109, 167, 195, 212, 259, 261, 272, 277, 279, 281, 352, 361, 362, 365], "world": [3, 5, 103, 254, 269, 357, 361, 362, 363, 368], "paradigm": [3, 16, 362], "decpodp": 3, "game": [3, 4, 5, 52, 101, 102, 309, 357], "thank": [3, 349, 353], "carrier": [3, 351, 352, 353, 365], "particular": [3, 31, 45, 54, 55, 87, 91, 107, 113, 167, 175, 345, 346, 350, 352, 353, 360, 362, 365], "thu": [3, 273, 362], "let": [3, 6, 7, 31, 35, 38, 41, 42, 43, 87, 91, 107, 108, 109, 113, 127, 175, 201, 205, 211, 212, 238, 322, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 367, 368], "vma": [3, 114, 115, 307, 361, 362], "robot": [3, 5, 7, 58, 149, 169, 171, 362], "vmasenv": [3, 307, 342, 361, 362], "balanc": [3, 85, 86, 349, 350], "num_env": [3, 20, 90, 94, 105, 114, 115, 307, 361, 362], "n_agent": [3, 114, 115, 211, 212, 220, 229, 287, 307, 361, 362], "ground_rew": 3, "pos_rew": [3, 362], "style": [3, 35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60], "relat": [3, 4, 10, 35, 107, 139, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 350, 358, 363], "vari": [3, 90, 92, 93, 108, 109, 110, 114, 150, 362], "creation": [3, 107, 113, 368], "info_spec": [3, 107], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 83, 84, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113, 121, 151, 184, 262, 265, 266, 287, 342, 361, 362, 368], "simpl": [3, 9, 31, 33, 87, 91, 107, 113, 175, 189, 243, 249, 262, 264, 274, 278, 289, 344, 345, 349, 350, 351, 353, 354, 355, 361, 362, 365, 368], "prefix": [3, 22, 31, 34, 36, 39, 45, 87, 91, 107, 113, 167, 175, 274, 279, 308, 352, 355, 368], "exactli": [3, 31, 87, 91, 93, 107, 113, 167, 175, 199, 203, 279, 349, 352, 356, 361, 362], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 87, 91, 107, 113, 121, 134, 183, 185, 207, 208, 236, 240, 241, 243, 244, 361, 362], "reward_kei": [3, 87, 91, 107, 113, 175, 183, 185, 208, 320, 324, 361, 362], "set_kei": [3, 136, 258, 260, 262, 265, 266, 267, 272, 273, 274, 276, 277, 278, 279, 287, 293, 349, 361, 362], "awai": [3, 351, 353, 361, 362], "eas": [3, 361, 362], "leaf": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 32, 33, 44, 46, 47, 87, 91, 107, 113, 161, 249], "full": [3, 87, 91, 107, 113, 201, 205, 239, 317, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "autoresettransform": 3, "copi": [3, 11, 17, 18, 19, 20, 31, 34, 36, 39, 40, 45, 58, 87, 91, 107, 113, 123, 152, 162, 167, 175, 183, 201, 205, 237, 274, 279, 307, 345, 349, 350, 352, 353, 361, 365], "invalid": [3, 31, 78, 87, 91, 107, 113, 116, 175, 209, 210], "nan": [3, 123, 172], "auto_reset": [3, 87, 91, 107, 113, 123, 175, 363], "auto_reset_replac": [3, 123], "placehold": [3, 93, 136, 167], "set_gym_backend": [3, 87, 90, 91, 107, 113, 117, 123, 342, 353], "manual_se": [3, 35, 38, 41, 42, 55, 59, 60, 74, 75, 83, 84, 87, 91, 107, 113, 121, 123, 134, 145, 154, 157, 162, 164, 175, 209, 210, 218, 232, 239, 240, 241, 244, 252, 258, 259, 261, 265, 272, 279, 356, 358, 361, 362, 363, 367, 368], "autoresettinggymenv": [3, 123], "_step": [3, 87, 91, 107, 113, 121, 123, 124, 132, 135, 139, 151, 152], "self": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 36, 39, 87, 91, 103, 107, 113, 121, 123, 124, 131, 132, 135, 149, 151, 163, 166, 167, 169, 171, 175, 185, 196, 208, 220, 229, 236, 240, 245, 248, 253, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 346, 349, 361, 363, 365, 367, 368], "super": [3, 103, 121, 123, 124, 132, 135, 151, 185, 196, 208, 253, 259, 261, 266, 272, 277, 279, 281, 349, 363, 365, 367], "td_reset": [3, 123], "exclud": [3, 8, 54, 59, 87, 91, 107, 113, 123, 127, 137, 183, 220, 361, 362, 365], "r": [3, 4, 31, 121, 123, 130, 145, 159, 200, 249, 257, 288, 307, 344, 350, 363, 368], "break_when_any_don": [3, 87, 91, 107, 113, 123, 175, 243, 362], "3633e": [3, 123], "02": [3, 87, 91, 107, 113, 123, 348, 350, 351, 358, 361, 363, 364, 366], "4877e": [3, 123], "01": [3, 123, 145, 244, 255, 260, 273, 276, 348, 350, 362, 363, 364, 366], "2849e": [3, 123], "7584e": [3, 123], "6609e": [3, 123], "6166e": [3, 123], "8366e": [3, 123], "2761e": [3, 123], "5685e": [3, 123], "4102e": [3, 123], "8111e": [3, 123], "9959e": [3, 123], "0865e": [3, 123], "5644e": [3, 123], "2119e": [3, 123], "2542e": [3, 123], "03": [3, 87, 91, 107, 113, 123, 145, 348, 350, 361, 363, 364, 366], "9952e": [3, 123], "4059e": [3, 123], "2094e": [3, 123], "9009e": [3, 123], "5140e": [3, 123], "3554e": [3, 123], "2920e": [3, 123], "7893e": [3, 123], "6429e": [3, 123], "3057e": [3, 123], "2867e": [3, 123], "6963e": [3, 123], "3818e": [3, 123], "2576e": [3, 123], "2679e": [3, 123], "1640e": [3, 123], "00": [3, 83, 84, 123, 348, 350, 351, 361, 362, 363, 364, 366], "6972e": [3, 123], "0212e": [3, 123], "5959e": [3, 123], "4637e": [3, 123], "3121e": [3, 123], "2168e": [3, 123], "5232e": [3, 123], "7704e": [3, 123], "7457e": [3, 123], "4127e": [3, 123], "1064e": [3, 123], "0854e": [3, 123], "5712e": [3, 123], "2189e": [3, 123], "5235e": [3, 123], "8289e": [3, 123], "0009e": [3, 123], "0257e": [3, 123], "8893e": [3, 123], "5872e": [3, 123], "9405e": [3, 123], "7766e": [3, 123], "0403e": [3, 123], "0626e": [3, 123], "2959e": [3, 123], "7263e": [3, 123], "2775e": [3, 123], "9564e": [3, 123], "0411e": [3, 123], "6769e": [3, 123], "6354e": [3, 123], "8698e": [3, 123], "1765e": [3, 123], "6292e": [3, 123], "5375e": [3, 123], "1820e": [3, 123], "7023e": [3, 123], "5836e": [3, 123], "9016e": [3, 123], "4826e": [3, 123], "6191e": [3, 123], "6387e": [3, 123], "8667e": [3, 123], "2056e": [3, 123], "1147e": [3, 123], "5991e": [3, 123], "0278e": [3, 123], "5219e": [3, 123], "3067e": [3, 123], "6617e": [3, 123], "3322e": [3, 123], "2629e": [3, 123], "4599e": [3, 123], "7298e": [3, 123], "5848e": [3, 123], "0148e": [3, 123], "5745e": [3, 123], "6982e": [3, 123], "7877e": [3, 123], "3527e": [3, 123], "7285e": [3, 123], "6668e": [3, 123], "0583e": [3, 123], "6956e": [3, 123], "3962e": [3, 123], "9845e": [3, 123], "5015e": [3, 123], "5903e": [3, 123], "9993e": [3, 123], "9418e": [3, 123], "0196e": [3, 123], "6557e": [3, 123], "2109e": [3, 123], "8997e": [3, 123], "1507e": [3, 123], "7363e": [3, 123], "0310e": [3, 123], "9574e": [3, 123], "8980e": [3, 123], "0090e": [3, 123], "torchvis": [3, 149, 171, 311, 361, 367, 368], "base_env": [3, 84, 87, 91, 92, 97, 107, 113, 121, 124, 130, 132, 134, 135, 143, 147, 151, 153, 159, 161, 163, 164, 167, 175, 309, 349, 350, 351, 361, 364, 367, 368], "callabl": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 88, 91, 103, 107, 113, 120, 122, 124, 131, 136, 163, 167, 175, 186, 187, 206, 257, 307, 331, 332, 338, 339, 340, 350, 365], "tensordictbas": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 27, 28, 31, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 78, 87, 89, 91, 107, 113, 121, 123, 124, 126, 127, 128, 131, 132, 133, 136, 137, 138, 139, 142, 143, 148, 150, 151, 152, 154, 157, 158, 161, 162, 163, 164, 166, 167, 172, 173, 175, 183, 184, 185, 201, 205, 207, 208, 236, 237, 239, 240, 243, 244, 247, 248, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 326, 349, 361, 363], "appar": [3, 319], "bring": [3, 351, 353, 368], "signific": [3, 5, 8, 351, 368], "kind": [3, 38, 44, 183, 355, 361, 365], "consult": 3, "interest": [3, 245, 249, 344, 350, 351, 353, 361, 362, 363, 368], "resize_par": 3, "easi": [3, 5, 52, 57, 85, 86, 87, 91, 96, 97, 107, 113, 236, 240, 241, 244, 344, 345, 349, 350, 351, 362, 364, 365, 368], "graph": [3, 4, 8, 83, 84, 96, 97, 285, 286, 349, 363], "revers": [3, 203], "order": [3, 15, 31, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 73, 75, 87, 91, 107, 113, 128, 132, 135, 147, 167, 175, 232, 238, 248, 250, 251, 253, 258, 259, 261, 265, 266, 272, 276, 277, 278, 279, 281, 350, 361, 362], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 131, 134, 186, 187, 251, 368], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 127, 132, 135, 137, 145, 154, 175, 256, 265, 272, 363], "in_keys_inv": [3, 118, 130, 132, 133, 135, 145, 146, 147, 151, 152, 154, 159, 166, 349, 360, 363, 368], "append_transform": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 107, 113, 118, 126, 149, 163, 167, 169, 307, 349, 352, 361, 363, 365, 367, 368], "doubletofloat": [3, 349, 351, 360], "float32": [3, 13, 14, 15, 25, 35, 40, 41, 42, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 67, 80, 83, 84, 87, 90, 91, 92, 96, 97, 103, 106, 107, 111, 112, 113, 114, 115, 124, 132, 135, 136, 137, 145, 147, 151, 152, 154, 158, 161, 163, 165, 180, 183, 185, 195, 196, 201, 205, 208, 220, 221, 229, 232, 233, 234, 235, 237, 238, 243, 244, 245, 246, 247, 248, 251, 253, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 287, 344, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364, 365, 367, 368], "float64": [3, 31, 52, 53, 54, 55, 56, 57, 58, 59, 60, 85, 86, 87, 91, 101, 102, 107, 113, 131, 132, 135, 149, 163, 166, 167, 169, 171, 175, 248], "regist": [3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 55, 87, 90, 91, 92, 107, 113, 132, 135, 136, 157, 167, 175, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 307, 309, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 346, 349, 351, 353, 365], "manipul": [3, 4, 8, 85, 86, 149, 169], "third_transform": 3, "unexpect": [3, 31, 87, 91, 107, 113, 175, 368], "behviour": 3, "fortun": [3, 352, 353, 354, 357], "alreadi": [3, 8, 11, 31, 34, 36, 39, 45, 52, 87, 91, 107, 113, 163, 175, 184, 249, 289, 290, 291, 292, 349, 351, 357, 361, 362], "chang": [3, 5, 7, 31, 35, 38, 41, 42, 52, 63, 64, 65, 67, 73, 74, 76, 77, 80, 87, 91, 107, 113, 124, 131, 132, 133, 135, 137, 143, 151, 152, 158, 161, 166, 167, 173, 175, 203, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 345, 349, 352, 361, 362, 363, 364, 365, 368], "catfram": [3, 243, 350], "hold": [3, 285, 286, 363, 365], "notic": [3, 78, 127, 351, 358, 363], "parenthood": 3, "henc": [3, 35, 150, 184, 211, 344, 349, 351, 361, 362, 363], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 107, 113, 307, 363], "discret": [3, 23, 26, 29, 30, 33, 47, 87, 91, 101, 102, 107, 108, 109, 113, 114, 115, 134, 218, 221, 264, 265, 266, 267, 344, 350, 354, 361, 362, 363, 368], "might": [3, 34, 36, 37, 39, 313, 343, 349, 353, 368], "action_mask": [3, 96, 97, 108, 109, 111, 112, 121], "unavail": [3, 108, 109], "probabl": [3, 4, 8, 40, 69, 72, 194, 196, 199, 201, 203, 205, 206, 209, 210, 218, 228, 240, 245, 249, 344, 350, 354, 367], "categor": [3, 26, 30, 33, 83, 84, 90, 92, 93, 96, 97, 101, 102, 104, 105, 108, 109, 110, 114, 115, 121, 136, 196, 218, 221, 238, 239, 245, 246, 247, 262, 265, 266, 287, 352], "probabilistictensordictmodul": [3, 143, 249, 250, 367], "tensordictsequenti": [3, 201, 205, 238, 240, 243, 250, 344, 349, 350, 352, 354, 358, 360, 361, 364, 367], "maskedcategor": [3, 210, 342], "linear": [3, 13, 14, 15, 16, 20, 31, 83, 84, 87, 91, 103, 107, 113, 131, 143, 149, 163, 166, 167, 169, 171, 175, 185, 186, 187, 189, 190, 191, 192, 196, 198, 206, 208, 211, 212, 213, 214, 215, 221, 222, 223, 232, 233, 234, 235, 240, 241, 242, 243, 244, 245, 246, 248, 251, 253, 258, 259, 261, 262, 264, 265, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 336, 344, 350, 360, 364, 367], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 195, 209, 210, 218, 239, 245, 265, 266, 344], "dist": [3, 10, 209, 210, 218, 354], "distribution_class": [3, 143, 233, 234, 235, 237, 245, 249, 251, 258, 259, 265, 266, 272, 276, 277, 278, 279, 344, 349, 351, 354, 361, 362, 367], "wrap": [3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 56, 83, 84, 87, 91, 92, 96, 97, 102, 105, 107, 108, 109, 113, 115, 175, 176, 201, 205, 230, 233, 234, 235, 236, 241, 243, 244, 246, 254, 287, 344, 349, 350, 351, 352, 355, 358, 361, 362, 368], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 121, 150, 175], "enviorn": [3, 101, 108, 109, 114, 115], "itself": [3, 31, 87, 91, 107, 113, 117, 123, 175, 274, 351, 353], "ey": 3, "report": [3, 83, 84, 96, 97, 357], "foremost": 3, "callback": [3, 87, 91, 107, 113, 362], "ad": [3, 4, 15, 22, 31, 35, 38, 41, 42, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 87, 91, 107, 113, 157, 167, 175, 213, 214, 244, 258, 260, 262, 267, 273, 276, 279, 287, 350, 352, 354, 361, 365, 368], "track": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 42, 73, 157, 173, 175, 243, 244, 314, 319, 350, 352, 353, 356, 362, 363, 365], "tensordictrecord": [3, 342], "render": [3, 8, 114, 307, 309, 322, 349, 350, 351, 353, 357], "videorecord": [3, 307, 342, 351, 357, 358, 361], "csvlogger": [3, 307, 309, 342, 350, 357, 358, 361], "wandblogg": [3, 342, 357], "tensorboardlogg": [3, 336, 342, 357], "tag": [3, 7, 307, 309, 311, 314, 340, 357, 358, 361], "mp4": [3, 307, 309, 311, 358, 361], "video_format": [3, 307, 309, 311, 358, 361], "detect": [3, 60], "whc": 3, "cwh": 3, "exp": [3, 215, 257], "al": [3, 90, 92, 136, 147, 185, 368], "pong": [3, 52, 105, 147, 368], "v5": [3, 90, 92, 105, 136, 147, 368], "cach": [3, 34, 36, 45, 52, 54, 55, 56, 58, 59, 60, 61, 67, 74, 87, 91, 107, 113, 123, 132, 135, 149, 167, 171, 183, 318, 364], "grow": 3, "until": [3, 7, 20, 164, 166, 175, 351, 352, 358, 361, 362], "dumpi": 3, "tediou": [3, 353], "expens": [3, 67, 74, 75, 307, 365], "workspac": [3, 87, 91, 107, 113], "pixelrendertransform": [3, 342, 361], "stream": [3, 58], "alik": [3, 307], "envcreat": [3, 15, 21, 107, 113, 307, 336, 337, 340, 342, 349, 350, 367, 368], "render_mod": [3, 307, 363], "rgb_arrai": [3, 307, 361, 362, 363], "uncom": [3, 357], "line": [3, 7, 31, 52, 87, 91, 107, 113, 175, 349, 350, 352, 354, 357, 358, 360, 361, 362, 365, 368], "comment": [3, 346, 350, 367], "pixels_record": [3, 307], "close": [3, 15, 91, 104, 143, 258, 260, 273, 276, 307, 349, 350, 353, 360, 361, 363, 367], "mission": 3, "irrespect": [3, 248, 249], "dmcontrol": [3, 87, 91, 107, 113], "jumanji": [3, 87, 91, 96, 97, 107, 113], "special": [3, 342, 344, 349, 352, 368], "framework": [3, 4, 9, 21, 83, 84, 87, 91, 96, 97, 103, 107, 113, 199, 367, 368], "Its": [3, 31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 173, 175, 248, 293], "success": [3, 52, 53, 54, 55, 56, 57, 58, 59, 60, 127, 166, 240, 350, 356, 358, 363, 365, 367], "foundat": [3, 5, 108, 109, 351, 362], "inspir": [3, 363], "gone": [3, 4, 5, 243], "hard": [3, 7, 78, 85, 86, 107, 271, 350, 368], "prefer": [3, 13, 14, 16, 19, 22, 35, 38, 41, 42, 150, 158, 276, 323, 344, 351, 361, 362, 365], "maintain": [3, 5, 9, 363], "concomittantli": 3, "problem": [3, 7, 8, 9, 15, 350, 351, 352, 356, 361, 362, 363, 365, 368], "decor": [3, 8, 11, 120, 274, 289, 290, 291, 292], "relev": [3, 40, 289, 290, 291, 292, 293, 316, 363], "gym_backend": [3, 120, 342], "env1": [3, 360], "venv": 3, "python3": [3, 6, 7, 10, 349, 355, 360, 361, 365, 368], "site": [3, 6, 7, 59, 120, 349, 355, 360, 361, 365, 368], "env2": [3, 360], "_env": [3, 6, 90, 368], "classic_control": 3, "pendulumenv": [3, 363], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 99, 117], "handi": [3, 87, 91, 107, 113, 357], "side": [3, 4, 368], "v0": [3, 13, 14, 87, 91, 93, 96, 97, 98, 99, 107, 113, 131, 167, 173, 336, 353, 355, 356, 357], "26": [3, 87, 91, 107, 113, 350, 361, 362, 363, 364], "fun": [3, 11, 120, 351, 361, 362, 365], "reveal": 4, "bug": [4, 367], "curv": 4, "exploit": [4, 354], "video": [4, 9, 309, 311, 322, 340, 342, 358, 361, 362], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 143, 361, 362, 364], "coeffici": [4, 40, 143, 362], "bonu": [4, 258, 260, 273, 276], "beta": [4, 35, 41, 66, 67, 265, 272, 273, 349, 350, 365, 367], "reduc": [4, 6, 26, 78, 162, 350, 361], "downstream": [4, 349], "formul": [4, 361, 362], "ob": [4, 8, 22, 25, 27, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 69, 74, 75, 78, 87, 91, 107, 113, 121, 123, 132, 133, 135, 145, 159, 165, 180, 183, 189, 190, 191, 192, 211, 212, 246, 253, 259, 261, 266, 272, 277, 279, 281, 289, 290, 291, 292, 350, 360, 361, 363, 365, 367, 368], "rate": [4, 52, 173, 288, 350, 351, 361, 362], "gradient": [4, 31, 87, 91, 107, 113, 167, 175, 202, 210, 214, 218, 227, 228, 258, 260, 261, 265, 266, 272, 273, 274, 276, 277, 278, 279, 281, 288, 289, 290, 291, 292, 326, 349, 351, 361, 362, 363], "easier": [4, 344, 349], "local": [4, 7, 10, 15, 20, 31, 67, 74, 87, 91, 107, 113, 167, 175, 211, 212, 220, 229, 287, 314, 316, 357, 358, 361, 362], "optima": 4, "sens": [4, 356, 363], "product": [4, 9, 199, 200, 203, 204, 338, 339], "sum": [4, 20, 30, 33, 78, 83, 84, 85, 86, 90, 92, 93, 96, 97, 104, 105, 110, 126, 157, 209, 210, 229, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 272, 273, 275, 276, 277, 278, 279, 281, 288, 295, 345, 349, 350, 351, 352, 355, 358, 361, 362, 363, 368], "stat": [4, 145, 330, 340, 350, 351], "w": [4, 69, 127, 129, 153, 165, 199, 244, 309, 350, 352, 365], "yield": [4, 15, 20, 31, 87, 91, 107, 113, 175, 274, 349, 355], "insight": 4, "auxiliari": [4, 355], "credit": 4, "futur": [4, 31, 34, 36, 39, 87, 91, 107, 113, 149, 167, 171, 175, 206, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 343, 355, 367], "past": [4, 243, 350, 365], "spars": [4, 352], "intermedi": [4, 13, 14, 126, 201, 205, 239, 349, 364], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 349], "discov": 4, "score": [4, 40], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 367], "select": [4, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 101, 102, 108, 109, 114, 115, 121, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 148, 150, 151, 152, 154, 157, 158, 161, 162, 163, 164, 166, 169, 170, 172, 173, 175, 185, 201, 205, 238, 246, 325, 349, 353, 365], "fall": [4, 54], "explicit": [4, 11, 45, 69, 365], "mechan": [4, 31, 87, 91, 107, 113, 167, 175, 350, 355, 363], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 87, 91, 107, 113, 203, 265, 272, 351, 362], "addition": 4, "timestep": [4, 40, 54, 154, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 361, 362], "realli": 4, "larg": [4, 26, 34, 36, 39, 132, 135, 169, 258, 260, 273, 276, 278, 350, 351, 361, 362, 365], "huge": [4, 212, 352], "std": [4, 145, 173, 215, 219, 236, 349, 368], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 348, 352, 353, 355, 356, 357, 358, 359, 360, 364, 365, 366], "initi": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 39, 40, 78, 87, 91, 107, 113, 126, 145, 149, 163, 166, 167, 169, 174, 175, 185, 199, 200, 203, 204, 208, 213, 214, 236, 240, 241, 243, 244, 258, 259, 261, 262, 264, 266, 267, 268, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 340, 349, 350, 352, 353, 354, 356, 361, 363, 368], "estim": [4, 52, 67, 74, 75, 136, 143, 189, 233, 234, 235, 258, 259, 260, 261, 262, 264, 266, 267, 268, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 345, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "unseen": 4, "extrins": 4, "wrong": [4, 67, 74], "bonus": 4, "denser": 4, "prior": [4, 223, 269, 362], "freshli": 4, "drop": [4, 73, 75, 183], "meant": [4, 31, 103], "encourag": [4, 107, 349, 350, 365], "measur": [4, 63, 64, 80, 83, 84, 96, 97, 351, 356], "novelti": 4, "revisit": 4, "previous": [4, 351, 368], "diminish": 4, "decreas": [4, 354], "ideal": [4, 145, 363], "down": [4, 13, 14, 15, 16, 352, 353], "anyth": [4, 13, 14, 15, 16, 17, 18, 19, 20], "try": [4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 34, 36, 39, 350, 351, 352, 355, 356, 361, 362, 363, 367, 368], "distil": 4, "nois": [4, 174, 214, 231, 244, 277, 281, 322, 340, 349, 361], "exploratori": [4, 258, 260, 273, 276], "misalign": 4, "trade": [4, 354], "unavoid": 4, "divers": [4, 107, 113], "bootstrap": [4, 267, 290, 296, 297, 349, 352], "noisi": [4, 213, 214, 231, 344], "unstabl": [4, 202, 227, 228], "inher": 4, "stochast": [4, 143, 197, 214, 216, 223, 259, 263, 265, 266, 272, 275, 277, 279, 344, 351, 354, 362], "enemi": 4, "pomdp": [4, 365], "loos": [4, 344, 350, 351], "nonexist": 4, "architectur": [4, 193, 355, 361, 362], "sequenc": [4, 13, 14, 15, 16, 25, 27, 29, 30, 35, 37, 38, 40, 43, 45, 58, 61, 62, 69, 70, 72, 77, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113, 118, 125, 126, 127, 128, 129, 132, 134, 135, 139, 141, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 162, 164, 165, 166, 173, 186, 187, 194, 196, 199, 203, 206, 209, 210, 211, 212, 218, 221, 225, 237, 250, 251, 263, 308, 309, 321, 322, 323, 325, 326, 344, 349, 351, 352, 360, 361, 362, 368], "lstm": [4, 204, 205, 215], "rel": [4, 69, 163, 194, 226, 349, 350, 361, 362, 365], "tend": 4, "stabl": [4, 9, 10, 106], "compens": 4, "descent": [4, 214], "minimum": [4, 107, 113, 155, 197, 215, 226, 227, 228, 252, 255, 257, 259, 266, 274, 275, 279, 317, 349, 351, 358, 361, 362], "manual": [4, 17, 19, 20, 91, 349, 352, 365], "deviat": [4, 145, 173, 185, 197, 208, 213, 214, 219, 236, 276, 281, 349, 354, 362], "radic": 4, "begin": [4, 13, 14, 15, 16, 17, 18, 19, 20, 74, 123, 199, 200, 203, 204, 353, 354, 355, 356, 357, 358], "stabil": [4, 140, 258, 260, 273, 276, 278], "stage": [4, 349, 363], "never": [4, 13, 14, 16, 356], "prevent": [4, 25, 27, 202, 227, 228, 258, 260, 273, 276, 278, 324, 365], "entir": [4, 58, 87, 91, 107, 113, 211, 351, 353, 363, 365], "submit": [4, 124, 343, 367], "system": [4, 5, 351, 361, 362, 363], "adequ": [4, 176, 351, 361, 362], "infeas": 4, "allevi": [4, 344], "prune": 4, "fire": [4, 31, 87, 91, 107, 113, 175], "illeg": 4, "move": [4, 31, 60, 87, 91, 107, 113, 131, 133, 149, 163, 166, 167, 169, 171, 173, 175, 183, 206, 248, 324, 349, 350, 352, 353, 367, 368], "chess": 4, "combin": [4, 166, 350, 357, 365], "grasp": 4, "top": [4, 78, 83, 84, 96, 97, 185, 208, 354], "wherein": 4, "cumul": [4, 157, 162, 185, 295, 351], "q": [4, 9, 87, 91, 107, 113, 189, 190, 191, 192, 195, 196, 198, 220, 221, 229, 235, 239, 246, 247, 259, 261, 262, 264, 265, 266, 267, 271, 272, 277, 279, 281, 287, 342, 349, 355], "flow": [4, 349, 351, 361, 362, 363, 365], "reparameter": [4, 194, 210, 218], "soft": [4, 271, 279, 280, 361], "critic": [4, 8, 233, 242, 258, 260, 261, 265, 266, 272, 273, 276, 277, 278, 279, 281, 349, 355], "clip": [4, 40, 130, 155, 258, 260, 273, 276, 278, 281, 326, 351, 362, 363], "oppos": [4, 45], "incorrect": 4, "thought": [4, 87, 91, 107, 113], "bound": [4, 20, 24, 25, 31, 87, 91, 107, 113, 130, 144, 173, 175, 222, 223, 232, 238, 239, 244, 245, 246, 247, 248, 249, 252, 281, 344, 349, 350, 351, 361, 368], "region": 4, "squash": [4, 352, 367], "tanh": [4, 186, 187, 199, 200, 202, 203, 204, 206, 212, 226, 227, 228, 252, 351, 354, 361, 362, 363, 364, 367], "correct": [4, 34, 36, 39, 87, 91, 107, 113, 143, 329, 351, 352], "prob": [4, 209, 210, 218, 351, 362], "rememb": [4, 361], "remap": 4, "origin": [4, 8, 34, 36, 39, 40, 95, 133, 134, 143, 149, 167, 171, 175, 199, 245, 248, 249, 271, 274, 276, 349, 360, 363, 368], "histor": 5, "ceas": 5, "farama": [5, 56, 98, 99, 108, 109, 351, 363], "bc": [5, 367], "against": [5, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 87, 91, 107, 113, 175, 176, 232, 238, 239, 245, 246, 247, 248, 249, 351, 361, 362], "best": [5, 9, 95, 201, 205, 361, 362, 365, 367], "gymwrapp": [5, 87, 91, 107, 113, 137, 158, 161, 172, 342, 351, 367], "feel": [5, 343, 358, 367], "free": [5, 7, 132, 135, 258, 269, 276, 346, 351, 358, 362, 367], "gladli": 5, "prepar": [6, 55, 351], "conda": [6, 7, 343], "cmake": 6, "activ": [6, 7, 9, 186, 187, 193, 197, 206, 211, 212, 260, 273, 276, 344, 363, 367], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 17, 20, 55, 343], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 93], "y": [6, 7, 38, 106, 198, 211, 230, 349, 362, 365], "facebookresearch": [6, 55, 93], "subdirectori": 6, "verbos": [6, 358], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 49, 87, 91, 107, 113, 151, 160, 175, 274, 355, 361, 362, 368], "command": [6, 7, 10, 351, 361, 362, 363, 368], "readm": [6, 7, 114], "md": [6, 7], "habitatenv": [6, 342], "_has_habitat": 6, "available_env": [6, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 98, 101, 102, 106, 107, 110, 111, 112, 113, 114, 115, 368], "startswith": [6, 345, 349, 355], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 88, 274, 349], "env_nam": [6, 83, 85, 87, 90, 91, 93, 96, 98, 104, 107, 110, 113, 349, 351, 368], "llvmlite": 6, "config": [6, 7, 149, 171, 188, 193, 219, 330, 331, 332, 334, 337], "var": [6, 7, 31, 87, 91, 107, 113, 167, 175, 274, 279], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 238], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 31, 87, 91, 107, 113, 167, 175, 274, 279, 365], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 87, 350, 358], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 54], "stand": [7, 85, 86, 107, 113, 360, 363], "joint": [7, 350], "dynam": [7, 55, 58, 60, 175, 265, 272, 351, 353, 363], "contact": [7, 37, 361], "engin": [7, 110, 363], "biomechan": 7, "graphic": 7, "anim": [7, 362], "area": 7, "demand": [7, 357, 368], "fast": [7, 9, 83, 84, 152, 183, 277, 349, 350, 351], "accur": [7, 54, 60, 350, 363, 365], "articul": 7, "acquir": [7, 351], "deepmind": [7, 8, 9, 58, 85, 86, 87, 91, 101, 102, 107, 113, 136, 351, 353], "whomev": 7, "licenc": 7, "incorpor": [7, 87, 91, 107, 113, 236, 240, 241, 244, 352, 354, 363], "relianc": 7, "obsolet": 7, "legaci": [7, 22], "pro": [7, 343], "tip": [7, 343], "glfw": [7, 349], "osmesa": 7, "egl": 7, "advic": [7, 58, 368], "sudo": [7, 343], "enabl": [7, 8, 54, 63, 64, 73, 80, 124, 201, 205, 243, 244, 309, 322, 351, 353, 361, 362, 363, 365], "apt": [7, 362], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 63, 64, 65, 76, 77, 80, 350, 352], "workflow": [7, 233, 234, 235], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 23, 26, 33, 125, 196, 221, 238, 239, 246, 247, 262, 265, 266, 287], "mkdir": 7, "earlier": [7, 349, 351, 352, 361, 362, 365], "roboti": 7, "html": [7, 104, 106], "wget": 7, "mujoco210": 7, "tar": [7, 55], "gz": 7, "xf": 7, "charg": [7, 13, 14, 16, 107, 113], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 61], "bin": [7, 196, 239, 344], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 192, 245, 249, 349, 351, 365], "nvidia": [7, 95], "older": [7, 11], "hack": [7, 349], "adatp": 7, "script": [7, 55, 176, 336, 340, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "unnot": [7, 150], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 350, 365], "troubleshoot": 7, "gl": 7, "h": [7, 69, 127, 129, 153, 165, 199, 200, 201, 203, 204, 205, 208, 309, 350, 352, 365], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 15, 16, 17, 18, 19, 20], "directori": [7, 34, 36, 39, 45, 52, 54, 55, 56, 58, 59, 60, 63, 314, 316, 346, 349, 354, 357, 361], "devel": 7, "ubuntu": [7, 95], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 350, 352, 360], "libstdc": 7, "glibcxx_3": 7, "29": [7, 350, 363], "compil": [7, 31, 67, 74, 75, 87, 91, 107, 113, 175, 199, 200, 203, 204], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 15, 16, 17, 18, 19, 20, 172, 351, 360], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 25, 27, 31, 87, 91, 107, 113, 144, 167, 175, 279, 360, 365, 368], "job": [7, 17, 18, 19, 21, 38, 365], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 83, 84, 350, 362, 363], "114": [7, 363], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 363], "offscreenopenglcontext": 7, "opengl": [7, 361, 362], "global": [7, 31, 87, 91, 107, 108, 109, 113, 175, 220, 229, 245, 249, 287, 346, 349, 361, 362], "cuda_visible_devic": 7, "id": [7, 22, 40, 67, 69, 74, 75, 87, 90, 91, 107, 113, 244, 277, 312, 316, 356, 365], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 361], "onscreen": 7, "101": [7, 363], "correctli": [7, 31, 87, 91, 107, 113, 175], "lgl": 7, "libegl": 7, "x11": [7, 362], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 346], "n_training_step": 8, "datapoint": [8, 45, 365], "n_data_per_train": 8, "no_grad": [8, 31, 87, 91, 107, 113, 143, 175, 199, 200, 203, 204, 289, 290, 291, 292, 351, 352, 362], "loss_fn": [8, 352, 355, 356, 367], "zero_grad": [8, 31, 87, 91, 107, 113, 175, 346, 349, 351, 352, 355, 358, 361, 362, 363], "backpropag": [8, 83, 84, 96, 97, 107, 258, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 287, 355, 362, 363], "differenti": [8, 45, 83, 84, 143, 289, 290, 291, 292, 352, 354, 355, 361, 362, 363], "denomin": 8, "artifact": 8, "numer": [8, 38, 91, 173, 202, 227, 228, 232, 238, 239, 245, 246, 247, 248, 249, 324, 351, 365, 368], "misconcept": 8, "freed": 8, "appear": [8, 33, 52, 58, 67, 74, 75, 363, 365], "compuat": 8, "fix": [8, 107, 163, 259, 275, 279, 350, 358, 363, 368], "retain_graph": [8, 83, 84], "discuss": [8, 9, 356, 361, 362], "inplac": [8, 31, 34, 36, 39, 87, 91, 107, 113, 175, 349], "onto": [8, 33, 34, 36, 39, 180, 232, 236, 238, 239, 244, 245, 246, 247, 248, 249, 352, 363], "forward": [8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 107, 113, 121, 123, 124, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 148, 149, 150, 151, 152, 154, 157, 158, 161, 162, 163, 164, 166, 169, 170, 172, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 211, 212, 213, 215, 216, 217, 219, 220, 222, 223, 225, 229, 230, 236, 237, 239, 240, 243, 244, 245, 247, 248, 249, 252, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 289, 290, 291, 292, 293, 345, 363, 365, 367, 368], "submodul": [8, 31, 87, 91, 107, 113, 117, 175, 274], "param": [8, 31, 40, 87, 91, 103, 107, 113, 124, 131, 132, 133, 137, 143, 151, 152, 158, 161, 166, 175, 194, 196, 226, 237, 245, 248, 251, 274, 283, 286, 289, 290, 291, 292, 293, 349, 358, 361, 362, 363, 364, 367], "grad": [8, 31, 83, 84, 87, 91, 107, 113, 175, 349, 351], "whose": [8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 87, 91, 107, 108, 109, 113, 131, 149, 163, 166, 167, 169, 171, 175, 215, 220, 248], "neg": [8, 13, 14, 15, 16, 17, 18, 19, 20, 35, 41, 66, 67, 127, 139, 150, 168, 268, 289, 291, 292, 345, 351, 361, 362, 363], "much": [8, 13, 14, 16, 35, 41, 58, 66, 67, 107, 113, 273, 276, 351, 353, 357, 361, 362, 363, 365, 368], "factor": [8, 31, 154, 175, 202, 214, 227, 228, 236, 240, 241, 244, 259, 264, 267, 268, 270, 280, 295, 349, 350, 354, 358, 361, 362, 365, 368], "fit": [8, 11, 145, 163, 345, 346, 349], "bottlneck": 8, "brax": [8, 83, 84, 87, 91, 107, 113, 152, 353, 368], "jax": [8, 11, 83, 84, 96, 97], "improperli": 8, "underli": [8, 87, 91, 107, 113, 274, 353, 355, 357, 363], "tedeiou": 8, "priorit": [8, 35, 41, 66, 67, 261, 262, 264, 265, 266, 272, 277, 279, 281, 349, 350, 356], "amount": [8, 244, 350, 365], "costli": [8, 363], "constitut": [8, 350, 362, 363], "plain": [8, 353], "profil": 8, "frequent": [8, 365], "program": [8, 265, 272, 368], "functorch": [8, 10], "incl": 8, "suit": [8, 86, 351, 353, 368], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 39, 44, 46, 47, 74, 75, 124, 248, 251, 274, 361, 362, 363, 365, 367], "new_shap": 8, "permut": [8, 73, 147, 367, 368], "idea": [9, 277, 346, 352, 354, 361, 362], "introductori": 9, "intro": [9, 351, 352], "dai": [9, 367], "2022": [9, 10, 363, 367], "spin": [9, 85, 86], "deep": [9, 127, 189, 190, 191, 192, 195, 244, 258, 271, 279, 280, 349, 361], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 354], "summari": [9, 145, 173, 349, 350, 351, 352], "reddit": 9, "reagent": 9, "orient": [9, 60, 368], "baselines3": 9, "tf": 9, "bandit": [9, 106], "tensorflow": [9, 209, 210], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 358], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 367], "grade": 9, "factori": [9, 43, 349], "cherri": 9, "jaxrl": 9, "mbrl": [9, 103, 344], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 361, 363], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 351, 352, 361, 362], "notebook": [10, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368], "24": [10, 59, 75, 90, 104, 105, 243, 350, 361, 363], "pip3": [10, 349, 351, 352, 361, 362], "url": [10, 93], "org": [10, 35, 55, 56, 58, 60, 66, 67, 83, 84, 85, 86, 93, 96, 97, 101, 102, 104, 105, 106, 110, 114, 115, 127, 149, 169, 188, 189, 190, 191, 192, 193, 196, 197, 198, 203, 208, 209, 210, 214, 216, 217, 220, 222, 223, 229, 239, 244, 258, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 275, 276, 278, 279, 280, 289, 294, 302, 341, 359, 364], "whl": 10, "u": [10, 57, 199, 200, 203, 204, 363], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 274], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 69, 78, 83, 85, 86, 87, 89, 90, 91, 92, 93, 96, 101, 102, 104, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 121, 123, 127, 134, 136, 142, 143, 145, 149, 150, 153, 158, 161, 162, 167, 169, 171, 172, 173, 175, 177, 181, 183, 184, 185, 195, 196, 201, 205, 207, 208, 211, 212, 213, 214, 215, 220, 221, 229, 232, 238, 239, 243, 245, 246, 247, 248, 249, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 287, 288, 289, 290, 291, 292, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 334, 340, 350, 351], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 201, 205, 367], "longer": [11, 350, 358, 361, 362, 365], "x": [11, 22, 25, 31, 38, 40, 58, 75, 143, 165, 187, 196, 198, 199, 200, 201, 203, 204, 205, 206, 208, 211, 212, 230, 238, 245, 246, 255, 257, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 326, 349, 361, 363, 365, 367], "23": [11, 59, 75, 348, 350, 355, 361, 363, 366], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 59, 83, 84, 91, 96, 97, 204, 257, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 349, 350, 351, 352, 358, 361, 362, 363, 365, 368], "otherwis": [11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 69, 74, 75, 83, 84, 87, 90, 91, 92, 93, 96, 97, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 127, 128, 134, 145, 162, 163, 164, 167, 173, 175, 199, 202, 203, 211, 212, 227, 228, 238, 246, 252, 259, 269, 274, 275, 279, 289, 291, 292, 322, 323, 346, 349, 350, 351, 352, 363, 368], "classmethod": [11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 39, 44, 46, 47, 87, 91, 107, 113, 169, 188, 219], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 34, 36, 38, 39, 59, 67, 74, 75, 87, 88, 89, 91, 101, 102, 104, 107, 108, 109, 113, 114, 115, 116, 143, 163, 167, 172, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 198, 206, 219, 245, 249, 279, 313, 314, 322, 331, 332, 338, 339, 340, 349, 350, 351, 365, 368], "setter": 11, "setter_dict": 11, "kwd": 12, "policy_weight": [12, 13, 14, 15, 16, 18, 19], "udpdat": [12, 13, 14, 15, 16, 18, 19], "create_env_fn": [13, 14, 15, 16, 17, 18, 19, 20, 88, 107, 113, 349, 367], "device_typ": [13, 15, 16, 26, 29, 32, 33, 186, 187, 188, 189, 190, 191, 192, 198, 206, 211, 212, 213, 214, 219], "env_devic": [13, 14, 15, 16, 17, 18, 19, 20, 350], "policy_devic": [13, 14, 15, 16, 17, 18, 19, 20, 350], "create_env_kwarg": [13, 14, 15, 16, 20, 88, 104, 107, 113, 349, 368], "postproc": [13, 14, 15, 16, 17, 18, 19, 20, 31, 154, 350, 365], "explorationtyp": [13, 14, 15, 16, 17, 18, 19, 20, 274, 322, 349, 350, 351, 352, 354, 361, 367], "interactiontyp": [13, 15, 16, 17, 18, 19, 20, 178, 182, 245, 249, 322], "exploration_mod": [13, 15, 16, 17, 18, 19, 342, 344], "preemptive_threshold": [13, 14, 16], "float": [13, 14, 16, 24, 26, 31, 33, 35, 40, 41, 46, 58, 66, 67, 69, 87, 91, 107, 113, 123, 127, 131, 132, 135, 143, 145, 149, 154, 155, 156, 162, 163, 165, 166, 167, 169, 171, 173, 175, 194, 197, 199, 202, 203, 206, 209, 210, 213, 214, 222, 223, 226, 228, 236, 248, 252, 255, 256, 257, 258, 259, 260, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 288, 294, 295, 296, 297, 298, 299, 300, 301, 302, 324, 349, 350, 365, 368], "num_thread": [13, 14, 16, 34, 36, 39, 107, 113], "num_sub_thread": [13, 14, 16, 107, 113], "set_trunc": [13, 14, 15, 16, 87, 91, 107, 113], "datacollector": [13, 14, 15, 16, 31, 249, 276, 351, 356, 365], "recept": 13, "safe": [13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 67, 74, 232, 236, 238, 239, 244, 245, 246, 247, 248, 249, 251, 344, 367], "sota": [13, 14, 103, 140, 278, 317, 331, 349, 350, 351, 354, 355, 356, 361, 362, 367], "env_mak": [13, 14, 15, 20, 336, 368], "50": [13, 14, 15, 20, 37, 40, 52, 60, 74, 75, 101, 102, 175, 348, 350, 351, 352, 361, 362, 363, 364, 365, 366], "2000": [13, 14, 15, 31, 45, 94, 309, 351, 365], "int64": [13, 14, 15, 22, 26, 29, 34, 36, 37, 39, 40, 41, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 87, 91, 100, 101, 102, 106, 107, 108, 109, 111, 112, 113, 124, 136, 147, 154, 161, 196, 221, 238, 239, 244, 245, 246, 247, 344, 351, 353, 354, 356, 357, 363, 365, 367], "shutdown": [13, 14, 15, 16, 20, 124, 349, 367], "del": [13, 14, 15, 349, 351, 360, 361, 367, 368], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 126, 230, 238, 243, 246, 352], "undergon": [13, 14, 15, 16, 17, 18, 19, 20, 45], "env_obs_kei": [13, 14, 15, 16, 17, 18, 19, 20], "lifespan": [13, 14, 15, 16, 17, 18, 19, 350], "divis": [13, 14, 15, 16, 17, 18, 19, 52, 58, 67, 74, 75, 362], "endless": [13, 14, 15, 16, 17, 18, 19], "fill": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 52, 91, 123, 163, 172, 205, 352, 363, 364], "sit": [13, 14, 15, 16, 17, 18, 19, 20, 328, 350], "cast": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 61, 83, 84, 85, 86, 87, 90, 91, 92, 96, 97, 104, 105, 107, 110, 113, 131, 132, 135, 143, 149, 163, 166, 167, 169, 171, 173, 175, 248, 353, 355, 356, 357, 361, 368], "span": [13, 14, 15, 16, 17, 18, 19, 20, 58, 74], "n_step": [13, 14, 15, 16, 17, 18, 19, 20, 31, 175, 243, 350, 351, 361, 362], "mainli": [13, 14, 15, 16, 17, 18, 19, 20, 40, 316, 344, 361, 362, 363], "round": [13, 14, 15, 16, 17, 18, 19, 20, 52], "closest": [13, 14, 15, 16, 17, 18, 19, 20], "post": [13, 14, 15, 16, 17, 18, 19, 20, 31, 56, 87, 91, 107, 113, 175], "boolm": [13, 14, 16], "update_policy_weight_": [13, 14, 16], "async": [13, 14, 16, 17, 18, 19, 20, 172, 367], "ratio": [13, 14, 16, 40, 349, 351], "finish": [13, 14, 16, 20, 91, 154, 368], "rest": [13, 14, 16, 344, 351, 352, 361, 363, 367], "earli": [13, 14, 16, 31, 91, 161, 367], "plu": [13, 14, 16, 40, 107, 113, 363], "safeti": [13, 14, 16, 103, 107, 113], "harm": [13, 14, 16, 107, 113], "exclus": [13, 14, 48, 49, 52, 58, 67, 74, 75, 124, 137, 139, 199, 201, 203, 205, 209, 210, 238, 239, 246, 247, 280, 281, 289, 290, 291, 292, 293, 316, 340, 344, 360], "add_truncated_kei": [13, 14, 15, 16, 87, 91, 107, 113, 167], "ordereddict": [13, 14, 15, 16, 20, 31, 87, 91, 107, 113, 167, 173, 175, 279, 350], "form": [13, 14, 16, 31, 35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 173, 175, 199, 201, 203, 205, 257, 258, 260, 273, 276, 326, 344, 354, 362], "worker0": [13, 14, 16], "state_dict0": [13, 14, 16], "worker1": [13, 14, 16], "state_dict1": [13, 14, 16], "reset_idx": [13, 14, 16], "static_se": [13, 14, 15, 16, 20, 87, 91, 107, 113, 167], "integ": [13, 14, 15, 16, 22, 29, 30, 31, 33, 40, 47, 67, 74, 75, 76, 87, 91, 107, 113, 123, 136, 140, 145, 161, 186, 187, 206, 211, 212, 265, 272, 279, 365], "increment": [13, 14, 15, 16, 87, 91, 107, 113, 273], "env_fn": [13, 14, 15, 16, 88, 338, 339], "env_fn_parallel": [13, 14, 15, 16], "300": [13, 14, 15, 16, 74, 75, 191, 192, 363], "out_se": [13, 14, 15, 16, 368], "shut": [13, 14, 15, 16], "irrevers": [13, 14, 16], "kwarg": [14, 15, 16, 20, 24, 25, 31, 32, 46, 52, 54, 55, 66, 67, 69, 74, 75, 78, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 122, 124, 131, 149, 151, 160, 163, 166, 167, 168, 170, 171, 174, 175, 185, 186, 187, 189, 190, 191, 192, 195, 198, 201, 202, 205, 206, 207, 208, 211, 212, 218, 226, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 287, 288, 289, 290, 291, 292, 293, 307, 309, 313, 314, 316, 319, 326, 331, 332, 337, 338, 339, 345, 349, 351, 360, 361, 362, 365], "return_same_td": 15, "interruptor": 15, "cautious": [15, 276], "whole": [15, 25, 27, 31, 45, 87, 91, 107, 113, 167, 175, 245, 279, 317, 349, 351], "_interruptor": 15, "start_collect": 15, "stop_collect": 15, "preeptiv": 15, "chunk": [15, 354], "policy_state_dict": 15, "env_state_dict": 15, "mere": 16, "exporationtyp": [17, 18, 19], "collector_class": [17, 18, 19, 20], "collector_kwarg": [17, 18, 19, 20], "num_workers_per_collector": [17, 18, 19, 20], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 18, 19, 20], "max_weight_update_interv": [17, 18, 19, 20], "tcp_port": [17, 18, 19, 21], "deriv": [17, 18, 19, 20, 326], "respect": [17, 18, 19, 31, 87, 91, 107, 113, 125, 131, 132, 135, 149, 150, 159, 163, 166, 167, 169, 171, 175, 199, 203, 211, 223, 248, 253, 258, 260, 273, 276, 278, 289, 291, 292, 321, 351, 352, 361, 362], "subnod": [17, 18, 19, 20], "readi": [17, 19, 20, 343, 350, 351, 354, 357, 360, 365], "fashion": [17, 19, 20, 34, 36, 39, 75], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 18, 19, 20, 52, 55, 56, 58, 59, 60, 87, 91, 107, 113, 139], "seen": [17, 18, 19, 20, 87, 91, 107, 113, 345, 349, 350, 352, 355, 361, 362, 365], "submitit_delai": [17, 21], "former": [17, 18, 19, 35, 38, 41, 42, 54, 87, 91, 107, 113, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 349], "whilst": [17, 18, 19], "homonym": [17, 18, 19, 363], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 21], "port": [17, 18, 19, 21], "10003": [17, 18, 19, 21], "worker_rank": [17, 18, 20], "update_interv": 18, "frequenc": [18, 349], "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 33, 52, 245, 249], "tensorpiperpcbackendopt": 19, "ray_init_config": 20, "remote_config": 20, "num_collector": [20, 338, 339, 349, 350], "coordin": 20, "init": [20, 31, 87, 91, 107, 113, 175, 316, 350, 351], "autodetect": 20, "similarli": [20, 31, 73, 77, 87, 91, 107, 113, 175, 211, 250, 251, 265, 272, 368], "num_cpu": 20, "num_gpu": 20, "1024": [20, 193, 350, 365], "equat": [20, 58, 91, 244, 257, 260, 280, 351, 353, 363], "exce": [20, 365], "indefinit": [20, 51], "raydistributedcollector": 20, "distributed_collector": 20, "10000": [20, 326, 351, 352], "add_collector": 20, "local_polici": 20, "remote_collector": 20, "stop_remote_collector": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": [21, 355], "jump": [21, 353], "host": [21, 31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "satellit": 21, "rendezv": 21, "hang": 21, "forev": 21, "default_config": [21, 188, 193, 219, 237], "default_slurm_conf_main": 21, "default_slurm_conf": 21, "boundedtensorspec": [21, 25, 87, 91, 107, 113, 240, 241, 244, 245, 252, 258, 259, 261, 272, 276, 277, 279, 281, 342, 351, 361, 362, 363, 367, 368], "rollout_tensordict": 22, "nestedkei": [22, 45, 67, 74, 75, 87, 91, 107, 113, 118, 121, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 141, 142, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 169, 173, 175, 183, 184, 236, 237, 240, 241, 243, 244, 249, 262, 287, 307, 309], "durat": [22, 362], "meta": [22, 44, 54, 89, 93, 258, 260, 273, 276, 278, 346, 351, 361, 362, 365], "aren": [22, 162, 352], "deprec": [22, 31, 87, 91, 107, 113, 167, 175, 177, 181, 241, 258, 260, 262, 265, 266, 267, 272, 273, 276, 277, 278, 279, 287, 289, 290, 291, 292, 297, 352, 354, 358, 368], "eventu": [22, 220, 352, 363], "supersed": 22, "recov": [22, 54, 56, 58, 59, 60, 74, 75, 236, 241, 244, 250, 265, 272, 360], "cat": [22, 253, 259, 261, 272, 277, 279, 281, 361, 365, 367], "arang": [22, 26, 33, 67, 196, 210, 238, 317, 344, 365], "obs_": 22, "trajectory_id": 22, "int32": [22, 42, 52, 58, 74, 96, 97, 180, 243], "data_split": 22, "got": [22, 356], "int8": [23, 87, 100, 108, 109, 125], "assert_is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "clear_device_": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "op": [23, 24, 26, 29, 30, 32, 33, 44, 46, 47, 144, 172, 236, 240, 309, 328], "encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 41, 42, 44, 46, 47, 83, 84, 87, 90, 92, 93, 96, 97, 104, 105, 110, 134, 217, 218, 222, 257, 344, 350, 351, 352, 354, 363, 365], "ndarrai": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 91, 244, 252, 307, 361], "ignore_devic": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "np": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 91, 252, 307, 361, 363], "complient": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "singleton": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 186, 187, 206, 224, 225], "start_dim": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "end_dim": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "implements_for_spec": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "torch_funct": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "tensor_to_index": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 368], "project": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 134, 203, 232, 236, 238, 239, 244, 245, 246, 247, 248, 249, 316, 344, 367, 368], "rand": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 83, 84, 96, 97, 103, 121, 124, 132, 135, 151, 185, 208, 245, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 279, 281, 363, 367, 368], "unbound": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 163, 180, 363, 365], "to_numpi": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 87, 91, 107, 113], "transformed_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 166, 167, 215, 226, 340], "check_spec_encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "to_one_hot": [23, 26, 29], "hot": [23, 26, 29, 30, 33, 83, 84, 90, 92, 93, 96, 97, 101, 102, 104, 105, 108, 109, 110, 114, 115, 121, 134, 196, 218, 221, 238, 239, 246, 247, 258, 259, 261, 262, 264, 265, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 352], "to_one_hot_spec": [23, 26, 29], "onehotdiscretetensorspec": [23, 26, 196, 221, 238, 246, 262, 264, 265, 266, 287, 342, 344, 354], "convert": [23, 26, 29, 30, 31, 33, 34, 36, 39, 45, 83, 84, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113, 131, 132, 135, 149, 163, 166, 167, 169, 171, 173, 175, 248, 257, 274, 349, 350, 351, 363, 365], "type_check": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "unflatten": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 124, 243], "upper": [24, 72, 144], "unnam": 25, "constraint": [25, 103, 351, 362], "pixels_spec": 25, "observation_vector_spec": 25, "composite_spec": 25, "observation_vector": [25, 128, 349], "td_project": 25, "absent": [25, 27, 54, 87, 91, 107, 113, 167], "is_empti": [25, 27, 363], "include_nest": [25, 27], "leaves_onli": [25, 27], "itemsview": 25, "children": [25, 27, 31, 87, 91, 107, 113, 175], "keysview": [25, 27], "reflect": [25, 27, 92, 108, 109, 172, 183, 274, 329, 350, 351, 352, 362], "lock_": [25, 27], "recurs": [25, 27, 31, 48, 49, 87, 91, 107, 113, 175, 274], "succeed": [25, 27], "selected_kei": [25, 27, 158, 349], "unlock_": [25, 27], "unlock": [25, 27, 34, 36, 39], "valuesview": 25, "onehottensorspec": [26, 83, 84, 90, 92, 93, 96, 97, 104, 105, 110], "action_valu": [26, 33, 195, 196, 221, 238, 239, 246, 247, 266, 274, 287, 344, 352, 354, 358], "argmax": [26, 87, 91, 107, 113, 196, 221, 239, 247, 354], "chosen_action_valu": [26, 33, 220, 221, 229, 246, 247, 287, 344, 352, 354], "outcom": [26, 33, 194, 226, 361], "drawn": [27, 28, 163, 240, 245, 249, 351, 361, 362], "lazystackedtensordict": [27, 52, 87, 91, 103, 107, 113, 360], "heterogen": [27, 28, 100, 108, 109, 176, 211, 212, 349, 350], "thrown": [28, 31, 87, 91, 107, 113, 175, 365], "nvec": [29, 30], "cardin": [29, 30, 196, 221, 238, 239, 247, 351], "ax": [29, 213, 214, 361], "m": [29, 31, 87, 91, 107, 113, 134, 175, 249, 344, 350, 363], "ts": [29, 30], "multionehotdiscretetensorspec": [29, 262, 265, 266, 287, 342], "use_regist": [30, 33], "to_categor": [30, 33], "to_categorical_spec": [30, 33], "multidiscretetensorspec": [30, 342], "gamma": [31, 154, 175, 208, 258, 259, 261, 262, 264, 266, 267, 268, 270, 272, 274, 276, 277, 278, 279, 281, 282, 283, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 336, 345, 349, 350, 351, 361, 362, 367], "sutton": [31, 345, 361, 362], "1988": 31, "tempor": [31, 201, 205, 208, 290, 291, 296, 297], "44": [31, 350, 361, 363, 364], "discount": [31, 58, 88, 154, 175, 259, 264, 267, 268, 270, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 345, 350, 351, 361, 362], "ahead": [31, 175, 368], "bias": [31, 199, 200, 203, 204, 255, 345, 349], "mitig": 31, "pleas": [31, 56, 87, 91, 107, 108, 109, 113, 124, 127, 164, 167, 175, 279, 343, 353, 355, 356, 357], "multisteptransform": [31, 342], "99": [31, 154, 173, 208, 270, 283, 288, 295, 336, 349, 350, 351, 355, 358, 361, 362, 363, 364, 367], "add_modul": [31, 87, 91, 107, 113, 175], "child": [31, 87, 91, 107, 113, 175, 349], "fn": [31, 37, 52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 175, 215, 338, 339], "init_weight": [31, 87, 91, 107, 113, 175], "fill_": [31, 87, 91, 107, 113, 175, 350, 352, 368], "net": [31, 87, 91, 107, 113, 175, 190, 192, 195, 198, 212, 258, 259, 266, 272, 276, 277, 278, 279, 336, 350, 363, 364, 367], "in_featur": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 186, 187, 189, 190, 191, 192, 198, 206, 211, 212, 213, 214, 233, 248, 262, 264, 354, 355, 367], "out_featur": [31, 87, 91, 103, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 185, 186, 187, 189, 190, 191, 192, 197, 198, 201, 205, 206, 208, 211, 212, 213, 214, 233, 238, 248, 262, 264, 344, 349, 352, 354, 355, 358, 367], "bia": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 186, 187, 189, 190, 191, 192, 197, 198, 199, 200, 201, 203, 204, 205, 206, 212, 213, 214, 215, 240, 241, 244, 248, 255, 256, 257, 274, 279, 345, 349, 350, 351, 352, 362, 367], "requires_grad": [31, 83, 84, 87, 91, 107, 113, 143, 167, 175, 279], "bfloat16": [31, 87, 91, 107, 113, 175], "datatyp": [31, 87, 91, 107, 113, 175, 365], "member": [31, 87, 91, 107, 113, 175, 274, 309], "xdoctest": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248, 274, 279], "buf": [31, 87, 91, 107, 113, 175], "20l": [31, 87, 91, 107, 113, 175, 274], "1l": [31, 87, 91, 107, 113, 175, 274], "5l": [31, 87, 91, 107, 113, 175, 274], "__call__": [31, 37, 87, 91, 107, 113, 175, 249, 346, 368], "doubl": [31, 46, 87, 91, 107, 113, 131, 132, 133, 135, 149, 163, 166, 167, 169, 171, 175, 248, 262, 267, 271, 277, 280, 287, 349, 350, 351, 352, 368], "eval": [31, 87, 91, 107, 113, 167, 173, 175, 349, 350, 351], "evalu": [31, 87, 91, 101, 102, 107, 113, 167, 175, 194, 209, 210, 218, 228, 277, 331, 332, 350, 351, 358], "dropout": [31, 87, 91, 107, 113, 167, 175, 199, 201, 203, 205, 206, 352], "batchnorm": [31, 87, 91, 107, 113, 167, 175], "disabl": [31, 87, 91, 107, 113, 167, 175, 202, 228, 307, 349], "comparison": [31, 87, 91, 107, 113, 167, 175, 274, 349, 350], "similar": [31, 34, 36, 38, 39, 58, 87, 91, 107, 108, 109, 113, 131, 149, 163, 166, 167, 169, 170, 171, 173, 175, 233, 235, 245, 248, 249, 345, 349, 350, 351, 352, 354, 355, 356, 357, 363, 365, 368], "extra_repr": [31, 87, 91, 107, 113, 175], "nontermin": 31, "original_reward": 31, "newli": [31, 87, 91, 107, 113], "OR": 31, "get_buff": [31, 87, 91, 107, 113, 175], "get_submodul": [31, 87, 91, 107, 113, 175], "qualifi": [31, 87, 91, 107, 113, 175], "referenc": [31, 87, 91, 107, 113, 175], "attributeerror": [31, 87, 91, 107, 113, 175, 368], "resolv": [31, 87, 91, 107, 113, 175], "someth": [31, 87, 91, 100, 107, 113, 175, 343, 350, 351, 363, 368], "get_extra_st": [31, 87, 91, 107, 113, 173, 175], "set_extra_st": [31, 87, 91, 107, 113, 173, 175], "picklabl": [31, 87, 91, 107, 113, 173, 175], "pickl": [31, 87, 91, 107, 113, 173, 175], "get_paramet": [31, 87, 91, 107, 113, 175], "net_b": [31, 87, 91, 107, 113, 175], "net_c": [31, 87, 91, 107, 113, 175], "conv": [31, 87, 91, 107, 113, 175, 186, 187, 350], "conv2d": [31, 87, 91, 107, 113, 175, 187, 189, 190, 198, 211, 367], "kernel_s": [31, 87, 91, 107, 113, 175, 186, 187, 189, 190, 198, 211, 216, 350, 367], "stride": [31, 87, 91, 107, 113, 175, 186, 187, 189, 190, 198, 211, 350, 361, 367], "diagram": [31, 87, 91, 107, 113, 175], "degre": [31, 87, 91, 107, 113, 175], "named_modul": [31, 87, 91, 107, 113, 175], "o": [31, 87, 91, 107, 113, 175, 204], "half": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248, 349], "ipu": [31, 87, 91, 107, 113, 175], "strict": [31, 34, 36, 39, 87, 91, 107, 113, 167, 175, 279], "descend": [31, 87, 91, 107, 113, 167, 175, 279], "get_swap_module_params_on_convers": [31, 87, 91, 107, 113, 167, 175, 279], "persist": [31, 87, 91, 107, 113, 167, 175, 183, 279], "enforc": [31, 73, 87, 91, 107, 113, 167, 175, 250, 279, 363], "preserv": [31, 87, 91, 107, 113, 167, 175, 279], "missing_kei": [31, 87, 91, 107, 113, 167, 175, 279], "unexpected_kei": [31, 87, 91, 107, 113, 167, 175, 279], "namedtupl": [31, 87, 91, 107, 113, 167, 175, 279], "duplic": [31, 73, 87, 91, 107, 113, 175, 262, 267, 274, 287], "l": [31, 87, 91, 107, 113, 175, 199, 203, 288, 351, 363], "idx": [31, 87, 91, 107, 113, 175], "named_buff": [31, 87, 91, 107, 113, 175], "remove_dupl": [31, 87, 91, 107, 113, 175, 274], "prepend": [31, 87, 91, 107, 113, 175, 274], "running_var": [31, 87, 91, 107, 113, 175], "named_children": [31, 87, 91, 107, 113, 175], "conv4": [31, 87, 91, 107, 113, 175], "conv5": [31, 87, 91, 107, 113, 175], "memo": [31, 87, 91, 107, 113, 175], "named_paramet": [31, 87, 91, 107, 113, 143, 175, 274], "register_backward_hook": [31, 87, 91, 107, 113, 175], "removablehandl": [31, 87, 91, 107, 113, 175], "favor": [31, 87, 91, 107, 113, 175, 351], "register_full_backward_hook": [31, 87, 91, 107, 113, 175], "register_buff": [31, 87, 91, 107, 113, 175], "running_mean": [31, 87, 91, 107, 113, 175], "alongsid": [31, 87, 91, 107, 113, 175, 357], "num_featur": [31, 87, 91, 107, 113, 175], "register_forward_hook": [31, 87, 91, 107, 113, 175, 196, 221], "with_kwarg": [31, 87, 91, 107, 113, 175], "always_cal": [31, 87, 91, 107, 113, 175], "register_module_forward_hook": [31, 87, 91, 107, 113, 175], "regardless": [31, 87, 91, 107, 113, 175, 260, 273, 276], "register_forward_pre_hook": [31, 87, 91, 107, 113, 175], "invok": [31, 87, 91, 107, 113, 175], "And": [31, 87, 91, 107, 113, 175, 355], "forward_pr": [31, 87, 91, 107, 113, 175], "register_module_forward_pre_hook": [31, 87, 91, 107, 113, 175], "grad_input": [31, 87, 91, 107, 113, 175], "grad_output": [31, 87, 91, 107, 113, 175], "subsequ": [31, 52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 123, 175, 352, 361], "technic": [31, 87, 91, 107, 113, 175, 350, 352, 354], "caller": [31, 87, 91, 107, 113, 175], "register_module_full_backward_hook": [31, 87, 91, 107, 113, 175], "register_full_backward_pre_hook": [31, 87, 91, 107, 113, 175], "backward_pr": [31, 87, 91, 107, 113, 175], "register_module_full_backward_pre_hook": [31, 87, 91, 107, 113, 175], "register_load_state_dict_post_hook": [31, 87, 91, 107, 113, 175], "incompatible_kei": [31, 87, 91, 107, 113, 175], "register_modul": [31, 87, 91, 107, 113, 175, 346], "alia": [31, 87, 91, 107, 113, 175], "register_paramet": [31, 87, 91, 107, 113, 175], "register_state_dict_pre_hook": [31, 87, 91, 107, 113, 175], "keep_var": [31, 34, 36, 39, 87, 91, 107, 113, 167, 175, 279], "requires_grad_": [31, 87, 91, 107, 113, 175], "autograd": [31, 87, 91, 107, 113, 167, 175, 279], "freez": [31, 87, 91, 107, 113, 175], "finetun": [31, 87, 91, 107, 113, 175], "gan": [31, 87, 91, 107, 113, 175], "share_memori": [31, 87, 88, 91, 107, 113, 175, 349], "share_memory_": [31, 87, 91, 107, 113, 175, 367], "destin": [31, 34, 36, 39, 87, 91, 107, 113, 126, 132, 133, 135, 167, 169, 173, 175, 183, 279, 309], "averag": [31, 87, 91, 107, 113, 167, 173, 175, 244, 268, 269, 279, 324, 349, 351], "shallow": [31, 87, 91, 107, 113, 167, 175, 279, 352], "detach": [31, 87, 91, 107, 113, 167, 175, 274, 279, 289, 290, 291, 292, 349], "non_block": [31, 34, 36, 39, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248, 352], "memory_format": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "channels_last": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "unchang": [31, 87, 91, 107, 113, 131, 134, 149, 163, 166, 167, 169, 171, 175, 240, 248, 323, 349, 365], "tri": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248, 357], "pin": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "4d": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "ignore_w": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "1913": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "3420": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "5113": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "2325": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "torch_doctest_cuda1": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "gpu1": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "1914": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "5112": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248, 363], "2324": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "float16": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 200, 204, 248], "cdoubl": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "3741": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "j": [31, 35, 66, 67, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248, 346, 355], "2382": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "5593": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248, 363], "4443": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "complex128": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "6122": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "1150": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 248], "to_empti": [31, 87, 91, 107, 113, 175], "dst_type": [31, 87, 91, 107, 113, 175], "xpu": [31, 87, 91, 107, 113, 175], "set_to_non": [31, 87, 91, 107, 113, 175], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "uniqu": [33, 74, 75, 101, 102, 127, 136, 162, 163, 164, 243, 316, 356, 365], "discretebox": [33, 87, 91, 107, 113, 354, 361, 362, 368], "chosen_data": [34, 61], "rewarddata": [34, 61, 342], "rejected_data": [34, 61], "from_dataset": [34, 36, 61], "dataset_nam": [34, 36, 40, 45, 61, 106], "max_length": [34, 36, 37, 43, 45, 61, 358], "550": [34, 36, 40, 45, 61, 74, 75, 363], "root_dir": [34, 36, 45, 61], "from_disk": [34, 36, 45, 61], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "load_from_disk": [34, 36, 45, 61], "load_dataset": [34, 36, 45, 61], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 61], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 61], "end_scor": [34, 39, 40, 61], "sub_data": [34, 36], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_nodefault": [34, 36, 39], "getattr": [34, 36, 39, 361], "tensorclass": [34, 36, 39, 61, 63, 64, 80], "load_memmap": [34, 36, 39], "fetch": [34, 36, 39, 83, 84, 85, 86, 143, 354, 364, 365], "fromkei": [34, 36, 39], "memmap": [34, 36, 39, 63, 107, 113, 173, 309, 311, 323, 365], "saved_td": [34, 36, 39], "td_load": [34, 36, 39], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "copy_exist": [34, 36, 39], "return_earli": [34, 36, 39], "share_non_tensor": [34, 36, 39], "mimic": [34, 36, 39, 87, 91, 107, 113], "cross": [34, 36, 39, 185], "anymor": [34, 36, 39, 167, 248], "tensordictfutur": [34, 36, 39], "deepli": [34, 36, 39], "insid": [34, 36, 39, 107, 368], "memmap_": [34, 36, 39, 173], "memmap_lik": [34, 36, 39], "contentless": [34, 36, 39], "1_000_000": [34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 74, 349, 352, 361], "alloc": [34, 36, 39, 64, 209, 210, 349], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 352], "unbind": [34, 35, 36, 38, 39, 41, 42, 201, 205], "alpha": [35, 41, 66, 67, 186, 187, 189, 190, 191, 192, 198, 211, 259, 266, 275, 277, 279, 349, 365, 367], "ep": [35, 41, 66, 67, 173, 244, 260, 280, 324, 349, 350, 352, 355, 358], "1e": [35, 41, 66, 67, 173, 194, 197, 215, 226, 349, 350, 351, 362], "08": [35, 41, 66, 67, 350, 351, 363], "pin_memori": [35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 148, 349, 367], "schaul": [35, 66, 67], "quan": [35, 66, 67], "antonogl": [35, 66, 67], "silver": [35, 66, 67], "2015": [35, 66, 67], "arxiv": [35, 55, 58, 60, 66, 67, 83, 84, 85, 86, 96, 97, 101, 102, 104, 105, 110, 114, 115, 127, 149, 169, 188, 189, 190, 191, 192, 193, 196, 197, 198, 203, 208, 214, 216, 217, 220, 222, 223, 229, 239, 244, 258, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 275, 276, 279, 280, 289, 294, 302, 364], "ab": [35, 55, 58, 60, 66, 67, 83, 84, 85, 86, 96, 97, 101, 102, 104, 105, 110, 114, 115, 126, 149, 169, 173, 188, 193, 197, 198, 203, 208, 214, 216, 217, 220, 222, 223, 229, 258, 259, 262, 263, 264, 265, 268, 269, 270, 271, 272, 275, 276, 279, 364], "1511": [35, 66, 67, 198], "05952": [35, 66, 67], "expon": [35, 41, 66, 67], "\u03b1": [35, 41, 66, 67], "delta": [35, 41, 66, 67, 199, 203, 226, 245, 249, 342, 345, 361], "null": [35, 41, 66, 67, 125], "max_siz": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 76, 78, 80, 351, 356], "1_000": [35, 38, 41, 42, 361, 365], "merg": [35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 363], "mini": [35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 362], "decid": [35, 38, 41, 42, 361, 367], "meth": [35, 38, 41, 42, 274, 363], "incompat": [35, 38, 41, 42, 278, 365], "drop_last": [35, 38, 41, 42, 73, 75], "notion": [35, 38, 41, 42], "caution": [35, 38, 41, 42, 73, 176, 368], "codebas": [35, 38, 41, 42, 363], "approach": [35, 38, 41, 42, 145, 349, 351, 355, 356, 361, 368], "return_info": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 365], "tensordictprioritizedreplaybuff": [35, 342, 367], "simplifi": [35, 354, 363, 365], "_weight": [35, 41, 66, 67, 365, 367], "arrai": [35, 40, 66, 87, 91, 107, 113, 136, 199, 200, 203, 204, 349, 361, 365], "update_prior": [35, 66, 67, 323, 346, 350, 365, 367], "36278465": 35, "invert": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 256, 351], "tempfil": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 336, 349, 350, 361, 365], "tqdm": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 326, 349, 351, 352, 361, 362, 363], "randomsampl": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 349, 361], "td_error": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 261, 262, 264, 265, 266, 267, 272, 274, 277, 279, 281, 287, 349, 355, 365, 367], "update_tensordict_prior": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 349, 365, 367], "temporarydirectori": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 349, 350, 361, 365], "tmpdir": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 349, 350, 361], "rb_load": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "cursor": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "insert_transform": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 122, 167], "insert": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 69, 70, 78, 79, 81, 82, 122, 131, 167, 168], "set_sampl": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "set_storag": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "set_writ": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "prompt_rindex": [36, 37, 40], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 87, 91, 107, 113, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255], "text": [37, 40, 43, 56, 199, 200, 203, 204, 244, 351], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 188, 193, 219], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 365], "inde": [37, 134, 351, 363], "roundrobinwrit": [38, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60], "Not": [38, 83, 84, 96, 97], "depth": [38, 87, 91, 103, 107, 110, 113, 185, 186, 187, 189, 190, 191, 192, 197, 198, 206, 208, 211, 212, 216, 217, 238, 344, 350, 353, 355, 356, 360, 361, 362, 365], "_pytre": [38, 365], "tree_map": [38, 365], "did": [38, 172, 295, 350, 351, 356, 365, 368], "assert0": [38, 365], "ref_model": 40, "reward_model": [40, 254], "kl_coef": 40, "max_new_token": 40, "score_clip": 40, "kl_schedul": 40, "klcontrollerbas": 40, "num_step": 40, "causal": 40, "sentenc": 40, "frozen": [40, 143], "kl": [40, 143, 269, 273], "penalti": [40, 273], "strai": 40, "calcul": [40, 154, 199, 258, 260, 264, 273, 276, 278], "gpt2rewardmodel": 40, "get_dataload": [40, 342], "promptdata": [40, 342], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 61], "tensorclass_typ": [40, 61], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 357, 363, 365], "reward_kl": [40, 143], "reward_raw": 40, "sample_log_prob": [40, 233, 234, 235, 245, 249, 251, 276, 351, 354, 362, 367], "create_rollout_td": 40, "log_prob": [40, 194, 209, 210, 218, 228, 249], "log_ratio": 40, "replic": 40, "rindex": 40, "eo": 40, "term": [40, 143, 203, 204, 213, 214, 257, 258, 266, 328, 350, 351, 353, 354, 362], "generation_config": 40, "generationconfig": 40, "ti": [40, 298, 299, 300, 301, 303, 304, 305, 306, 350], "log_probs_gen": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 53, 66, 262, 265, 266, 267, 272, 274, 277, 279, 281, 287, 365, 367], "reduct": [41, 66, 67, 78, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 273, 275, 276, 277, 278, 279, 281], "prioritizedreplaybuff": [41, 342, 367], "min": [41, 66, 67, 78, 226, 227, 228, 237, 244, 259, 260, 266, 275, 277, 279, 350, 351, 361, 362], "median": [41, 66, 67, 78, 96, 97, 245, 249], "include_info": [41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60], "kw": [42, 53, 70, 79], "huggingfac": [43, 55, 60, 242], "co": [43, 136, 363], "doc": [43, 93, 96, 97, 106, 110, 316, 349, 350, 352, 354, 358, 360, 361, 362, 365, 368], "pad_trunc": 43, "am": 43, "me": 43, "reassur": 43, "ok": 43, "describ": [44, 128, 166, 226, 227, 262, 312, 345, 349, 351, 361, 362, 363, 368], "tokenizer_fn": 45, "tensordicttoken": [45, 342], "pre_tokenization_hook": 45, "valid_s": 45, "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "elementwis": 45, "vocabulari": 45, "loader": [45, 351], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "batch_dim": [45, 340], "valid_mask_kei": 45, "conver": 45, "batch_dimens": 45, "filder": 45, "from_dict": 45, "data_memmap": 45, "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "dataset_id": [52, 54, 55, 56, 58, 59, 60], "num_proc": 52, "slice_len": [52, 58, 67, 74, 75, 309], "strict_len": 52, "arari": 52, "2600": 52, "million": [52, 352], "consequ": [52, 203, 356], "50x10": 52, "available_dataset": [52, 53, 54, 55, 56, 57, 58, 59, 60, 74, 75], "ataridqn": 52, "immutabledatasetwrit": [52, 53, 54, 55, 56, 57, 58, 59, 60], "greater": [52, 67, 74, 75, 201, 205, 349, 350, 367], "shorter": [52, 58, 67, 74, 75], "Be": [52, 58, 67, 74, 75], "game_nam": 52, "krull": 52, "1d": [52, 67, 74, 75, 78], "cheapli": 52, "nontensordata": [52, 58, 307], "invalid_rang": 52, "999998": 52, "999999": 52, "add_count": 52, "84": [52, 153, 350, 352, 363, 364], "valueestim": [52, 258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 283, 287, 342, 345, 349, 361, 362], "convolut": [52, 186, 187, 189, 190, 211, 224, 354], "2657628": 52, "2657629": 52, "2657630": 52, "2657631": 52, "2657632": 52, "2657633": 52, "2657634": 52, "2657635": 52, "2657636": 52, "2657637": 52, "2657638": 52, "2657639": 52, "2657640": 52, "2657641": 52, "2657642": 52, "2657643": 52, "2657644": 52, "2657645": 52, "2657646": 52, "2657647": 52, "2657648": 52, "2657649": 52, "2657650": 52, "2657651": 52, "2657652": 52, "2657653": 52, "2657654": 52, "2657655": 52, "2657656": 52, "2657657": 52, "2657658": 52, "2657659": 52, "2657660": 52, "2657661": 52, "2657662": 52, "2657663": 52, "2657664": 52, "2657665": 52, "2657666": 52, "2657667": 52, "2657668": 52, "2657669": 52, "2657670": 52, "2657671": 52, "2657672": 52, "2657673": 52, "2657674": 52, "2657675": 52, "2657676": 52, "2657677": 52, "2657678": 52, "2657679": 52, "2657680": 52, "2657681": 52, "2657682": 52, "2657683": 52, "2657684": 52, "2657685": 52, "2657686": 52, "2657687": 52, "2657688": 52, "2657689": 52, "2657690": 52, "2657691": 52, "1995687": 52, "1995688": 52, "1995689": 52, "1995690": 52, "1995691": 52, "1995692": 52, "1995693": 52, "1995694": 52, "1995695": 52, "1995696": 52, "1995697": 52, "1995698": 52, "1995699": 52, "1995700": 52, "1995701": 52, "1995702": 52, "1995703": 52, "1995704": 52, "1995705": 52, "1995706": 52, "1995707": 52, "1995708": 52, "1995709": 52, "1995710": 52, "1995711": 52, "1995712": 52, "1995713": 52, "1995714": 52, "1995715": 52, "1995716": 52, "1995717": 52, "1995718": 52, "1995719": 52, "1995720": 52, "1995721": 52, "1995722": 52, "1995723": 52, "1995724": 52, "1995725": 52, "1995726": 52, "1995727": 52, "1995728": 52, "1995729": 52, "1995730": 52, "1995731": 52, "1995732": 52, "1995733": 52, "1995734": 52, "1995735": 52, "1995736": 52, "1995737": 52, "1995738": 52, "1995739": 52, "1995740": 52, "1995741": 52, "1995742": 52, "1995743": 52, "1995744": 52, "1995745": 52, "1995746": 52, "1995747": 52, "1995748": 52, "1995749": 52, "1995750": 52, "left": [52, 54, 58, 74, 124, 131, 132, 133, 137, 143, 149, 151, 152, 158, 161, 164, 166, 169, 171, 175, 211, 240, 350, 351, 356, 357], "untouch": [52, 58, 124, 131, 132, 133, 137, 143, 151, 152, 158, 161, 166, 175], "_max_run": 52, "dataset_asterix": 52, "asterix": 52, "dataset_pong": 52, "sample_from_al": [52, 69, 72], "buffer_id": [52, 72, 77], "hidden": [52, 107, 113, 126, 189, 197, 199, 200, 201, 203, 204, 205, 216, 217, 222, 223, 233, 234, 235, 237, 248, 251, 260, 273, 276, 344, 352, 360, 367], "exclusive_field": 52, "stack_dim": 52, "data_path": [52, 53, 54, 55, 56, 57, 58, 59, 60], "data_path_root": [52, 53, 54, 55, 56, 57, 58, 59, 60], "delet": [52, 53, 54, 55, 56, 57, 58, 59, 60, 128, 316], "chunksiz": [52, 53, 54, 55, 56, 57, 58, 59, 60], "pool": [52, 53, 54, 55, 56, 57, 58, 59, 60, 164], "max_tasks_per_child": [52, 53, 54, 55, 56, 57, 58, 59, 60], "worker_thread": [52, 53, 54, 55, 56, 57, 58, 59, 60], "index_with_gener": [52, 53, 54, 55, 56, 57, 58, 59, 60], "pbar": [52, 53, 54, 55, 56, 57, 58, 59, 60, 349, 351, 352, 361, 362, 363], "dest": [52, 53, 54, 55, 56, 57, 58, 59, 60, 149, 169, 171, 248], "num_fram": [52, 53, 54, 55, 56, 57, 58, 59, 60], "unitari": [52, 53, 54, 55, 56, 57, 58, 59, 60, 363], "minariexperiencereplai": [52, 53, 54, 55, 57, 58, 59, 60], "1000000": [52, 53, 54, 55, 56, 57, 58, 59, 60], "distance_from_origin": [52, 53, 54, 55, 56, 57, 58, 59, 60], "forward_reward": [52, 53, 54, 55, 56, 57, 58, 59, 60], "qpo": [52, 53, 54, 55, 56, 57, 58, 59, 60], "qvel": [52, 53, 54, 55, 56, 57, 58, 59, 60], "reward_ctrl": [52, 53, 54, 55, 56, 57, 58, 59, 60, 107], "reward_forward": [52, 53, 54, 55, 56, 57, 58, 59, 60], "reward_surv": [52, 53, 54, 55, 56, 57, 58, 59, 60], "x_posit": [52, 53, 54, 55, 56, 57, 58, 59, 60, 107], "x_veloc": [52, 53, 54, 55, 56, 57, 58, 59, 60, 107], "y_posit": [52, 53, 54, 55, 56, 57, 58, 59, 60], "y_veloc": [52, 53, 54, 55, 56, 57, 58, 59, 60], "achieved_go": [52, 53, 54, 55, 56, 57, 58, 59, 60], "desired_go": [52, 53, 54, 55, 56, 57, 58, 59, 60], "27": [52, 53, 54, 55, 56, 57, 58, 59, 60, 83, 84, 107, 113, 348, 350, 351, 361, 363, 366], "_collate_id": [52, 53, 54, 55, 56, 57, 58, 59, 60], "0x120e21dc0": [52, 53, 54, 55, 56, 57, 58, 59, 60], "cattensor": [52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 349, 360, 363, 368], "cat_tensor": [52, 53, 54, 55, 56, 57, 58, 59, 60], "cat_next_tensor": [52, 53, 54, 55, 56, 57, 58, 59, 60], "new_storag": [52, 53, 54, 55, 56, 57, 58, 59, 60], "31": [52, 53, 54, 55, 56, 57, 58, 59, 60, 96, 97, 350, 361, 363, 364], "full_storag": [52, 53, 54, 55, 56, 57, 58, 59, 60], "0x168406fc0": [52, 53, 54, 55, 56, 57, 58, 59, 60], "from_env": 54, "use_truncated_as_don": 54, "direct_download": 54, "terminate_on_end": 54, "env_kwarg": [54, 59, 60, 124, 338, 339, 349], "reconstruct": [54, 74, 75, 269, 349, 368], "get_dataset": 54, "qlearning_dataset": 54, "fewer": [54, 74], "possess": 54, "unexpectedli": 54, "traj_split": 54, "observationnorm": [54, 173, 340, 349, 350, 351, 352, 367], "maze2d": 54, "umaz": 54, "loc": [54, 87, 91, 107, 113, 143, 145, 156, 202, 215, 227, 228, 233, 234, 235, 245, 249, 251, 258, 259, 272, 276, 277, 278, 279, 330, 340, 344, 349, 350, 351, 352, 354, 362, 367], "gen": 55, "dgrl": 55, "accompani": [55, 124, 161], "gap": 55, "2312": 55, "05742": 55, "gen_dgrl": 55, "procgen": 55, "bigfish": 55, "bossfight": 55, "categori": [55, 344, 346], "1m_e": 55, "1m_": 55, "comma": 55, "npy": 55, "extract": [55, 123, 242, 349, 351, 367], "mmap": [55, 59, 60], "minut": [55, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "internet": [55, 60], "connect": [55, 60], "minari": 56, "websit": [56, 58], "currenrtli": 56, "minari_data": 56, "door": 56, "torchrl_logg": [56, 358], "28": [56, 211, 348, 350, 351, 356, 361, 363, 365, 366], "door_body_po": 56, "dua": 57, "graff": 57, "2017": 57, "uci": 57, "archiv": 57, "ic": 57, "edu": 57, "ml": 57, "sklearn": [57, 106], "adult_num": [57, 106], "adult_onehot": [57, 106], "mushroom_num": [57, 106], "mushroom_onehot": [57, 106], "covertyp": [57, 106], "shuttl": [57, 106], "magic": [57, 106, 353], "shuffl": [58, 73, 75, 362], "embodi": [58, 364], "22": [58, 74, 75, 172, 350, 355, 363, 364], "institut": 58, "demonstr": [58, 351, 356, 361, 362, 363, 365, 368], "527": [58, 363], "skill": 58, "160266": 58, "googl": [58, 59, 83, 84, 101, 102, 351, 352, 361, 362], "open_x_embodi": 58, "2310": [58, 110], "08864": 58, "language_instruct": 58, "get_non_tensor": 58, "neither": [58, 363], "nor": 58, "insuffici": 58, "chosen": [58, 114, 115, 162, 163, 220, 221, 229, 247, 309, 344, 357], "openx": 58, "__will": 58, "change__": 58, "randomli": [58, 73, 144, 145, 163, 240, 245, 249, 354, 361, 362, 363, 365], "crop": [58, 129, 150, 309], "modal": [58, 349], "cmu_stretch": [58, 309], "is_init": [58, 60, 126, 142, 201, 205, 243, 244, 352], "language_embed": 58, "512": [58, 198, 350, 363], "lift": 58, "green": [58, 361], "garbag": 58, "lid": 58, "roboset": 59, "h5": [59, 60], "roboh": [59, 110], "concis": [59, 355], "75": [59, 350, 363, 364], "totensor": 60, "image_s": 60, "v": [60, 173, 199, 200, 203, 204, 233, 265, 272, 279, 344, 349, 350], "npz": 60, "2206": [60, 104, 105], "04779": [60, 259, 264], "vd4rl": 60, "squar": [60, 129, 202, 227, 228, 309], "rectangular": [60, 186, 187], "walker_walk": 60, "64px": 60, "height": [60, 129, 153], "veloc": [60, 85, 86, 87, 91, 107, 113, 127, 361, 362, 363, 368], "infinit": [61, 101, 102, 114, 115, 356, 365], "three": [61, 344, 346, 351, 353, 354, 361, 362, 363, 365, 368], "block": [61, 62, 82, 344, 352, 361], "pairwisedataset": [61, 342], "256": [61, 101, 102, 193, 350, 351, 361, 362, 363], "immut": [62, 87, 91, 107, 113, 152, 167], "piec": [62, 70, 79, 81, 82, 349, 350, 351, 357, 361, 362, 363, 365], "scratch_dir": [63, 349, 365], "sent": [63, 64, 80, 173], "mistak": [63, 64, 80], "myclass": [63, 64, 80], "foo": [63, 64, 80, 237, 365, 368], "bar": [63, 64, 80, 237, 319, 320, 322, 326, 346, 350], "attach": [63, 64, 65, 76, 77, 80, 350], "entiti": [63, 64, 65, 76, 77, 80], "zero_": [64, 80, 180], "max_capac": [66, 67, 349, 365], "data_0": 66, "data_1": 66, "smoothen": 66, "tdrb": 66, "pack": [66, 199, 203, 351, 353, 368], "end_kei": [67, 74, 75], "cache_valu": [67, 74, 75], "readili": [67, 74, 75], "conjunct": [67, 74, 75, 350], "Will": [67, 74, 104, 309], "buffer0": [67, 74], "immutablewrit": [67, 74], "buffer1": [67, 74], "other_sampl": [67, 74], "short": [67, 74, 75, 83, 84, 96, 97, 107, 176, 203, 204, 350, 351, 353, 354, 362, 365], "unsqueez": [67, 121, 124, 127, 128, 165, 168, 349, 352, 361, 362, 363], "tolist": 67, "120110917137936e": 67, "06": [67, 194, 226, 350, 351, 361, 362, 363], "uniformli": [68, 274, 368], "storageensembl": [69, 72], "samplerensembl": 69, "writerensembl": [69, 77], "num_buffer_sampl": [69, 72], "ensembl": [69, 72, 77, 82, 248, 277], "forbidden": 69, "collat": 69, "0x13a2ef430": 69, "0x13a2f9310": 69, "interpol": [69, 153, 350, 352], "interpolationmod": [69, 352], "bilinear": [69, 153, 352], "0x13a2f9220": 69, "0x13a2f9f70": 69, "0x13a2d9b50": 69, "0x13a2f95b0": 69, "0x128648260": 69, "roundrobin": [70, 79], "incomplet": [73, 75], "fresh": 73, "haven": [73, 364], "remain": [73, 126, 133, 134, 143, 162, 214, 355], "draw": [73, 240], "slicesamplerwithoutreplac": [74, 365], "320": [74, 75, 85, 86, 350, 363], "700": [74, 75], "dataid": [74, 75], "__len__": 76, "rank_kei": 78, "rank": [78, 185], "samplerwithoutreplac": [78, 351, 362, 365], "get_insert_index": 78, "convers": [83, 84, 96, 97, 345], "2106": [83, 84, 263], "13281": [83, 84], "categorical_action_encod": [83, 84, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113], "frame_skip": [83, 84, 85, 86, 90, 91, 92, 93, 96, 97, 98, 99, 104, 105, 110, 140, 319, 322, 329, 346, 349, 350, 351, 367], "repeat": [83, 84, 85, 86, 90, 92, 93, 96, 97, 104, 105, 110, 185, 351, 361, 362, 363], "allow_done_after_reset": [83, 84, 85, 86, 87, 90, 92, 93, 96, 97, 104, 105, 110], "toler": [83, 84, 85, 86, 90, 92, 93, 96, 97, 104, 105, 110, 194, 226], "availalb": [83, 84, 96, 97], "ant": [83, 84, 87, 91, 94, 107, 113, 364], "87": [83, 84, 350, 363, 364], "acrobot": [83, 84, 85, 86, 368], "advant": [83, 84, 96, 97], "timer": [83, 84, 96, 97], "timeit": [83, 84, 96, 97], "310": [83, 84, 352, 363], "ms": [83, 84, 96, 97], "268": [83, 84, 363], "433": [83, 84, 363], "80": [83, 84, 350, 351, 361, 362, 363, 364], "213": [83, 84, 363], "8605": [83, 84], "pipelineenv": 84, "get_environ": 84, "dm_control": [85, 86, 349, 360, 368], "2006": [85, 86, 259, 264, 363], "12983": [85, 86], "task_nam": [85, 87, 91, 107, 113], "pixels_onli": [85, 86, 90, 92, 93, 110, 349, 350, 357, 358, 367, 368], "cheetah": [85, 86, 87, 91, 107, 113, 309, 349], "240": [85, 86, 363, 367], "swingup": [85, 86, 368], "swingup_spars": [85, 86], "ball_in_cup": [85, 86], "catch": [85, 86], "balance_spars": [85, 86], "three_pol": [85, 86], "two_pol": [85, 86], "finger": [85, 86], "turn_easi": [85, 86], "turn_hard": [85, 86], "fish": [85, 86], "upright": [85, 86, 350], "swim": [85, 86], "hopper": [85, 86], "hop": [85, 86], "humanoid": [85, 86, 107, 113, 360], "walk": [85, 86, 107, 113, 350, 360], "run_pure_st": [85, 86], "bring_bal": [85, 86], "bring_peg": [85, 86], "insert_bal": [85, 86], "insert_peg": [85, 86], "point_mass": [85, 86], "reacher": [85, 86], "swimmer": [85, 86], "swimmer6": [85, 86], "swimmer15": [85, 86], "walker": [85, 86], "dog": [85, 86], "trot": [85, 86], "humanoid_cmu": [85, 86], "lqr": [85, 86], "lqr_2_1": [85, 86], "lqr_6_2": [85, 86], "quadrup": [85, 86], "escap": [85, 86], "stacker": [85, 86], "stack_2": [85, 86], "stack_4": [85, 86], "deviceless": [87, 353, 355, 356, 357], "run_type_check": [87, 103], "counterenv": 87, "unboundedcontinuoustensorspec": [87, 91, 103, 107, 113, 121, 124, 132, 135, 151, 163, 180, 185, 208, 232, 248, 251, 253, 278, 342, 351, 352, 361, 362, 363, 368], "continuousbox": [87, 91, 107, 113, 180, 351, 361, 362, 363, 367, 368], "sort": [87, 91, 107, 113, 128, 244], "another_act": [87, 91, 107, 113], "mutabl": [87, 91, 107, 113], "_callabletransform": [87, 91, 107, 113], "batch_lock": [87, 89, 91, 107, 113, 124, 163, 167, 363], "done_keys_group": [87, 91, 107, 113], "outer": [87, 91, 107, 113, 346, 349, 350, 368], "another_don": [87, 91, 107, 113], "empty_cach": [87, 91, 107, 113, 167], "fake_tensordict": [87, 91, 107, 113, 350], "fake": [87, 91, 107, 113, 349, 350], "afterward": [87, 91, 107, 113, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255, 361, 368], "silent": [87, 91, 107, 113, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 217, 219, 222, 223, 225, 230, 236, 237, 239, 240, 243, 244, 247, 252, 255], "braxenv": [87, 91, 107, 113, 152, 342, 353], "envnam": [87, 91, 107, 113], "pipeline_st": [87, 91, 107, 113], "attibut": [87, 91, 107, 113], "maybe_reset": [87, 91, 107, 113], "speak": [87, 91, 107, 113, 349], "rand_act": [87, 91, 100, 107, 108, 109, 113, 124, 353], "register_gym": [87, 91, 107, 113, 353], "entry_point": [87, 91, 107, 113], "info_kei": [87, 91, 107, 113], "reward_threshold": [87, 91, 107, 113], "nondeterminist": [87, 91, 107, 113], "max_episode_step": [87, 90, 91, 92, 107, 113], "order_enforc": [87, 91, 107, 113], "autoreset": [87, 91, 107, 113], "disable_env_check": [87, 90, 91, 104, 105, 107, 113], "apply_api_compat": [87, 91, 107, 113], "nasium": [87, 91, 107, 113], "scope": [87, 91, 107, 113, 368], "dmcontrolenv": [87, 91, 107, 113, 309, 342, 349, 353, 360, 368], "dmc": [87, 91, 107, 113], "removeemptyspec": [87, 91, 107, 113], "threshold": [87, 91, 107, 113, 240, 259, 260, 351], "learnt": [87, 91, 107, 113, 336], "knowledg": [87, 91, 107, 113, 355], "checker": [87, 90, 91, 104, 105, 107, 113], "stepapicompat": [87, 91, 107, 113], "concept": [87, 91, 107, 113, 350, 365], "deem": [87, 91, 101, 102, 107, 113, 114, 115], "envgym": [87, 91, 107, 113], "0855": [87, 91, 107, 113], "0215": [87, 91, 107, 113], "0881": [87, 91, 107, 113], "0412": [87, 91, 107, 113], "1101": [87, 91, 107, 113], "0080": [87, 91, 107, 113], "0254": [87, 91, 107, 113], "0424": [87, 91, 107, 113], "9609e": [87, 91, 107, 113], "9776e": [87, 91, 107, 113], "04": [87, 91, 95, 107, 113, 350, 351, 363, 364], "6347e": [87, 91, 107, 113], "3842e": [87, 91, 107, 113], "5338e": [87, 91, 107, 113], "3064e": [87, 91, 107, 113], "0381e": [87, 91, 107, 113], "6656e": [87, 91, 107, 113], "05": [87, 91, 107, 113, 348, 350, 363, 366], "0204e": [87, 91, 107, 113], "action_spac": [87, 91, 107, 113, 136, 196, 221, 238, 239, 246, 247, 258, 259, 261, 262, 264, 265, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 352, 354, 358], "0833": [87, 91, 107, 113], "0275": [87, 91, 107, 113], "0612": [87, 91, 107, 113], "0770": [87, 91, 107, 113, 363], "1256": [87, 91, 107, 113, 363], "0082": [87, 91, 107, 113], "0186": [87, 91, 107, 113], "0476": [87, 91, 107, 113], "2221": [87, 91, 107, 113], "2256": [87, 91, 107, 113], "5930": [87, 91, 107, 113], "6937": [87, 91, 107, 113], "5865": [87, 91, 107, 113], "5479": [87, 91, 107, 113], "0187": [87, 91, 107, 113], "6825": [87, 91, 107, 113, 363], "5224": [87, 91, 107, 113], "0018": [87, 91, 107, 113, 363], "1005": [87, 91, 107, 113], "0335": [87, 91, 107, 113], "0268": [87, 91, 107, 113, 363], "0133": [87, 91, 107, 113], "0627": [87, 91, 107, 113], "0074": [87, 91, 107, 113, 363], "0488": [87, 91, 107, 113, 363], "0353": [87, 91, 107, 113], "0075": [87, 91, 107, 113, 363], "0069": [87, 91, 107, 113, 363], "0098": [87, 91, 107, 113, 363], "0058": [87, 91, 107, 113, 363], "0033": [87, 91, 107, 113, 363], "0157": [87, 91, 107, 113], "0004": [87, 91, 107, 113, 363], "0381": [87, 91, 107, 113], "0452": [87, 91, 107, 113], "11355747": [87, 91, 107, 113], "04257728": [87, 91, 107, 113], "00408397": [87, 91, 107, 113], "04155852": [87, 91, 107, 113], "0389733": [87, 91, 107, 113], "01409826": [87, 91, 107, 113], "0978704": [87, 91, 107, 113], "08808327": [87, 91, 107, 113], "03970837": [87, 91, 107, 113], "00535434": [87, 91, 107, 113], "02353762": [87, 91, 107, 113], "05116226": [87, 91, 107, 113], "02788907": [87, 91, 107, 113], "06848346": [87, 91, 107, 113], "05154399": [87, 91, 107, 113], "0371798": [87, 91, 107, 113], "05128025": [87, 91, 107, 113], "dydact": [87, 91, 107, 113], "gym_env": [87, 91, 107, 113, 367], "reset_kei": [87, 91, 107, 113, 127, 157, 162, 163, 164, 361], "multitask": [87, 91, 107, 113], "multiag": [87, 91, 100, 107, 108, 109, 113, 184, 212, 220, 229, 287], "another_reward": [87, 91, 107, 113], "auto_cast_to_devic": [87, 91, 107, 113, 362], "return_contigu": [87, 91, 107, 113, 176, 360], "soon": [87, 91, 107, 108, 109, 113], "__sort": [87, 91, 107, 113], "as__": [87, 91, 107, 113], "normal": [87, 91, 107, 113, 145, 173, 186, 187, 202, 206, 209, 210, 215, 227, 228, 236, 245, 249, 260, 273, 276, 322, 324, 340, 344, 346, 352, 354, 362, 368], "argmaxmodul": [87, 91, 107, 113], "n_ob": [87, 91, 107, 113, 143, 243, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 355], "n_act": [87, 91, 107, 113, 143, 258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 355], "ourselv": [87, 91, 107, 113, 351, 368], "emul": [87, 91, 107, 113], "epoch": [87, 91, 107, 113, 326, 351, 361, 362], "input_td": [87, 91, 107, 113], "rollout_td": [87, 91, 107, 113], "concomitt": [87, 91, 107, 113], "prevail": [87, 91, 107, 113, 128, 157, 184], "creator": [88, 331, 332, 338, 339, 340], "substitut": [88, 162, 173, 354], "vecnorm": [88, 340], "env_creat": [88, 349], "test_env1": 88, "_td": [88, 349], "observation_count": [88, 368], "test_env2": 88, "sleep": [88, 368], "ps": 88, "p1": 88, "p2": 88, "9934": 88, "env_str": 89, "device_map": 89, "accross": [90, 92], "registri": 90, "asyncvectorenv": 90, "involv": [90, 92, 93, 101, 102, 110, 124, 353, 355], "pixel_observ": [90, 92, 93, 110], "pixelobservationwrapp": [90, 92, 93, 110], "adventur": [90, 92, 368], "airraid": [90, 92, 368], "alien": [90, 92, 368], "time_limit": 90, "timelimit": [90, 101, 102, 114, 115], "default_info_dict_read": [90, 91, 92, 107], "reader": [90, 91, 92, 107, 350], "set_info_dict_read": [90, 91, 92, 107, 353], "info_dict": [90, 91, 92, 107], "auto_register_info_dict": [90, 91, 92, 107], "info_dict_read": [91, 107], "succe": [91, 107], "halfcheetah": [91, 107, 153, 349], "register_info_dict": 91, "read_act": 91, "read_don": 91, "nonsens": 91, "fallback": 91, "broken": [91, 176], "read_ob": 91, "dictat": [91, 245, 249, 276, 349, 363], "read_reward": 91, "baseinfodictread": 91, "hoc": [91, 107, 354], "dict_read": 91, "my_info_kei": 91, "some_env": 91, "vecenv": 92, "vectorenv": 92, "secur": 93, "habitat3": 93, "ai": [93, 364], "habitatrenderpick": 93, "isaacgym": [94, 95], "isaacgymwrapp": [94, 342], "isaacgymenv": [95, 342], "webpag": 95, "isaac": 95, "essenc": [95, 353], "instadeepai": [96, 97], "2306": [96, 97], "09884": [96, 97], "snake": [96, 97], "grid": [96, 97, 309], "bodi": [96, 97], "body_st": [96, 97], "fruit_posit": [96, 97], "col": [96, 97], "row": [96, 97], "head_posit": [96, 97], "tail": [96, 97], "game2048": [96, 97], "maze": [96, 97], "cleaner": [96, 97], "cvrp": [96, 97], "multicvrp": [96, 97], "minesweep": [96, 97], "rubikscub": [96, 97], "knapsack": [96, 97], "sudoku": [96, 97], "tsp": [96, 97], "connector": [96, 97], "v2": [96, 97, 111, 112, 284, 298, 299, 300, 301, 303, 304, 305, 306, 352], "mmst": [96, 97], "graphcolor": [96, 97], "partli": [96, 97], "scrambl": [96, 97], "robotwarehous": [96, 97], "tetri": [96, 97], "binpack": [96, 97], "jobshop": [96, 97], "0x1fca91910": 96, "122": [96, 97, 363, 368], "0x1ff9baee0": 96, "134": [96, 97, 363], "0x1ff9ba7c0": 96, "172": [96, 97, 363], "rubric": [97, 145, 251], "mo": [98, 99], "minecart": [98, 99], "mo_gym": 99, "qualnam": [100, 355], "leverag": [100, 108, 109, 349, 362, 368], "neural": [100, 108, 109, 186, 187, 224, 248, 344, 350, 351, 352, 354, 361, 362, 363, 368], "group_map": [100, 101, 102, 108, 109, 114, 115, 116, 361], "constructiuon": [100, 108, 109], "premad": [100, 101, 102, 108, 109, 114, 115, 287], "all_in_one_group": [100, 116], "agent_0": [100, 108, 109, 116, 361], "agent_1": [100, 108, 109, 116], "agent_2": [100, 108, 109, 116], "agent_3": 100, "one_group_per_ag": [100, 108, 109], "meltingpot": [101, 102], "2211": [101, 102], "13746": [101, 102], "melt": [101, 102], "pot": [101, 102], "novel": [101, 102, 355], "social": [101, 102], "familiar": [101, 102, 350, 362, 368], "unfamiliar": [101, 102], "broad": [101, 102], "cooper": [101, 102, 361, 362], "decept": [101, 102], "reciproc": [101, 102], "trust": [101, 102, 205], "stubborn": [101, 102], "substrat": [101, 102], "ml_collect": 101, "config_dict": 101, "configdict": 101, "horizon": [101, 102, 114, 115, 185, 208, 351], "categorical_act": [101, 102, 108, 109, 111, 112, 114, 115], "marlgroupmaptyp": [101, 102, 108, 109, 114, 115, 116, 342, 361], "agent_nam": [101, 102, 114, 115, 116], "agent_names_to_indices_map": [101, 102, 114, 115], "env_torchrl": [101, 102], "commons_harvest__open": [101, 102], "rgb": [101, 102], "144": [101, 102, 363], "192": [101, 102, 350, 363], "collective_reward": [101, 102], "ready_to_shoot": [101, 102], "88": [101, 102, 111, 112, 350, 363, 364, 365], "substrate_config": 102, "get_config": 102, "mp_env": 102, "build_from_config": 102, "default_player_rol": 102, "environn": 103, "mymbenv": [103, 185, 208], "world_model": [103, 185, 208, 269], "hidden_observ": [103, 185, 208], "mlp": [103, 185, 186, 187, 189, 190, 191, 192, 198, 201, 205, 208, 212, 233, 238, 262, 264, 344, 350, 354, 355, 358, 360, 364, 367], "worldmodelwrapp": [103, 185, 208], "activation_class": [103, 185, 186, 187, 189, 190, 191, 192, 197, 198, 206, 208, 211, 212, 350, 354, 361, 362, 367], "relu": [103, 185, 193, 208, 215, 257], "activate_last_lay": [103, 185, 192, 206, 208], "sail": [104, 105], "sg": [104, 105], "10558": [104, 105], "readthedoc": 104, "en": 104, "python_interfac": 104, "envpoolmixin": 105, "env_bas": 105, "task_id": 105, "env_typ": 105, "gym_reset_return_info": 105, "envpool_env": 105, "www": [106, 209, 210], "fetch_openml": 106, "106": [106, 363], "my_env_fun": [107, 113], "custom_attribute_list": [107, 113], "custom_attribut": [107, 113], "custom_method_list": [107, 113], "custom_method": [107, 113], "deploi": [107, 113, 124], "slight": [107, 113, 350], "share_individual_td": [107, 113], "shared_memori": [107, 113], "policy_proof": [107, 113], "ll": [107, 113, 199, 200, 203, 204, 349, 350, 351, 352, 353, 354, 355, 356, 358, 362, 368], "serial_for_singl": [107, 113], "list_of_kwarg": [107, 113], "com_veloc": [107, 113], "extrem": [107, 113, 258, 260, 273, 276, 278], "head_height": [107, 113], "joint_angl": [107, 113], "torso_vert": [107, 113], "stringent": [107, 351, 361, 362], "inter": 107, "penv": 107, "tensordictprim": [107, 352], "reward_run": 107, "env_fix": 107, "drastic": [107, 365], "influenc": 107, "thumb": [107, 351], "suppos": [107, 322, 346, 368], "myenv": [107, 124, 132, 135], "pipe": 107, "update_kwarg": [107, 113], "pettingzoo": [108, 109, 361, 362], "pet": [108, 109], "zoo": [108, 109], "__": [108, 109], "aecenv": [108, 109], "use_mask": [108, 109], "dead": [108, 109], "done_on_ani": [108, 109, 361], "compulsori": [108, 109], "adversary_0": [108, 109, 361], "adversari": [108, 109, 361], "vectoris": [108, 109, 199, 200, 203, 204], "sisl": 108, "multiwalker_v9": 108, "return_st": [108, 109], "aec": [108, 109], "n_piston": [108, 109], "pistonball_v6": [108, 109], "piston": [108, 109], "piston_0": [108, 109], "piston_1": [108, 109], "piston_20": [108, 109], "tictactoe_v3": [108, 109], "player": [108, 109], "player_1": [108, 109], "player_2": [108, 109], "butterfli": 109, "parallel_env": [109, 349, 367, 368], "vikashplu": 110, "wiki": 110, "06828": 110, "from_depth": 110, "smacv2": [111, 112], "starcraft": [111, 112], "challeng": [111, 112, 353, 363, 364], "10gen_terran": [111, 112], "10gen_zerg": [111, 112], "10gen_protoss": [111, 112], "3m": [111, 112], "8m": [111, 112], "25m": [111, 112], "5m_vs_6m": [111, 112], "8m_vs_9m": [111, 112], "10m_vs_11m": [111, 112], "27m_vs_30m": [111, 112], "mmm": [111, 112], "mmm2": [111, 112], "2s3z": [111, 112], "3s5z": [111, 112], "3s5z_vs_3s6z": [111, 112], "3s_vs_3z": [111, 112], "3s_vs_4z": [111, 112], "3s_vs_5z": [111, 112], "1c3s5z": [111, 112], "2m_vs_1z": [111, 112], "corridor": [111, 112], "6h_vs_8z": [111, 112], "2s_vs_1sc": [111, 112], "so_many_banel": [111, 112], "bane_vs_ban": [111, 112], "2c_vs_64zg": [111, 112], "old": [111, 112, 273, 368], "smac": [111, 112], "map_nam": [111, 112], "176": [111, 112, 363], "battle_won": [111, 112], "dead_al": [111, 112], "dead_enemi": [111, 112], "episode_limit": [111, 112], "322": [111, 112, 363], "Or": [111, 112, 211], "procedur": [111, 112], "distribution_config": [111, 112], "n_unit": [111, 112], "n_enemi": [111, 112], "team_gen": [111, 112], "dist_typ": [111, 112], "weighted_team": [111, 112], "unit_typ": [111, 112], "marin": [111, 112], "maraud": [111, 112], "medivac": [111, 112], "exception_unit_typ": [111, 112], "start_posit": [111, 112], "surrounded_and_reflect": [111, 112], "map_x": [111, 112], "map_i": [111, 112], "capability_config": [111, 112], "131": [111, 112, 363], "starcraft2env": 112, "proroklab": [114, 115], "vectorizedmultiagentsimul": [114, 115], "2207": [114, 115], "03530": [114, 115], "basescenario": 114, "descript": [114, 123, 350, 351], "perfrom": [114, 115], "defaultt": 114, "continuous_act": [114, 115, 307, 361, 362], "repositiori": 114, "sparsiti": 114, "unbatched_action_spec": [114, 115, 362], "unbatched_observation_spec": [114, 115], "unbatched_reward_spec": [114, 115], "het_spec": [114, 115], "het_specs_map": [114, 115], "flock": [114, 115, 307], "agent_collision_rew": [114, 115], "agent_distance_rew": [114, 115], "ca": 116, "environment4": 116, "get_group_map": 116, "sumbodul": 117, "model_bas": [118, 119, 185, 208], "out_keys_inv": [118, 130, 132, 133, 135, 145, 146, 147, 151, 152, 159, 166, 363], "decod": [118, 216], "model_based_env": [118, 268], "dreamerenv": [118, 268, 342], "model_based_env_ev": 118, "masker": 121, "tensor_spec": [121, 184, 265, 266, 276, 278], "binarydiscretetensorspec": [121, 262, 265, 266, 287, 342], "maskedenv": 121, "ones_lik": 121, "scatter": 121, "_set_se": [121, 124, 132, 135, 151, 363], "fill_float": 123, "fill_int": 123, "fill_bool": 123, "someenvclass": 123, "autoresetenv": 123, "argumet": 123, "fooenv": 123, "sign": [123, 159, 289, 361], "envtyp": 123, "reshape_fn": 124, "reset_func": 124, "environmt": 124, "request": [124, 150], "tensordict_batch_s": 124, "els": [124, 199, 200, 203, 204, 216, 344, 346, 349, 350, 351, 352, 361, 362, 363, 364], "tensordict_reset": [124, 363], "transform_env_batch_s": [124, 131, 166, 175], "transform_input_spec": [124, 131, 132, 133, 134, 145, 147, 151, 152, 157, 161, 162, 163, 166, 168, 170, 175], "transform_output_spec": [124, 131, 132, 133, 137, 143, 151, 152, 158, 161, 166, 175, 361], "transform_observation_spec": [124, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 141, 142, 143, 145, 147, 151, 152, 153, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 175, 361, 363], "transform_reward_spec": [124, 125, 130, 131, 132, 133, 137, 143, 151, 152, 155, 156, 157, 158, 159, 161, 166, 168, 175], "transformfull_done_spec": [124, 131, 132, 133, 137, 143, 151, 152, 158, 161, 166, 175], "biner": 125, "burn_in": 126, "burn": 126, "date": [126, 312], "retur": 126, "burnt": 126, "gru_modul": [126, 201], "input_s": [126, 199, 200, 201, 203, 204, 205, 352], "hidden_s": [126, 199, 200, 201, 203, 204, 205, 352], "set_recurrent_mod": [126, 201, 205, 352], "burn_in_transform": 126, "gru": [126, 200, 201], "num_lay": [126, 199, 201, 203, 205, 216, 217], "86": [126, 350, 363, 364], "3008": [126, 350], "0344": 126, "padding_valu": [127, 209, 210], "as_invers": 127, "movement": 127, "pdf": [127, 188, 189, 190, 191, 192, 196, 239, 244, 267, 277, 280, 289, 294, 302], "1312": [127, 350], "5602": 127, "unsqueezetransform": [127, 363, 365], "consumpt": 127, "followin": 127, "pictur": 127, "pixels_trsf": [127, 365], "grayscal": [127, 350, 352, 365, 368], "data_exclud": [127, 365], "del_kei": [128, 169, 360, 363], "unsqueeze_if_oor": 128, "observation_posit": 128, "observation_veloc": 128, "key1": [128, 317, 325], "key2": [128, 317, 325], "center": [129, 309], "width": [129, 153], "scalar": [130, 155, 190, 192, 213, 214, 236, 240, 241, 244, 255, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 287, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 344, 350, 355, 363], "permit": [130, 139, 168, 258, 260, 273, 276, 278], "rewardsc": [131, 167, 349, 350, 352], "rewardclip": 131, "transformed_env": [131, 166, 167, 353], "transform_env_devic": [131, 133, 166, 175], "dtype_in": 132, "dtype_out": 132, "scan": [132, 135, 250, 251], "resp": [132, 135], "not_transform": [132, 135], "constructedw": [132, 135], "orig_devic": 133, "unspecifi": 133, "transform_done_spec": [133, 166, 175], "num_actions_effect": 134, "max_act": 134, "include_forward": 134, "num_act": [134, 266, 354], "action_out": 134, "_call": [134, 139, 361, 363], "eol_kei": 136, "lives_kei": 136, "eol_attribut": 136, "unwrap": 136, "breakout": 136, "210": [136, 147, 363], "160": [136, 147, 350, 363], "eol_transform": 136, "eol": 136, "dqnloss": [136, 258, 259, 261, 264, 266, 267, 268, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 287, 333, 342, 345, 350, 352, 358], "register_kei": 136, "loss_or_advantag": 136, "lossmodul": [136, 326, 335, 336, 342], "valueestimatorbas": [136, 274, 342], "excluded_kei": 137, "finit": [138, 354, 365], "first_dim": 139, "last_dim": 139, "allow_positive_dim": [139, 168], "th": [139, 168, 199, 203, 363], "frameskip": 139, "repeatedli": [140, 351, 362], "init_kei": [142, 243], "tracker": 142, "coef": 143, "pi_curr": 143, "pi_0": 143, "overfit": 143, "probabilist": [143, 245, 342, 351, 367], "get_dist": [143, 249, 250], "mod": [143, 201, 205, 243, 252, 352, 358], "normalparamextractor": [143, 344, 351, 354, 362], "probabilisticactor": [143, 233, 234, 235, 237, 258, 259, 263, 265, 266, 272, 275, 276, 277, 278, 279, 281, 344, 349, 351, 354, 361, 362], "tanhnorm": [143, 233, 234, 235, 245, 251, 258, 259, 272, 276, 277, 278, 279, 281, 342, 351, 362, 367], "return_log_prob": [143, 233, 234, 235, 245, 249, 251, 278, 344, 351, 354, 361, 362, 367], "apply_": 143, "copy_": [143, 349], "formulat": 143, "diverg": [143, 201, 205, 245, 249, 269, 273], "noop": [144, 367], "trial": 144, "standard_norm": [145, 156, 349, 350, 352], "affin": [145, 156], "layer": [145, 173, 186, 187, 189, 190, 195, 197, 199, 200, 201, 203, 204, 205, 206, 211, 212, 213, 214, 216, 217, 224, 225, 231, 242, 252, 344, 350, 351, 352, 354, 361, 364], "set_default_tensor_typ": 145, "doubletensor": 145, "isclos": 145, "next_ob": [145, 289, 290, 291, 292, 367], "init_stat": [145, 349, 350, 351, 352], "3752e": 145, "5087e": 145, "9294e": 145, "9636": 145, "5608": 145, "6408": 145, "num_it": [145, 350, 351], "reduce_dim": [145, 349, 350, 351, 352], "cat_dim": [145, 349, 350, 351, 352], "keep_dim": [145, 350, 352], "statist": [145, 173, 278, 340, 349, 350, 351, 368], "gaussian": [145, 163, 185, 208, 213, 214, 219, 236, 351, 361], "empir": [145, 185, 208, 245, 249, 349, 351, 362], "3d": [145, 186], "third": [145, 239, 361, 362], "reorder": 147, "in_keys_in": 147, "channel": [147, 165, 211, 216, 217, 350], "r3m": [149, 364], "resnet": [149, 169, 171], "visual": [149, 169, 171, 309, 351, 361, 363], "embed": [149, 169, 170, 171, 189, 220, 232, 233, 234, 235, 248, 253, 364], "ego4d": [149, 169, 171], "univers": [149, 169, 171, 353], "suraj": [149, 169], "nair": [149, 169], "aravind": [149, 169], "rajeswaran": [149, 169], "vikash": [149, 169, 171], "kumar": [149, 169, 171], "chelsea": [149, 169], "finn": [149, 169], "abhinav": [149, 169], "gupta": [149, 169], "2203": [149, 169, 208, 364], "12601": [149, 169, 364], "_init": [149, 169, 349], "snippet": [149, 169, 349], "resnet50": [149, 171, 364], "model_nam": [149, 169, 171, 312], "resnet34": 149, "resnet18": 149, "r3m_vec": [149, 364], "feed": [149, 171, 274, 344, 349, 361, 362, 365], "stack_imag": [149, 171], "tread": [149, 171], "separet": [149, 171], "hub": [149, 171, 353, 364], "resnet50_weight": [149, 171], "imagenet1k_v1": [149, 171], "download_path": [149, 171], "tensor_pixels_kei": [149, 171], "sub_seq_len": 150, "sample_dim": [150, 349], "primarili": [150, 354], "hesit": 150, "robust": 150, "mix": [150, 220, 229, 287, 349, 361, 362], "improp": 150, "dummyenv": 151, "another_oth": 151, "other_reward": 151, "create_copi": 152, "stuff": [152, 356], "newnam": 152, "r2g": 154, "reward_to_go": 154, "bernoulli_": 154, "9010": 154, "9404": [154, 295], "9701": [154, 295], "9900": [154, 295], "0000": [154, 164, 240, 241, 252, 295, 351, 352, 363, 367], "crash": 154, "clamp_min": 155, "clamp_max": 155, "clip_min": 155, "clip_max": 155, "episode_": 157, "reward1": 157, "reward2": 157, "episode_reward": [157, 361, 362], "keep_reward": 158, "keep_don": 158, "logical_or": 159, "squeeze_dim": 160, "step_count_kei": 161, "update_don": 161, "disjunct": 161, "recognis": 161, "target_return": 162, "subtract": 162, "primer": [163, 352], "default_valu": [163, 352], "unit": [163, 185, 197, 199, 200, 216, 217, 222, 223, 351], "transfomedenv": 163, "mykei": 163, "__unless": 163, "exists__": 163, "increas": [164, 244, 361, 362], "10th": 164, "0216": 164, "1149": 164, "1990": 164, "2749": 164, "3281": 164, "9290": 164, "3702": 164, "8978": 164, "from_int": 165, "shape_toler": 165, "permuat": 165, "ri": 165, "principl": 166, "cattransform": 166, "notabl": 166, "rewardsum": [166, 175, 183, 361, 362], "smoothli": 167, "add_1": 167, "cache_spec": 167, "set_missing_toler": 167, "keyerror": [167, 349], "unsqueeze_dim": [168, 363], "danger": 168, "vc1": 169, "vc1_vec": 169, "untrain": 169, "make_noload_model": 169, "vip": [170, 171, 364], "toward": 171, "implicit": [171, 265, 272, 365], "jason": 171, "ma": 171, "shagun": 171, "sodhani": 171, "dinesh": 171, "jayaraman": 171, "osbert": 171, "bastani": 171, "ami": 171, "zhang": 171, "vip_vec": 171, "final_nam": 172, "sb3": 172, "terminal_obs_read": 172, "truli": [172, 367], "till": 172, "shared_td": 173, "decai": [173, 236, 240, 280, 324, 349, 350, 352, 368], "9999": [173, 363], "0001": [173, 197, 215, 351, 363], "to_observation_norm": 173, "underflow": [173, 324], "build_td_for_shared_vecnorm": 173, "memmori": 173, "queue": [173, 365], "td_share": 173, "state_dim": [174, 188, 193, 219, 222, 223, 237], "action_dim": [174, 188, 189, 191, 193, 219, 237, 349, 360], "gsde": [174, 277, 340], "gsdemodul": 174, "rb_transform": 175, "resist": 175, "insensit": 175, "sensit": [175, 350], "_orig": 175, "95": [175, 208, 283, 350, 351, 352, 363], "tdreset": [175, 360], "window": [175, 243, 361, 365], "edit": [175, 356], "check_dtyp": 176, "discrep": [176, 258, 260, 261, 262, 273, 276, 278, 287], "temporarili": [176, 356, 365], "rng": [176, 363], "revert": [176, 354, 365], "probabilistictdmodul": [181, 182, 206, 245, 249, 288, 322], "next_tensordict": 183, "keep_oth": [183, 363], "exclude_reward": 183, "exclude_don": 183, "exclude_act": 183, "next_": 183, "funtion": 183, "_stepmdp": 183, "write_full_fals": 184, "_terminated_or_trunc": 184, "entropi": [185, 258, 259, 260, 265, 266, 272, 273, 275, 276, 277, 279, 281, 362], "botev": 185, "et": 185, "2013": 185, "cem": 185, "plan": [185, 207, 208], "varianc": [185, 202, 215, 227, 228, 345, 349, 351, 362], "k": [185, 199, 200, 203, 204], "maximis": [185, 189, 191, 208, 344, 350, 351, 362], "modelbasedenv": [185, 208], "planning_horizon": [185, 208], "optim_step": [185, 208, 350, 358], "mpc": [185, 207, 208], "num_candid": [185, 208], "candid": [185, 208], "top_k": [185, 208], "modelbasedenvbas": [185, 207, 208, 342], "safemodul": [185, 207, 233, 235, 249, 258, 259, 265, 266, 272, 276, 277, 278, 279, 281, 331, 332, 336, 342, 367], "num_cel": [186, 187, 189, 190, 191, 192, 197, 198, 201, 205, 206, 211, 212, 233, 350, 351, 352, 354, 355, 358, 361, 362, 367], "elu": [186, 187, 189, 190, 191, 192, 197, 198, 211, 350, 367], "activation_kwarg": [186, 187, 206], "norm_class": [186, 187, 189, 190, 206], "norm_kwarg": [186, 187, 206], "bias_last_lay": [186, 187, 189, 190, 191, 192, 198, 206], "aggregator_class": [186, 187, 189, 190, 350, 352, 367], "squashdim": [186, 187, 189, 198, 211, 367], "aggregator_kwarg": [186, 187, 189, 190, 350, 352], "squeeze_output": [186, 187, 189, 190, 350, 352], "cell": [186, 187, 199, 200, 201, 203, 204, 205, 206, 211, 212, 351, 353, 354, 355, 356, 357, 358], "kernel": [186, 187, 198, 211], "cnet": [186, 187], "conv3d": 186, "lazyconv2d": [187, 189, 190, 198, 211, 367], "transformer_config": [188, 219, 237], "decisiontransform": [188, 219], "dtconfig": [188, 193, 219], "2202": [188, 193, 275], "05607": [188, 193, 275], "return_to_go": [188, 193, 219, 237], "conv_net_kwarg": [189, 190], "mlp_net_kwarg": [189, 190, 191], "use_avg_pool": [189, 190], "WITH": [189, 190, 191, 192, 244, 280], "1509": [189, 190, 191, 192, 208, 244, 262, 271, 280, 363], "02971": [189, 190, 191, 192, 244, 280], "reus": [189, 316], "convnet": [189, 190, 198, 211, 352, 354, 367], "ndims_in": 189, "avgpool": [189, 190], "lazylinear": [189, 190, 191, 192, 198, 206, 344, 351, 354, 363, 364, 367], "2304": [189, 350], "adaptiveavgpool2d": [190, 350, 352], "output_s": [190, 350, 352], "squeeze2dlay": 190, "400": [191, 192, 348, 357, 362, 363, 364, 365, 366], "mlp_net_kwargs_net1": 192, "mlp_net_kwargs_net2": 192, "mlp1": 192, "mlp2": 192, "decion": 193, "desdescrib": 193, "n_embd": 193, "n_layer": [193, 199, 203], "n_head": 193, "n_inner": 193, "n_posit": 193, "resid_pdrop": 193, "attn_pdrop": 193, "gpt2config": 193, "atol": [194, 226], "rtol": [194, 226], "batch_shap": [194, 226], "event_shap": [194, 226], "absolut": [194, 226, 349], "densiti": [194, 209, 210, 218, 228], "mass": [194, 209, 210, 218, 228, 363], "rsampl": [194, 210, 218, 249], "sample_shap": [194, 209, 210, 218], "softmax": [195, 210, 218, 238, 239], "var_num": [196, 221, 238, 239, 247], "action_value_kei": [196, 221, 238, 239, 246, 247, 274, 287], "action_mask_kei": [196, 221, 238, 239, 240, 241, 246, 247], "perspect": [196, 239, 267, 351], "1707": [196, 239, 267, 276], "06887": [196, 239, 267], "mult": [196, 212, 221, 238, 239, 246, 247], "tensordict_modul": [196, 199, 200, 203, 204, 221, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 261, 265, 266, 272, 276, 277, 278, 279, 281, 344, 352, 354, 358], "nbin": [196, 238, 344], "customdistributionalqv": 196, "log_softmax": [196, 238], "from_modul": [196, 248, 251, 367], "one_hot": [196, 210, 221], "qvalue_actor": [196, 221, 238, 246, 344], "to_modul": [196, 248, 251, 349, 367], "std_bia": 197, "std_min_val": 197, "belief": [197, 216, 222, 223], "1912": [197, 268, 269, 270], "01603": [197, 268, 269, 270], "softplu": [197, 215, 255, 256, 257], "out_features_valu": 198, "cnn_kwarg": [198, 350], "mlp_kwarg": [198, 350], "duel": 198, "cnn": [198, 211, 350, 354, 367], "06581": 198, "batch_first": [199, 201, 203, 205, 352], "bidirect": [199, 203, 352], "cudnn": [199, 200, 203, 204, 352], "vmap": [199, 200, 203, 204, 230, 248, 251, 367], "rnn": [199, 200, 203, 204, 352, 354], "device_count": [199, 200, 203, 204, 368], "n_in": [199, 200, 203, 204], "n_out": [199, 200, 203, 204], "h0": [199, 200, 203, 204], "h1": [199, 200, 203, 204], "call_gru": [199, 200], "h_out": [199, 200, 203, 204], "batched_cal": [199, 200, 203, 204], "gate": [199, 200, 203], "r_t": 199, "sigma": [199, 200, 202, 203, 204, 227, 228, 236, 244, 351, 361], "w_": [199, 200, 203, 204], "ir": [199, 200], "x_t": [199, 203], "b_": [199, 200, 203, 204], "hr": [199, 200, 203], "h_": [199, 200, 203], "z_t": 199, "iz": [199, 200], "hz": [199, 200], "n_t": 199, "odot": [199, 200, 203, 204], "hn": [199, 200, 203], "h_t": [199, 203], "sigmoid": [199, 200, 203, 204], "hadamard": [199, 200, 203, 204], "multilay": [199, 203], "_t": [199, 203, 362, 363], "ge": [199, 203], "multipli": [199, 203, 259, 260, 266, 273, 275, 276, 277, 279, 324, 349, 361], "bernoulli": [199, 203], "b_ih": [199, 200, 203, 204, 205], "b_hh": [199, 200, 203, 204, 205], "seq": [199, 201, 203, 205, 243, 352, 358, 360], "h_0": [199, 203, 204], "unbatch": [199, 203], "pack_padded_sequ": [199, 203], "pack_sequ": [199, 203], "num": [199, 203, 358], "_layer": [199, 203], "_size": [199, 200, 203, 204], "h_n": [199, 203], "packedsequ": [199, 203], "weight_ih_l": [199, 203], "learnabl": [199, 200, 203, 204], "w_ir": 199, "w_iz": 199, "w_in": 199, "num_direct": [199, 203], "weight_hh_l": [199, 203], "w_hr": 199, "w_hz": 199, "w_hn": 199, "bias_ih_l": [199, 203], "b_ir": 199, "b_iz": 199, "b_in": 199, "bias_hh_l": [199, 203], "b_hr": 199, "b_hz": 199, "b_hn": 199, "mathcal": [199, 200, 203, 204], "sqrt": [199, 200, 203, 204, 244], "frac": [199, 200, 203, 204, 351], "seq_len": [199, 203], "subtli": 199, "matrix": [199, 203, 213, 214], "contrast": [199, 271, 365], "hx": [199, 200, 203, 204], "lstmcell": [200, 205], "gru_cel": 200, "z": 200, "weight_ih": [200, 204], "weight_hh": [200, 204], "bias_ih": [200, 204], "bias_hh": [200, 204], "rocm": [200, 204], "embedd": [201, 205], "grucel": [201, 248], "python_bas": [201, 205], "recurrent_st": [201, 352], "custom_kei": [201, 205], "recurrent_mod": [201, 205], "rs": [201, 349], "gru_module_train": 201, "policy_train": [201, 205], "traj_td": [201, 205], "policy_infer": [201, 205], "td_inf": [201, 205], "assert_clos": [201, 205], "upscal": [202, 227, 228], "tanh_loc": [202, 227, 228], "event_dim": [202, 226, 227], "ultim": [202, 227, 228], "poor": [202, 227, 228], "explos": [202, 227, 228], "switch": [202, 228, 307], "formula": [202, 227, 228, 258, 260, 273, 276, 345, 351], "proj_siz": 203, "c0": [203, 204], "c1": [203, 204], "call_lstm": [203, 204], "c_out": [203, 204], "i_t": 203, "ii": [203, 204], "hi": [203, 204], "f_t": 203, "hf": [203, 204], "g_t": 203, "ig": [203, 204], "hg": [203, 204], "o_t": 203, "ho": [203, 204], "c_t": 203, "c_": 203, "forget": 203, "1402": 203, "1128": 203, "c_0": [203, 204], "proj": 203, "c_n": 203, "w_ii": 203, "w_if": 203, "w_ig": 203, "w_io": 203, "w_hi": 203, "w_hf": 203, "w_hg": 203, "w_ho": 203, "b_ii": 203, "b_if": 203, "b_ig": 203, "b_io": 203, "b_hi": 203, "b_hf": 203, "b_hg": 203, "b_ho": 203, "weight_hr_l": 203, "_revers": 203, "analog": [203, 354], "cn": 203, "lstm_cell": 204, "h_1": 204, "c_1": 204, "time_step": [204, 243], "cx": 204, "correspont": 205, "recurrent_state_h": [205, 352], "recurrent_state_c": [205, 352], "triplet": [205, 246, 247], "lstm_modul": 205, "rs_h": 205, "rs_c": 205, "hidden0": 205, "hidden1": 205, "single_bias_last_lay": 206, "layer_class": 206, "layer_kwarg": 206, "perceptron": [206, 354], "aslo": 206, "42": [206, 258, 259, 261, 265, 272, 279, 348, 350, 353, 363, 366], "noisylinear": [206, 213, 342, 350], "noisylazylinear": [206, 342], "mpcplanner": 207, "tensordict_out": [207, 368], "mppi": 208, "covari": 208, "william": [208, 278], "aldrich": 208, "theodor": 208, "01149": 208, "hansen": 208, "wang": 208, "su": 208, "04955": 208, "valueoper": [208, 233, 234, 235, 258, 259, 260, 261, 266, 272, 273, 276, 277, 278, 279, 281, 336, 344, 349, 351, 355], "tdlambdaestim": [208, 342, 349], "value_net": [208, 262, 264, 278, 289, 290, 291, 292, 351, 354, 355, 358], "adv": 208, "lmbda": [208, 283, 289, 292, 294, 300, 301, 302, 305, 306, 345, 349, 351, 362], "value_network": [208, 261, 262, 264, 265, 267, 272, 279, 289, 290, 291, 292, 345, 349, 351, 355, 358, 361], "temperatur": [208, 259, 265, 272], "neg_inf": [209, 210], "inf": [209, 210], "api_doc": [209, 210], "tf_agent": [209, 210], "event": [209, 210, 218, 298, 299, 300, 301, 303, 304, 305, 306, 365], "unnorm": [209, 210, 218], "sparse_mask": [209, 210], "dens": [209, 210], "0831": [209, 210], "1203": [209, 210], "0928": [209, 210], "1972": [209, 210], "grad_method": [210, 218], "reparamgradientstrategi": [210, 218], "passthrough": [210, 218], "proxi": [210, 218, 345], "relaxedonehot": [210, 218], "zeros_lik": [210, 363], "sample_non_valid": 210, "centralis": [211, 212, 361, 362], "share_param": [211, 212, 361, 362], "homogen": [211, 212, 361, 362], "agent_network": [211, 212], "modulelist": [211, 212, 367], "2592": [211, 350], "decentralis": [211, 361, 362], "n_agent_input": [212, 361, 362], "n_agent_output": [212, 361, 362], "lazili": [212, 363], "toech": 212, "centalis": 212, "shown": [212, 344, 360, 361, 362, 365], "std_init": [213, 214], "initialize_paramet": 213, "isol": [213, 274], "1706": [214, 229], "10295v3": 214, "induc": 214, "aid": 214, "scale_map": 215, "biased_softplus_1": 215, "scale_lb": [215, 222, 223], "module_norm": 215, "1803": [216, 217, 220], "10122": [216, 217], "rnn_hidden": 216, "latent": 217, "excacli": 218, "inres": 219, "mu": [219, 244, 351], "state_shap": [220, 287], "mixing_embed_dim": [220, 287], "qmix": [220, 361, 362], "mixer": [220, 229, 287], "monoton": 220, "hyper": 220, "11485": 220, "qmixerloss": [220, 229], "qmix_vdn": [220, 229], "vdn": [220, 229], "greedi": [221, 239, 240, 241, 247, 350, 352, 354], "hidden_dim": [222, 223], "posterior": [222, 269], "rssm": [222, 223, 269], "1811": [222, 223], "04551": [222, 223], "obs_embed": 222, "rnn_hidden_dim": 223, "dream": 223, "tanhtransform": 227, "decomposit": 229, "05296": 229, "hide": [230, 351, 361, 362], "satisfi": [230, 344], "vmap_dim": 230, "lam": 230, "sample_in": 230, "sample_in_td": 230, "vm": 230, "translat": [232, 245], "character": [232, 238, 245, 246, 248, 365], "overflow": [232, 238, 239, 245, 246, 247, 248, 249], "td_modul": [232, 233, 234, 235, 245, 248, 249, 251, 253, 354, 367], "3635": 232, "0340": 232, "1476": 232, "3911": [232, 363], "1664": [232, 350, 363], "5455": [232, 350], "2247": 232, "4583": 232, "2916": 232, "2160": 232, "5337": 232, "5193": 232, "grad_fn": [232, 240, 241, 367], "addmmbackward0": 232, "actorvalueoper": [233, 344, 354], "get_policy_oper": [233, 234, 235, 260, 273, 276, 344], "standalon": [233, 234, 235, 354], "tdmodul": [233, 234, 235, 336], "get_critic_oper": 233, "common_oper": [233, 235], "policy_oper": [233, 234, 235], "value_oper": [233, 234, 235], "normalparamwrapp": [233, 234, 235, 245, 251, 258, 259, 266, 272, 276, 277, 278, 279, 281, 342, 367], "module_hidden": [233, 235], "td_module_hidden": [233, 235], "module_act": [233, 235], "td_module_act": [233, 234, 235], "module_valu": [233, 234, 235], "td_module_valu": [233, 234, 235], "state_action_valu": [233, 253, 259, 265, 272, 279, 288, 336, 344, 349, 361, 367], "td_clone": [233, 234, 235], "tensordictmodulewrapp": [233, 331, 332, 336], "get_policy_head": [233, 234, 235], "safesequenti": [233, 234, 235, 287], "head": [233, 235, 260, 273, 276], "get_value_head": [233, 234, 235], "get_value_oper": [233, 234, 235, 260, 273, 276], "action_modul": 234, "state_valu": [234, 235, 253, 260, 265, 272, 273, 276, 277, 279, 289, 290, 291, 292, 294, 296, 298, 300, 302, 303, 305, 344, 349, 351, 362], "qualiti": [235, 344], "actorcriticoper": [235, 260, 273, 276, 344, 354], "embeddig": 235, "refet": 235, "actorcriticwrapp": [235, 344, 349], "po": [236, 241], "sigma_init": [236, 361], "epsilon": [236, 240, 241, 244, 280, 324, 350, 351, 352, 354], "sigma_end": [236, 361], "annealing_num_step": [236, 240, 241, 244, 349, 350, 352, 354, 358, 361], "captur": [236, 240, 241, 244], "omiss": [236, 240, 241, 244], "ommit": [236, 240, 241, 244], "inferec": 237, "set_tensor_kei": 237, "dt_inference_wrapp": 237, "baz": 237, "inference_context": 237, "obs_dim": 237, "tanhdelta": [237, 342, 349, 361], "dtactor": 237, "actor_modul": [237, 367], "dist_class": 237, "dist_kwarg": 237, "distribution_kwarg": [237, 245, 249, 351, 361, 362], "inference_actor": 237, "sequence_length": 237, "mask_context": 237, "out_act": 237, "qvaluemodul": [238, 246, 287, 352, 354, 358], "distributionaldqnnet": 238, "make_log_softmax": 238, "my_action_valu": [239, 247], "chanc": 239, "thid": 239, "eps_init": [240, 241, 244, 350, 352, 354, 358], "eps_end": [240, 241, 244, 350], "explorative_polici": [240, 241, 244], "9055": [240, 241, 363], "9277": [240, 241], "6295": [240, 241], "2532": [240, 241], "addbackward0": [240, 241], "lmheadmodel": 242, "actor_head": [242, 260, 273, 276], "base_model": 242, "lm_head": 242, "macro": 243, "lookahead": 243, "n_action": [243, 259, 262, 264, 275, 279], "reshape_cat": 243, "actor_bas": 243, "obs_cat": 243, "obs_cat_reshap": 243, "action_orig": 243, "counter": [243, 319, 346], "ornstein": [244, 349], "uhlenbeck": [244, 349], "ou": [244, 349], "correl": 244, "noise_t": 244, "noise_": 244, "theta": [244, 351, 363], "sigma_t": 244, "sigma_": 244, "anneal": [244, 350, 354, 361], "ou_prev_nois": 244, "ou_step": 244, "x0": 244, "sigma_min": 244, "n_steps_ann": 244, "is_init_kei": 244, "_ou_prev_nois": 244, "_ou_step": 244, "default_interaction_typ": [245, 249, 354], "interaction_typ": [245, 249], "datacollectorbas": [245, 328, 331, 332, 336, 342], "set_interaction_typ": [245, 249], "cache_dist": [245, 249], "n_empirical_estim": [245, 249], "compound": [245, 354], "compositedistribut": [245, 354], "categ": 245, "distribution_map": 245, "chose": 247, "functionalmodul": 248, "functionalmodulewithbuff": 248, "td_fmodul": 248, "td_function": 248, "td_state": 248, "params_repeat": 248, "td_vmap": [248, 251], "random_sampl": [248, 249], "suppli": 249, "fist": 249, "log_prob_kei": [249, 362], "probabilistictensordictsequenti": [250, 258, 260, 273, 276, 278, 331, 332, 367], "partial_toler": [250, 251, 360], "who": [250, 251], "AND": [250, 251], "tensordictsequenci": 251, "tensordictsequ": 251, "safeprobabilisticmodul": [251, 344], "spec1": 251, "net1": 251, "module1": 251, "td_module1": 251, "spec2": 251, "module2": 251, "td_module2": 251, "clamp": [252, 269, 326, 361, 363], "boundari": [252, 351, 361, 362], "resolut": 252, "9944": 252, "9991": 252, "3020": 252, "2299": [252, 363], "5418": 252, "2989": [252, 353, 355, 356, 357], "6849": 252, "3169": 252, "2690": 252, "9649": [252, 363], "5686": 252, "8602": 252, "0315": 252, "8455": [252, 363], "6027": 252, "4746": 252, "7843": 252, "7782": 252, "2111": 252, "5115": 252, "4687": 252, "5760": 252, "custommodul": 253, "imaginari": 254, "imagin": 254, "transition_model": 254, "get_reward_oper": 254, "get_transition_model_oper": 254, "min_val": [255, 257], "_bia": 255, "surject": 257, "expln": 257, "biased_softplu": [257, 342], "beggin": 257, "biased_softplus_": 257, "syntax": [257, 349], "met": [257, 361, 363], "1602": 258, "01783v2": 258, "actor_network": [258, 259, 260, 261, 263, 265, 266, 272, 273, 275, 276, 277, 278, 279, 281, 349, 351, 355, 361, 362], "critic_network": [258, 260, 273, 276, 278, 351, 362], "entropy_bonu": [258, 260, 273, 276, 351], "favour": [258, 260, 273, 276], "samples_mc_entropi": [258, 260, 273, 275, 276], "mont": [258, 260, 273, 276, 349], "carlo": [258, 260, 273, 276, 349], "entropy_coef": [258, 260, 273, 276, 351, 362], "critic_coef": [258, 260, 273, 276, 351], "loss_critic_typ": [258, 260, 273, 276, 278, 351], "l1": [258, 260, 261, 262, 266, 273, 276, 277, 278, 281, 284, 287, 344, 349], "l2": [258, 260, 261, 262, 263, 264, 266, 269, 270, 273, 276, 277, 278, 281, 284, 287, 349, 361], "smooth_l1": [258, 259, 260, 261, 262, 265, 266, 272, 273, 276, 277, 278, 279, 281, 284, 287, 351], "separate_loss": [258, 260, 261, 265, 266, 272, 273, 276, 277, 278, 279, 281], "propag": [258, 260, 261, 265, 266, 272, 273, 276, 277, 278, 279, 281, 289, 290, 291, 292, 351, 361, 362], "advantage_kei": [258, 260, 273, 276, 278, 289, 290, 291, 292], "value_target_kei": [258, 260, 273, 276, 278, 289, 290, 291, 292], "value_target": [258, 260, 273, 276, 278, 289, 290, 291, 292, 351, 362], "ddp": [258, 260, 273, 276, 278], "fsdp": [258, 260, 273, 276, 278], "divid": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 273, 275, 276, 277, 278, 279, 281, 329, 344, 349, 361, 362, 363], "clip_valu": [258, 260, 273, 276, 278], "loss_crit": [258, 276, 351, 362], "loss_entropi": [258, 276, 351, 362], "loss_object": [258, 276, 351, 362], "recur": [258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 289, 290, 291, 292, 293, 354], "next_reward": [258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 289, 290, 291, 292], "next_don": [258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 289, 290, 291, 292], "next_termin": [258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 289, 290, 291, 292], "loss_obj": 258, "next_observ": [258, 259, 261, 262, 264, 265, 266, 272, 276, 277, 278, 279, 281, 360], "sacloss": [258, 271, 280, 342], "select_out_kei": [258, 259, 261, 265, 266, 272, 276, 277, 279, 281], "make_value_estim": [258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 282, 287, 345, 349, 350, 361, 362, 367], "value_typ": [258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 283, 287, 349], "hyperparam": [258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 349], "enum": [258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 283, 287, 349], "default_value_estim": [258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 349, 367], "default_value_kwarg": [258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 342, 349], "dqn_loss": [258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 282, 287], "td1": [258, 259, 261, 262, 264, 266, 267, 268, 272, 274, 276, 277, 278, 279, 281, 287, 349], "conserv": [259, 264], "qvalue_network": [259, 265, 266, 272, 277, 279, 281], "loss_funct": [259, 261, 262, 263, 264, 265, 266, 272, 277, 279, 281, 284, 287, 349, 361], "alpha_init": [259, 266, 275, 277, 279], "min_alpha": [259, 266, 275, 277, 279], "max_alpha": [259, 266, 275, 277, 279], "fixed_alpha": [259, 266, 275, 277, 279], "target_entropi": [259, 266, 275, 277, 279], "prod": [259, 275, 279], "delay_actor": [259, 261, 279, 281], "delay_qvalu": [259, 266, 277, 279, 281], "min_q_weight": 259, "max_q_backup": 259, "backup": 259, "deterministic_backup": 259, "num_random": 259, "with_lagrang": 259, "lagrang": 259, "lagrange_thresh": 259, "valueclass": [259, 261, 266, 277, 279, 281], "qvalu": [259, 265, 266, 272, 277, 279, 281], "loss_actor": [259, 261, 265, 266, 272, 277, 278, 279, 281, 321, 349, 355, 361, 367], "loss_actor_bc": 259, "loss_alpha": [259, 266, 277, 279], "loss_cql": [259, 264], "loss_qvalu": [259, 264, 265, 266, 272, 277, 279, 281], "loss_alpha_prim": 259, "clip_epsilon": [260, 351, 362], "normalize_advantag": [260, 273, 276, 362], "value_kei": [260, 273, 276, 289, 290, 291, 292, 349], "somemodul": [260, 273, 276], "someactor": [260, 273, 276], "value_head": [260, 273, 276], "somevalu": [260, 273, 276], "loss_modul": [260, 271, 273, 274, 276, 280, 326, 335, 336, 345, 346, 349, 350, 351, 361, 362, 365], "ppoloss": [260, 273, 342], "delay_valu": [261, 262, 264, 267, 278, 279, 287, 350, 352, 358, 361], "loss_valu": [261, 265, 272, 278, 279, 349, 351, 355, 361, 362, 367], "pred_valu": [261, 264, 281, 349, 355, 367], "pred_value_max": [261, 349, 355, 367], "target_valu": [261, 264, 277, 281, 288, 345, 349, 355, 367], "target_value_max": [261, 349, 355, 367], "qvalueactor": [262, 264, 287, 344, 350, 352], "double_dqn": 262, "06461": [262, 271], "mult_one_hot": [262, 265, 266, 287], "loss_val": [262, 264, 345, 349, 351, 352, 355, 356, 358, 361, 362, 365], "01345": 263, "distanc": [264, 273, 284, 288, 289, 362], "dcql_loss": 264, "2110": [265, 272], "06169": [265, 272], "num_qvalue_net": [265, 266, 272, 277, 279, 281], "expectil": [265, 272], "tau": [265, 272, 280, 349, 350, 361], "antmaz": [265, 272], "sticht": [265, 272], "onehotcategor": [265, 266, 342], "target_entropy_weight": 266, "disctount": 267, "distributionalqvalueactor": [267, 344], "input_tensordict": [267, 349], "actor_model": 268, "value_model": [268, 270], "imagination_horizon": 268, "unrol": [268, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306], "discount_loss": [268, 270], "lambda_kl": 269, "lambda_reco": 269, "lambda_reward": 269, "reco_loss": 269, "reward_loss": 269, "free_nat": 269, "nat": 269, "delayed_clamp": 269, "global_averag": 269, "value_loss": 270, "fake_data": 270, "ddpgloss": [271, 280, 336, 342, 349, 355, 361, 367], "td3loss": [271, 280, 342], "value_network_update_interv": 271, "qvalueclass": 272, "loss_value_diff": 272, "diff": 272, "old_polici": 273, "new_polici": 273, "apart": [273, 362], "dtarg": 273, "samples_mc_kl": 273, "analyt": 273, "decrement": 273, "loss_": [274, 321, 345, 349, 355], "equip": [274, 352, 354], "gh": 274, "_acceptedkei": 274, "dataclass": 274, "_forward_value_estimator_kei": 274, "alter": [274, 344], "value_estim": [274, 289, 290, 291, 292, 293, 345, 349, 362], "myloss": 274, "action2": 274, "convert_to_funct": [274, 349], "expand_dim": 274, "create_target_param": [274, 349], "compare_against": [274, 349], "_param": 274, "expans": 274, "resampl": 274, "_target_param": 274, "blend": 274, "proxim": [276, 351, 362], "optimis": [276, 322, 351, 361, 362], "flavour": [276, 361, 362, 367], "clipppoloss": [276, 342, 351, 362], "klpenppoloss": [276, 342], "regularis": 276, "06347": 276, "gae": [276, 342, 345, 349, 351, 362], "ppo_loss": 276, "tdlambda": [276, 283, 345, 349], "base_lay": 276, "randn_lik": 276, "samplelogprob": 276, "openreview": 277, "ay8zfzm0tdd": 277, "sub_sample_len": 277, "subsampl": [277, 317, 346], "action_log_prob_actor": 277, "state_action_value_actor": [277, 281], "connectionist": 278, "1992": 278, "doi": 278, "1007": 278, "bf00992696": 278, "actor_net": [278, 349, 351], "1801": 279, "01290": 279, "applic": [279, 287, 353, 354, 363], "1812": 279, "05905": 279, "redqloss": [280, 342], "math": 280, "theta_t": [280, 363], "theta_": [280, 363], "polyak": 280, "policy_nois": 281, "noise_clip": 281, "next_state_valu": [281, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 342], "td0": [282, 349, 361], "strict_shap": 284, "view_a": 284, "qmixer": [287, 342], "local_valu": 287, "visibl": [287, 362], "dafault": 287, "acceptedkei": 287, "global_valu": 287, "penultim": 287, "local_value_network": 287, "mixer_network": 287, "value_modul": [287, 351, 367], "qnet": [287, 349], "next_val_kei": 288, "pred_next_v": 288, "usus": 288, "mse": 288, "q_valu": 288, "n_steps_to_next": 288, "value_next_st": 288, "1506": [289, 294, 302], "02438": [289, 294, 302], "exponenti": [289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 324], "average_ga": [289, 351], "skip_exist": [289, 290, 291, 292], "time_dim": [289, 291, 292, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306], "advang": 289, "gradient_mod": 289, "value_error": [289, 290, 291, 292, 293], "target_param": [289, 290, 291, 292, 293, 349, 362], "98": [289, 290, 291, 292, 350, 363, 364], "94": [289, 292, 350, 363, 364], "unpack": [289, 290, 291, 292], "tensor_kei": [289, 290, 291, 292, 293], "next_valu": [289, 290, 291, 292, 293], "aka": [290, 350, 361], "average_reward": [290, 291, 292], "tdestim": [290, 291, 293], "infti": 291, "valuefunctionbas": 293, "old_stat": [294, 296, 298, 300, 302, 303, 305], "new_stat": [294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "rolling_gamma": [298, 299, 300, 301, 303, 304, 305, 306], "g1": [298, 299, 300, 301, 303, 304, 305, 306], "g2": [298, 299, 300, 301, 303, 304, 305, 306], "g3": [298, 299, 300, 301, 303, 304, 305, 306], "g4": [298, 299, 300, 301, 303, 304, 305, 306], "v3": [298, 299, 300, 301, 303, 304, 305, 306], "preproc": [307, 361], "as_non_tensor": [307, 361], "render_method": [307, 361], "syntat": 307, "sugar": 307, "relax": 307, "out_file_bas": 308, "skip_reset": 308, "interv": [308, 309, 318, 328, 350, 363], "center_crop": 309, "make_grid": 309, "csv": [309, 311, 313, 350, 357, 358], "wandb": [309, 313, 316, 357, 367], "tensorboard": [309, 313, 315, 357, 367], "exp_nam": [309, 310, 311, 314, 315, 316, 336, 350, 357, 358], "log_dir": [309, 310, 311, 313, 315, 316, 350, 358], "cheetah_video": 309, "run_video": 309, "openxexperiencereplai": 309, "run_video_0": 309, "templat": 310, "pt": [311, 346, 364], "video_fp": 311, "minim": [311, 365], "dependeci": 311, "cur_dir": 311, "csv_log": 311, "video_": 311, "experiment_nam": [312, 313], "uuid": [312, 350, 368], "logger_typ": 313, "logger_nam": 313, "mlflow": [313, 314], "wandb_kwarg": 313, "mlflow_kwarg": 313, "tracking_uri": 314, "uri": 314, "datastor": 314, "tb_log": 315, "tensoarboard": 315, "td_log": 315, "save_dir": 316, "resum": 316, "uncategor": 316, "sub_traj_len": 317, "min_sub_traj_len": 317, "register_op": [317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 346, 350], "process_optim_batch": [317, 323, 324, 346], "td_out": [317, 325], "_process_optim_batch_hook": [317, 346], "batch_subsampl": 317, "clear_cuda": 318, "pre_optim_step": [318, 346], "log_pbar": [319, 320, 322, 324, 346, 350], "progress": [319, 320, 322, 326, 346, 350, 352, 368], "count_fram": 319, "pre_steps_log": [319, 320, 346], "count_frames_log": 319, "lognam": 320, "r_train": [320, 350], "log_reward": [320, 350], "loss_compon": 321, "appl": 321, "optimizer_hook": 321, "record_interv": [322, 349, 350], "record_fram": [322, 329, 349, 350], "policy_explor": [322, 336, 349, 350, 354, 358], "log_kei": [322, 350], "suffix": 322, "underestim": 322, "set_exploration_typ": [322, 342, 351, 352, 354, 361, 367], "r_evalu": [322, 349], "flatten_tensordict": [323, 350], "max_dim": 323, "rb_trainer": 323, "batch_process": [323, 324, 325, 346], "post_loss": [323, 346], "999": [324, 350], "jitter": 324, "finfo": 324, "default_dtyp": 324, "get_default_dtyp": 324, "reward_norm": 324, "update_reward_stat": 324, "normalize_reward": 324, "make_train": [325, 342], "_process_batch_hook": [325, 346], "select_kei": [325, 346], "versatil": [326, 353], "optim_steps_per_batch": [326, 346, 350], "clip_grad_norm": 326, "clip_norm": 326, "progress_bar": 326, "save_trainer_interv": 326, "log_interv": [326, 350], "save_trainer_fil": [326, 346], "update_weights_interv": [328, 350], "update_weight": 328, "post_step": [328, 346, 350], "cfg": [329, 330, 331, 332, 333, 334, 335, 336, 337, 340], "dictconfig": [329, 330, 331, 332, 334, 335, 336, 337, 340], "unknowingli": 329, "annealing_fram": [329, 349], "init_env_step": [329, 330, 349], "proof_environ": [330, 349], "sta": 330, "ot": 330, "actor_model_explor": [331, 332, 349], "make_env_kwarg": [331, 332], "targetnetupdat": [333, 335, 336], "replayargsconfig": 334, "target_net_updat": [336, 349, 350], "constitu": 336, "egreedywrapp": 336, "env_proof": 336, "obs_spec": 336, "net_valu": 336, "dir": [336, 346, 350], "gettempdir": 336, "argpars": [337, 340], "namespac": [337, 340], "parser": [337, 340], "transformed_env_constructor": [337, 342], "num_env_per_collector": [338, 339], "video_tag": 340, "norm_obs_onli": 340, "use_env_cr": 340, "custom_env_mak": 340, "custom_env": 340, "return_transformed_env": 340, "action_dim_gsd": 340, "state_dim_gsd": 340, "obs_norm_state_dict": 340, "wheter": 340, "maker": 340, "asyncdatacollector": 342, "distributedsyncdatacollector": 342, "submitit_delayed_launch": 342, "raycollector": 342, "rational": 342, "behind": 342, "footnot": 342, "nontensorspec": 342, "unboundeddiscretetensorspec": 342, "lazystackedtensorspec": 342, "lazystackedcompositespec": 342, "prompttensordicttoken": 342, "rolloutfrommodel": 342, "tokenizeddatasetload": 342, "create_infinite_iter": 342, "consolidate_spec": 342, "check_no_exclusive_kei": 342, "contains_lazy_spec": 342, "check_marl_group": 342, "get_available_librari": 342, "set_exploration_mod": 342, "make_composite_from_td": [342, 363], "terminated_or_trunc": 342, "dreamerdecod": 342, "braxwrapp": 342, "dmcontrolwrapp": 342, "jumanjienv": 342, "jumanjiwrapp": 342, "meltingpotenv": 342, "meltingpotwrapp": 342, "mogymenv": 342, "mogymwrapp": 342, "multithreadedenvwrapp": 342, "openmlenv": 342, "pettingzooenv": [342, 361], "robohiveenv": 342, "smacv2env": 342, "smacv2wrapp": 342, "vmaswrapp": 342, "qvaluehook": 342, "distributionalqvaluehook": 342, "reset_nois": 342, "cemplann": 342, "mpcplannerbas": 342, "mppiplann": 342, "independentnorm": 342, "truncatednorm": 342, "maskedonehotcategor": 342, "inv_softplu": 342, "vmapmodul": 342, "distributionaldqnloss": [342, 350], "discretesacloss": 342, "iqlloss": 342, "discreteiqlloss": 342, "cqlloss": 342, "discretecqlloss": 342, "dtloss": 342, "onlinedtloss": 342, "a2closs": 342, "reinforceloss": 342, "dreameractorloss": 342, "dreamermodelloss": 342, "dreamervalueloss": 342, "td0estim": [342, 349], "td1estim": [342, 349], "td0_return_estim": 342, "td0_advantage_estim": 342, "td1_return_estim": 342, "vec_td1_return_estim": 342, "td1_advantage_estim": 342, "vec_td1_advantage_estim": 342, "td_lambda_return_estim": 342, "vec_td_lambda_return_estim": 342, "td_lambda_advantage_estim": 342, "vec_td_lambda_advantage_estim": 342, "generalized_advantage_estim": 342, "vec_generalized_advantage_estim": 342, "reward2go": 342, "distance_loss": [342, 349], "hold_out_net": 342, "hold_out_param": [342, 349], "softupd": [342, 349, 350, 352, 355, 358, 361], "hardupd": [342, 349, 355], "batchsubsampl": [342, 346], "clearcudacach": 342, "countframeslog": 342, "logreward": [342, 346, 350], "optimizerhook": [342, 350], "replaybuffertrain": [342, 346, 350], "rewardnorm": 342, "selectkei": [342, 346], "trainerhookbas": [342, 346, 350], "updateweight": [342, 346, 350], "make_collector_offpolici": 342, "make_collector_onpolici": 342, "make_dqn_loss": 342, "make_replay_buff": [342, 349], "make_target_updat": 342, "parallel_env_constructor": [342, 349], "sync_async_collector": 342, "sync_sync_collector": 342, "correct_for_frame_skip": 342, "get_stats_random_rollout": 342, "mlflowlogg": 342, "get_logg": 342, "generate_exp_nam": 342, "journei": 343, "textbook": 343, "highlight": [343, 361], "ever": [343, 362], "bump": 343, "think": [343, 351, 361, 362, 368], "benefit": [343, 353, 361, 362, 365], "pr": 343, "ground": [344, 349, 363], "recycl": [344, 365], "impos": 344, "violat": 344, "noisier": 344, "Their": [344, 361, 362], "sd": 344, "prob_modul": 344, "pick": [344, 349, 350, 354], "hopefulli": [344, 350], "functional_modul": 344, "make_funct": 344, "mathbb": [344, 350], "rightarrow": [344, 350], "soften": 344, "backbon": [344, 352, 354, 360, 367], "make_actor": 344, "make_valu": 344, "shared_param": 344, "make_common": 344, "reusabl": [345, 349, 365], "swappabl": [345, 349], "characterist": [345, 349, 363], "trainabl": [345, 349, 355, 364], "whatev": [345, 349], "smth": [345, 349], "metric": [345, 349], "nutshel": [345, 349], "barto": [345, 361, 362], "chapter": [345, 357], "significantli": [345, 349, 350, 355, 362], "next_stat": 345, "value_net_loss": 345, "pow": [345, 349], "room": 345, "signifi": [345, 361, 362], "underperform": 345, "thin": 345, "intric": [345, 354], "believ": 346, "scheme": [346, 368], "substenti": 346, "_pre_steps_log_hook": 346, "_pre_optim_hook": 346, "sub_batch": 346, "_post_loss_hook": 346, "_post_optim_hook": 346, "post_optim": [346, 350], "_post_optim_log": 346, "post_optim_log": 346, "_post_steps_hook": 346, "_post_steps_log_hook": 346, "post_steps_log": 346, "reserv": 346, "logginghook": 346, "logging_hook": 346, "save_dict": 346, "some_valu": 346, "torchsnapshot": 346, "ckpt_backend": 346, "filepath": 346, "save_train": 346, "load_from_fil": 346, "698": [348, 366], "galleri": [348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368], "mem": [348, 366], "mb": [348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368], "torchrl_demo": [348, 366, 367], "57": [348, 350, 363, 364, 366, 367], "034": [348, 366, 367], "rb_tutori": [348, 365, 366], "51": [348, 350, 363, 365, 366], "338": [348, 363, 365, 366], "4339": [348, 365, 366], "coding_dqn": [348, 350, 366], "407": [348, 350, 363, 366], "731": [348, 350, 366], "575": [348, 351, 363, 366], "multiagent_ppo": [348, 362, 366], "646": [348, 362, 366], "multiagent_competitive_ddpg": [348, 361, 366], "422": [348, 361, 363, 366], "4331": [348, 361, 366], "coding_ddpg": [348, 349, 366], "545": [348, 349, 363, 366], "4332": [348, 366], "coding_ppo": [348, 351, 366], "torchrl_env": [348, 366, 368], "686": [348, 366, 368], "4065": [348, 363, 366], "pretrained_model": [348, 364, 366], "3582": [348, 363, 364, 366], "996": [348, 353, 366], "049": [348, 354, 366], "4055": [348, 354, 358, 360, 366], "dqn_with_rnn": [348, 352, 366], "175": [348, 352, 363, 366], "4059": [348, 352, 366], "503": [348, 355, 363, 366], "838": [348, 356, 366], "658": [348, 357, 366], "52": [348, 350, 357, 361, 363, 366], "multi_task": [348, 360, 366], "982": [348, 360, 363, 366], "870": [348, 358, 366], "4054": [348, 363, 366], "author": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 365, 368], "vincent": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 363, 365, 368], "moen": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 363, 365, 368], "assembl": 349, "focus": [349, 355], "straightforward": [349, 350, 353, 354, 355, 356, 365], "maxim": [349, 355, 363], "transpar": [349, 352], "illustr": [349, 350, 354, 365], "bash": 349, "is_fork": [349, 350, 351, 352, 361, 362, 364], "get_start_method": [349, 350, 351, 352, 361, 362, 364], "is_avail": [349, 350, 351, 352, 361, 362, 364], "collector_devic": 349, "loss_dict": 349, "oblivi": [349, 351, 365], "elementari": 349, "didact": 349, "dilut": 349, "pessimist": [349, 350, 351], "target_actor_network_param": 349, "actor_in_kei": 349, "actor_crit": 349, "noth": [349, 351], "compromis": 349, "hp": 349, "hasattr": 349, "_value_estim": 349, "elif": [349, 350], "notimplementederror": [349, 361], "unknown": 349, "ifgg": 349, "_loss_actor": 349, "td_copi": 349, "actor_network_param": [349, 361], "value_network_param": [349, 361], "_loss_valu": 349, "pred_val": 349, "target_value_network_param": 349, "glue": 349, "_forward": 349, "ndimens": 349, "remaind": 349, "focu": [349, 350, 351, 354, 355, 356, 361], "env_librari": 349, "env_task": 349, "env_arg": [349, 350], "friendli": 349, "torchr": 349, "rescal": 349, "presum": 349, "make_transformed_env": 349, "reward_sc": 349, "marker": 349, "env_per_collector": 349, "transform_state_dict": 349, "make_t_env": 349, "cheat": 349, "10m": 349, "cautiou": 349, "magnitud": [349, 361], "thousand": [349, 352], "get_env_stat": 349, "proof_env": 349, "5000": [349, 350, 351, 358], "recal": [349, 351, 365], "ddpgmlpactor": 349, "ddpgmlpqnet": 349, "materi": 349, "ornsteinuhlenbeckprocesswrapp": [349, 354], "make_ddpg_actor": 349, "q_net": 349, "tight": 349, "decoupl": [349, 355], "10_000": [349, 351], "traj_len": [349, 352], "make_record": 349, "recorder_obj": 349, "flavor": 349, "circular": 349, "buffer_s": [349, 350], "random_crop_len": 349, "prb": 349, "buffer_scratch_dir": 349, "temporari": 349, "25": [349, 350, 363], "dataflow": 349, "ceil_div": 349, "utd": [349, 352], "update_to_data": 349, "realiz": 349, "_must_": 349, "001": [349, 363], "outdat": 349, "trick": [349, 350], "despit": 349, "adam": [349, 350, 351, 352, 355, 358, 361, 362, 363], "optimizer_actor": 349, "lr": [349, 350, 351, 352, 358, 361, 362, 363], "weight_decai": [349, 350], "optimizer_valu": 349, "total_collection_step": 349, "pretti": [349, 353, 357, 365], "rewards_ev": 349, "collected_fram": 349, "r0": 349, "numel": [349, 351, 352, 358, 361, 364, 365], "current_fram": [349, 361], "sampled_tensordict": 349, "gn1": 349, "clip_grad_norm_": [349, 351, 361, 362, 363], "gn2": 349, "gn": [349, 363], "td_record": 349, "rn": 349, "set_descript": [349, 351, 352, 361, 362, 363], "2f": 349, "traceback": [349, 352, 354, 358, 360, 361, 365, 368], "1126": 349, "1532": [349, 365, 368], "_wrapped_call_impl": [349, 365, 368], "_call_impl": [349, 365, 368], "1582": 349, "forward_cal": [349, 365, 368], "_contextlib": [349, 365, 368], "126": [349, 363, 365, 368], "decorate_context": [349, 365, 368], "364": [349, 363], "342": [349, 363], "1189": 349, "new_func": 349, "_self": [349, 368], "720": 349, "_to_modul": 349, "442": [349, 363], "__dict__": 349, "_modul": 349, "plot": [349, 351, 352, 361, 362, 363], "mention": [349, 352, 365, 368], "matplotlib": [349, 351, 352, 361, 362, 363, 365, 368], "pyplot": [349, 351, 352, 361, 362, 363, 365, 368], "plt": [349, 351, 352, 361, 362, 363, 365, 368], "zip": [349, 359], "legend": [349, 361], "xlabel": [349, 352, 362, 363], "ylabel": [349, 362], "tight_layout": 349, "concret": [349, 351], "takeawai": [349, 350], "distpatch": 349, "4333": 349, "jupyt": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368], "ipynb": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368], "sphinx": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368], "customis": [350, 361, 362], "road": 350, "aspect": [350, 355], "highest": [350, 354], "prerequisit": [350, 352], "lookup": 350, "amort": [350, 351], "cart": 350, "pole": 350, "un": 350, "actuat": 350, "frictionless": 350, "duelingcnndqnet": 350, "egreedymodul": [350, 352, 354, 358], "is_notebook": 350, "shell": 350, "get_ipython": 350, "__class__": 350, "zmqinteractiveshel": 350, "qtconsol": 350, "terminalinteractiveshel": 350, "ipython": [350, 362, 363], "nameerror": 350, "umbrella": 350, "misplac": 350, "misus": 350, "orchestr": [350, 355, 357], "five": 350, "64x64": 350, "motion": [350, 363], "obs_norm_sd": 350, "simpler": [350, 353], "get_norm_stat": 350, "test_env": 350, "make_model": 350, "dummy_env": 350, "init_bia": 350, "exploration_modul": [350, 352, 354, 358], "eps_greedy_v": 350, "eps_greedy_val_env": 350, "actor_explor": 350, "get_replay_buff": 350, "n_optim": [350, 355, 356], "themselv": 350, "parametriz": 350, "simplic": [350, 351, 356, 364, 365], "get_collector": 350, "cl": 350, "data_collector": 350, "bunch": 350, "power": 350, "ubiquit": [350, 353], "get_loss_modul": 350, "target_updat": [350, 361], "995": [350, 363], "variat": 350, "2e": [350, 363], "wd": 350, "upd": 350, "harder": [350, 367], "5_000": 350, "500000": 350, "100000": 350, "005": [350, 361], "mandatori": [350, 351, 362, 363], "fairer": 350, "budget": 350, "dqn_exp_": 350, "uuid1": [350, 368], "9895": 350, "0737": 350, "registr": 350, "cumbersom": 350, "buffer_hook": 350, "weight_updat": 350, "aliv": 350, "total_reward": 350, "07": [350, 362, 363], "33it": [350, 351, 363], "3688": [350, 363], "9434": 350, "84it": 350, "96": [350, 363, 364], "53": [350, 362, 363, 364], "70it": 350, "3323": 350, "87it": [350, 363], "09": [350, 361, 363], "43": [350, 363], "22it": [350, 363], "3718": 350, "224": [350, 363], "72it": 350, "60": [350, 351, 361, 362, 363, 367], "75it": 350, "3899": 350, "288": [350, 363], "68": [350, 362, 363, 364], "85it": 350, "3778": 350, "42it": 350, "352": [350, 363], "58": [350, 363], "79": [350, 363, 364], "47it": 350, "3808": 350, "384": [350, 363], "55": [350, 363], "82": [350, 360, 363, 364], "45it": 350, "3475": 350, "416": [350, 363], "85": [350, 363, 365], "93it": [350, 363], "4295": [350, 363], "448": [350, 363], "81it": [350, 363], "480": [350, 363, 364], "89": [350, 363], "53it": 350, "66it": 350, "544": [350, 363], "48": [350, 363], "91": [350, 363, 364], "46it": 350, "576": [350, 361, 363], "67it": 350, "3991": 350, "608": [350, 363], "14it": [350, 363], "640": 350, "47": [350, 363, 364], "92": [350, 363, 364], "11it": [350, 363], "672": 350, "27it": [350, 363], "704": 350, "10it": [350, 363], "3869": 350, "736": 350, "05it": [350, 363], "768": 350, "63it": 350, "800": 350, "89it": [350, 363], "832": 350, "07it": [350, 363], "864": 350, "896": 350, "06it": 350, "928": 350, "90": [350, 351, 361, 362, 363, 364], "3445": 350, "960": 350, "34it": [350, 363], "992": [350, 363], "97it": 350, "4082": [350, 363], "1056": 350, "55it": [350, 351], "1088": 350, "93": [350, 361, 363, 364, 365], "90it": [350, 363], "1120": 350, "12it": 350, "1152": 350, "1184": [350, 368], "1216": 350, "29it": [350, 363], "4173": 350, "1248": 350, "1280": 350, "88it": [350, 363], "91it": [350, 363], "1344": 350, "1376": 350, "48it": [350, 363], "1408": 350, "19it": [350, 363], "1440": 350, "1472": 350, "31it": [350, 363], "1504": 350, "1536": 350, "1568": 350, "43it": [350, 351], "1600": 350, "1632": 350, "79it": [350, 363], "37it": [350, 363], "1696": 350, "57it": [350, 363], "1728": 350, "77it": 350, "1760": 350, "65it": 350, "1792": 350, "1824": 350, "1856": 350, "1888": 350, "98it": [350, 363], "4021": 350, "1920": 350, "86it": 350, "1952": 350, "1984": 350, "78it": 350, "2016": 350, "2048": [350, 364], "2080": 350, "97": [350, 363, 364, 365], "18it": [350, 363], "2112": [350, 363], "44it": [350, 363], "2144": 350, "2176": 350, "2208": 350, "25it": [350, 363], "45": [350, 363], "2240": 350, "2272": 350, "60it": [350, 363], "2336": 350, "2368": 350, "2400": 350, "13it": [350, 363], "49": [350, 361, 363, 364], "2432": 350, "2464": 350, "2496": 350, "2528": [350, 363], "2560": 350, "2624": 350, "04it": [350, 363], "2656": [350, 363], "54": [350, 361, 363], "2688": 350, "03it": [350, 363], "2720": [350, 363], "01it": 350, "2752": 350, "56": [350, 363, 365], "2784": 350, "76it": [350, 351], "2816": 350, "82it": [350, 351], "2848": 350, "2880": 350, "2912": 350, "59": [350, 363, 364], "2944": [350, 363], "58it": [350, 363], "2976": [350, 363], "61": [350, 363, 364], "3040": 350, "52it": [350, 363], "3072": 350, "16it": [350, 351, 363], "62": [350, 363], "3104": 350, "32it": [350, 363], "63": [350, 363], "3136": 350, "3168": 350, "3200": 350, "65": [350, 363, 364], "3232": [350, 363], "3264": 350, "26it": [350, 363], "66": [350, 362, 363, 364, 365], "3296": 350, "39it": 350, "67": [350, 360, 362, 363], "3328": 350, "3360": 350, "3392": 350, "3424": 350, "74it": 350, "69": [350, 358, 362, 363], "3456": [350, 363], "61it": [350, 351], "70": [350, 351, 361, 362, 363, 364], "3488": 350, "3520": 350, "71": [350, 363], "3552": 350, "72": [350, 362, 363, 364, 365], "3584": 350, "3616": 350, "83": [350, 361, 363, 364], "73": [350, 363], "3648": 350, "74": [350, 363, 364], "3680": 350, "83it": [350, 363], "3712": 350, "3744": 350, "76": [350, 362, 363], "3776": 350, "49it": 350, "77": [350, 363, 364], "3840": 350, "3872": 350, "78": [350, 363, 364], "3904": 350, "3936": 350, "3968": 350, "50it": 350, "4000": [350, 351], "4032": 350, "69it": [350, 363], "4064": 350, "4096": 350, "4128": [350, 363], "4160": 350, "30it": [350, 363], "4192": 350, "24it": [350, 363], "4224": 350, "4256": [350, 363], "4288": [350, 363], "4320": 350, "4352": 350, "4384": 350, "4416": 350, "4448": 350, "4480": 350, "4512": 350, "99it": [350, 351, 363], "4544": 350, "4576": 350, "4608": 350, "80it": 350, "4640": 350, "4672": [350, 363], "4704": 350, "4736": 350, "4768": 350, "4800": [350, 363], "4832": 350, "62it": [350, 363], "4864": 350, "96it": [350, 363], "4896": 350, "4928": 350, "51it": [350, 351, 363], "4960": 350, "4992": 350, "5024it": 350, "28it": [350, 363], "print_csv_files_in_fold": 350, "folder_path": 350, "csv_file": 350, "output_str": 350, "dirpath": 350, "endswith": 350, "strip": 350, "tmp": [350, 365], "tmp07bwkid3": 350, "dqn_exp_706b0f22": 350, "02f5": 350, "11ef": 350, "931b": 350, "0242ac110002": 350, "34751853346824646": 350, "40816524624824524": 350, "40213119983673096": 350, "42945271730422974": 350, "19233030080795288": 350, "18954430520534515": 350, "24853023886680603": 350, "3870314061641693": 350, "34363630414009094": 350, "2559172511100769": 350, "2244148701429367": 350, "3171423673629761": 350, "45604708790779114": 350, "grad_norm_0": 350, "343657970428467": 350, "708251476287842": 350, "2506790161132812": 350, "042572498321533": 350, "310127019882202": 350, "0853092670440674": 350, "9565651416778564": 350, "037069797515869": 350, "269522190093994": 350, "10000000894069672": 350, "545454502105713": 350, "qvaluenetwork": 350, "worst": 350, "accuraci": 350, "fanci": [350, 356], "talk": 351, "repetit": [351, 353, 356], "six": 351, "sophist": [351, 362], "invent": 351, "overview": [351, 355, 361, 362, 367], "theta_k": 351, "pi_": 351, "exceed": 351, "discourag": [351, 363], "indispens": 351, "analyz": 351, "lingua": 351, "franca": 351, "defaultdict": [351, 363], "3e": [351, 352, 361, 362], "max_grad_norm": [351, 361, 362], "sub_batch_s": 351, "num_epoch": [351, 362], "entropy_ep": [351, 362], "charact": 351, "inverteddoublependulum": 351, "transmit": 351, "stai": 351, "supplementari": [351, 368], "told": 351, "confid": [351, 361, 362], "ran": 351, "f_": 351, "mu_": 351, "difficulti": [351, 368], "d_ob": 351, "d_action": 351, "policy_modul": [351, 361, 362], "That": [351, 361], "said": 351, "briefli": [351, 361, 362], "refil": [351, 362], "conveni": [351, 361, 362, 363, 365], "easiest": [351, 355, 361, 362], "mathemat": [351, 361, 362], "tradeoff": [351, 362], "advantage_modul": 351, "lr_schedul": [351, 363], "cosineannealinglr": [351, 363], "eval_str": 351, "tensordict_data": [351, 362], "data_view": [351, 362], "subdata": [351, 361, 362], "cum_reward_str": 351, "4f": [351, 352, 363], "stepcount_str": 351, "param_group": [351, 361], "lr_str": 351, "eval_rollout": 351, "nice": [351, 353, 356], "474": [351, 363], "9185": 351, "0771": 351, "0003": [351, 363], "475": [351, 363], "1138": 351, "3000": 351, "482": [351, 363], "41it": 351, "1519": 351, "484": [351, 363], "1839": [351, 363], "0002": [351, 363], "483": [351, 363], "2175": 351, "6000": 351, "2271": 351, "7000": 351, "488": [351, 363], "2348": 351, "8000": 351, "479": [351, 363], "2465": 351, "9000": 351, "2456": 351, "489": [351, 363], "2567": 351, "cap": [351, 365], "figsiz": [351, 363], "subplot": [351, 361, 363, 368], "titl": [351, 352, 362, 363], "bit": [351, 352, 353, 361, 362, 365], "84x84": 352, "accessori": 352, "stamp": 352, "assist": 352, "emb": 352, "n_cell": 352, "customiz": 352, "wouldn": 352, "make_tensordict_prim": 352, "qval": 352, "455": [352, 354, 358, 363], "typeerror": [352, 354, 358], "stoch_polici": 352, "opportun": [352, 361], "uniniti": 352, "again": [352, 353, 354, 356, 362, 364, 365, 368], "redund": 352, "strongli": 352, "sake": [352, 364, 365], "20_000": [352, 363], "longest": 352, "npai": 352, "action_spread": 352, "topic": [353, 354, 355], "straight": 353, "backtrack": 353, "encapsul": [353, 354, 355], "deprecationwarn": [353, 355, 356, 357], "reset_with_act": 353, "1919": 353, "tp": 353, "stepped_data": 353, "spatial": 353, "useless": 353, "policyless": 353, "appreci": 353, "monitor": 353, "examin": [353, 361], "tackl": 354, "delv": 354, "bypass": 354, "extractor": 354, "palliat": 354, "additivegaussianwrapp": [354, 361], "had": [354, 356], "exploration_polici": [354, 361], "greedili": 354, "2d": [354, 361, 362], "innov": [354, 355], "276": [354, 363], "rollout_explor": 354, "sole": 355, "tradit": [355, 361], "supervis": [355, 356, 365, 368], "n_collect": 355, "get_next_batch": 355, "ddpg_loss": 355, "total_loss": 355, "_custom_op": 355, "253": [355, 363], "impl_abstract": 355, "register_fak": 355, "_stacklevel": 355, "prove": 355, "reliev": 355, "concern": 355, "accustom": 356, "surprisingli": 356, "fundament": 356, "augment": [356, 358, 365], "art": 356, "pseudo": [356, 363], "multirpocess": 356, "countless": 356, "yourself": [356, 361, 362], "lightweight": 357, "portabl": 357, "everywher": 357, "hyperapamet": 357, "my_exp": 357, "log_scalar": 357, "elaps": 357, "my_scalar": 357, "saw": [357, 363, 365], "my_video": 357, "record_env": [357, 358], "lesson": 358, "voluntarili": 358, "refresh": [358, 361, 362], "value_mlp": 358, "100_000": 358, "init_rand_step": 358, "training_loop": 358, "video_record": 358, "arbitrarili": 358, "total_count": 358, "total_episod": 358, "t0": 358, "t1": 358, "conclud": [358, 364], "tutorials_python": 359, "tutorials_jupyt": 359, "env1_obs_kei": 360, "observation_stand": 360, "env2_obs_kei": 360, "observation_walk": 360, "tdreset1": 360, "tdreset2": 360, "385": [360, 363], "__torch_function__": 360, "td_handled_funct": 360, "_torch_func": 360, "432": [360, 363], "_stack": 360, "maybe_dense_stack": 360, "policy_common": 360, "policy_stand": 360, "policy_walk": 360, "But": 360, "env1_mak": 360, "env2_mak": 360, "_single_task": 360, "td_rollout": 360, "matteo": [361, 362], "bettini": [361, 362], "benchmarl": [361, 362], "simple_tag": 361, "maddpg": [361, 362], "multiagentparticleenviron": 361, "mpe": 361, "tie": [361, 362], "iddpg": [361, 362], "typical": 361, "richard": 361, "andrew": 361, "mit": 361, "press": 361, "2018": 361, "mathbf": [361, 362], "pi": [361, 362, 363], "literatur": [361, 362], "overcom": [361, 362], "stationari": [361, 362], "concurr": [361, 362], "establish": 361, "gui": [361, 362], "multiagentmlp": [361, 362], "team": [361, 362, 367], "n_iter": [361, 362], "evad": 361, "iteration_when_stop_training_evad": 361, "memory_s": 361, "n_optimiser_step": 361, "train_batch_s": 361, "polyak_tau": 361, "chaser": 361, "red": 361, "circl": [361, 362], "touch": [361, 363], "penal": 361, "acceler": [361, 362], "obstacl": 361, "drag": [361, 362], "elast": [361, 362], "collis": [361, 362], "imped": 361, "n_chaser": 361, "n_evad": 361, "n_obstacl": 361, "use_vma": 361, "simple_tag_v3": 361, "num_good": 361, "num_adversari": 361, "num_obstacl": 361, "max_cycl": 361, "num_vmas_env": [361, 362], "num_good_ag": 361, "num_landmark": 361, "adversary_1": 361, "four": [361, 362, 363], "n_agents_in_that_group": 361, "stress": [361, 362], "paramount": [361, 362], "n_rollout_step": [361, 362], "evolut": [361, 362], "group_nam": 361, "n_agents_in_group": 361, "minor": 361, "agents_exploration_polici": 361, "utilis": [361, 362], "withing": 361, "n_obs_per_ag": [361, 362], "n_actions_per_ag": [361, 362], "share_parameters_polici": [361, 362], "policy_net": [361, 362], "_agent": 361, "carefulli": [361, 362, 368], "grant": [361, 362], "converg": [361, 362], "share_parameters_crit": [361, 362], "obs_act": 361, "cat_modul": 361, "critic_modul": 361, "fantast": [361, 362], "reset_td": 361, "interfer": 361, "flatten_kei": 361, "process_batch": 361, "group_shap": 361, "get_item_shap": [361, 362], "nested_done_kei": 361, "nested_terminated_kei": 361, "desc": [361, 362], "episode_reward_mean_": 361, "episode_reward_mean_map": 361, "train_group_map": 361, "deepcopi": 361, "group_batch": 361, "_group": 361, "loss_nam": 361, "episode_reward_mean": [361, 362], "episode_reward_mean_adversari": 361, "episode_reward_mean_ag": 361, "proce": 361, "screen": 361, "fig": 361, "set_ylabel": 361, "axvlin": 361, "color": 361, "orang": 361, "set_xlabel": 361, "video_logg": 361, "vmas_log": 361, "env_with_rend": 361, "vmas_rend": 361, "print_log_dir": 361, "903": 361, "2526": 361, "fast_wrap": 361, "1303": 361, "748": 361, "1104": 361, "376": [361, 363], "493": [361, 363], "td_in": 361, "453": [361, 363], "586": [361, 363], "_init_rend": 361, "viewer": 361, "pyglet": 361, "get_default_screen": 361, "canva": 361, "108": [361, 363], "get_screen": 361, "profici": [361, 362], "master": [361, 362], "lidar": 362, "sensor": 362, "mappo": 362, "ippo": 362, "phase": [362, 365], "fed": [362, 365], "analys": 362, "visualis": 362, "vmas_devic": 362, "6_000": 362, "minibatch_s": 362, "generalis": 362, "simd": 362, "parallelis": 362, "warp": 362, "todai": 362, "surround": 362, "dot": [362, 363], "collid": 362, "penalis": 362, "scenario_nam": 362, "final_rew": 362, "agent_collis": 362, "denot": 362, "critic_net": 362, "minibatch": 362, "episode_reward_mean_list": 362, "critic_network_param": 362, "target_critic_network_param": 362, "4579917788505554": 362, "14524875581264496": 362, "168386459350586": 362, "3613134622573853": 362, "921463131904602": 362, "2106335163116455": 362, "1925103664398193": 362, "664064407348633": 362, "6539173126220703": 362, "743558168411255": 362, "xvfb": 362, "pyvirtualdisplai": 362, "1400": [362, 363], "900": 362, "pil": 362, "rendering_callback": 362, "fromarrai": 362, "gif": 362, "save_al": 362, "append_imag": 362, "freeli": 363, "undertaken": 363, "broader": 363, "wider": 363, "algebra": 363, "acquaint": 363, "avenu": 363, "_apply_to_composit": 363, "default_x": 363, "default_i": 363, "torqu": 363, "upward": 363, "angular": 363, "sin": 363, "rad": 363, "sec": 363, "gravit": 363, "angl": 363, "deleg": 363, "new_th": 363, "new_thdot": 363, "thdot": 363, "g_forc": 363, "max_torqu": 363, "angle_norm": 363, "max_spe": 363, "albeit": 363, "gen_param": 363, "high_th": 363, "high_thdot": 363, "low_th": 363, "low_thdot": 363, "trivial": 363, "shortcut": [363, 368], "irrelev": 363, "_make_spec": 363, "td_param": 363, "render_fp": 363, "random_": 363, "_make_step": 363, "staticmethod": 363, "showcas": 363, "skeleton": 363, "_apply_transform": [363, 368], "_inv_apply_transform": [363, 368], "subset": [363, 364], "sine": 363, "cosin": 363, "sintransform": 363, "costransform": 363, "t_sin": 363, "t_co": 363, "cat_transform": 363, "simple_rollout": 363, "unexplor": 363, "init_td": 363, "traj_return": 363, "last_reward": 363, "is_ipython": 363, "inlin": 363, "get_backend": 363, "ion": 363, "gcf": 363, "clear_output": 363, "625": 363, "0748": 363, "519": 363, "0499": 363, "4472": 363, "073": 363, "0685": 363, "0408": 363, "552": 363, "20it": 363, "5154": 363, "9086": 363, "9385": 363, "155": 363, "2568": 363, "4981": 363, "223": 363, "8929": 363, "4491": 363, "581": 363, "23it": 363, "3233": 363, "0664": 363, "596": 363, "1021": 363, "5263": 363, "9579": 363, "5807": 363, "8075": 363, "212": 363, "2009": 363, "5525": 363, "914": 363, "2894": 363, "0115": 363, "0977": 363, "1845": 363, "1830": 363, "4858": 363, "233": 363, "21it": 363, "2863": 363, "0297": 363, "464": 363, "4617": 363, "5997": 363, "904": 363, "1647": 363, "0777": 363, "901": 363, "4709": 363, "6813": 363, "8317": 363, "3221": 363, "5554": 363, "3353": 363, "701": 363, "17it": 363, "8570": 363, "6656": 363, "463": 363, "7779": 363, "6911": 363, "875": 363, "0796": 363, "7082": 363, "308": 363, "0421": 363, "1496": 363, "5037": 363, "1755": 363, "5029": 363, "9454": 363, "665": 363, "9330": 363, "2118": 363, "444": 363, "0995": 363, "6294": 363, "3146": 363, "2909": 363, "461": 363, "9720": 363, "1298": 363, "35it": 363, "9923": 363, "0345": 363, "36it": 363, "3438": 363, "424": 363, "6953": 363, "5233": 363, "411": 363, "8011": 363, "5329": 363, "2677": 363, "6969": 363, "7010": 363, "9352": 363, "7707": 363, "6178": 363, "5646": 363, "348": 363, "7304": 363, "9407": 363, "942": 363, "3882": 363, "7604": 363, "3507": 363, "8928": 363, "258": 363, "6978": 363, "4641": 363, "549": 363, "6047": 363, "5005": 363, "4136": 363, "2993": 363, "3222": 363, "4046": 363, "7314": 363, "275": 363, "6331": 363, "9318": 363, "961": 363, "8331": 363, "1604": 363, "4099": 363, "4761": 363, "125": 363, "4262": 363, "6363": 363, "382": 363, "3593": 363, "7377": 363, "2847": 363, "3443": 363, "867": 363, "3592": 363, "4760": 363, "441": 363, "9950": 363, "8021": 363, "3528": 363, "1214": 363, "708": 363, "4023": 363, "3583": 363, "041": 363, "3801": 363, "0310": 363, "120": 363, "4244": 363, "2039": 363, "4850": 363, "8748": 363, "706": 363, "4897": 363, "9210": 363, "8964": 363, "0832": 363, "3934": 363, "456": 363, "8971": 363, "2933": 363, "3377": 363, "6996": 363, "2274": 363, "8916": 363, "098": 363, "2660": 363, "9110": 363, "4503": 363, "6956": 363, "9172": 363, "4026": 363, "946": 363, "9229": 363, "5205": 363, "294": 363, "8872": 363, "6637": 363, "019": 363, "9281": 363, "2082": 363, "724": 363, "8561": 363, "6574": 363, "357": 363, "4138": 363, "5230": 363, "5642": 363, "921": 363, "9786": 363, "4129": 363, "5831": 363, "266": 363, "7723": 363, "4152": 363, "0898": 363, "389": 363, "5155": 363, "5376": 363, "5616": 363, "4094": 363, "283": 363, "5333": 363, "4803": 363, "895": 363, "6566": 363, "2588": 363, "662": 363, "4732": 363, "7503": 363, "068": 363, "0714": 363, "3370": 363, "059": 363, "8612": 363, "1915": 363, "3855": 363, "0349": 363, "9644": 363, "4538": 363, "445": 363, "0392": 363, "4080": 363, "1648": 363, "9599": 363, "143": 363, "4284": 363, "5946": 363, "2590": 363, "9181": 363, "4621": 363, "9075": 363, "674": 363, "1772": 363, "9444": 363, "351": 363, "9391": 363, "5595": 363, "8673": 363, "6240": 363, "5919": 363, "1071": 363, "9127": 363, "251": 363, "9799": 363, "3131": 363, "9612": 363, "9705": 363, "8741": 363, "2230": 363, "0972": 363, "0337": 363, "0350": 363, "0654": 363, "102": 363, "2441": 363, "4596": 363, "362": 363, "103": 363, "4362": 363, "171": 363, "104": 363, "4041": 363, "6907": 363, "105": [363, 365], "4664": 363, "2760": 363, "0299": 363, "9712": 363, "349": 363, "107": 363, "3332": 363, "4479": 363, "772": 363, "4357": 363, "9591": 363, "543": 363, "109": 363, "6216": 363, "1353": 363, "692": 363, "110": 363, "6261": 363, "7086": 363, "496": 363, "111": 363, "7758": 363, "9818": 363, "112": 363, "7772": 363, "5055": 363, "113": [363, 365], "5840": 363, "3180": 363, "2083": 363, "115": 363, "5275": 363, "6873": 363, "116": 363, "4107": 363, "1624": 363, "117": 363, "6372": 363, "2571": 363, "118": 363, "4039": 363, "4428": 363, "119": 363, "4728": 363, "5628": 363, "6767": 363, "2466": 363, "522": 363, "121": [363, 368], "5873": 363, "5072": 363, "6548": 363, "3766": 363, "123": 363, "5134": 363, "1955": 363, "124": 363, "2481": 363, "0591": 363, "4500": 363, "3368": 363, "9708": 363, "7059": 363, "127": 363, "3031": 363, "2534": 363, "843": 363, "3327": 363, "6193": 363, "129": 363, "73it": 363, "4831": 363, "1172": 363, "2593": 363, "4219": 363, "962": 363, "8380": 363, "899": 363, "132": 363, "2721": 363, "9048": 363, "166": 363, "133": 363, "2419": 363, "5248": 363, "2139": 363, "4278": 363, "135": 363, "0690": 363, "5140": 363, "136": 363, "1140": 363, "7402": 363, "137": 363, "5356": 363, "1636": 363, "138": 363, "0671": 363, "8798": 363, "139": 363, "8918": 363, "3298": 363, "307": 363, "140": 363, "1779": 363, "141": 363, "1771": 363, "3624": 363, "936": 363, "142": 363, "1683": 363, "4810": 363, "9373": 363, "4435": 363, "4396": 363, "8092": 363, "145": [363, 368], "2572": 363, "146": 363, "4212": 363, "0260": 363, "147": 363, "0939": 363, "6478": 363, "605": 363, "148": 363, "6606": 363, "7289": 363, "149": 363, "9300": 363, "7193": 363, "563": 363, "150": 363, "1166": 363, "8514": 363, "151": 363, "9108": 363, "0672": 363, "292": 363, "152": 363, "8591": 363, "3768": 363, "153": 363, "9976": 363, "154": 363, "0576": 363, "0067": 363, "935": 363, "4199": 363, "1722": 363, "156": 363, "8310": 363, "3466": 363, "157": 363, "8631": 363, "2492": 363, "158": 363, "8763": 363, "1277": 363, "159": 363, "5562": 363, "7446": 363, "1082": 363, "9830": 363, "161": [363, 365], "0946": 363, "5229": 363, "162": 363, "4574": 363, "6900": 363, "163": [363, 364], "2229": 363, "0318": 363, "164": 363, "0543": 363, "0817": 363, "761": 363, "165": 363, "2809": 363, "5118": 363, "366": 363, "1142": [363, 365], "5635": 363, "167": 363, "1949": 363, "2327": 363, "168": 363, "0967": 363, "0387": 363, "457": 363, "169": 363, "0782": 363, "2150": 363, "170": 363, "5222": 363, "3725": 363, "9288": 363, "9837": 363, "1416": 363, "1099": 363, "173": 363, "8620": 363, "8475": 363, "174": 363, "1807": 363, "4375": 363, "1148": 363, "0645": 363, "2751": 363, "8313": 363, "177": 363, "9286": 363, "9770": 363, "178": 363, "5735": 363, "2837": 363, "179": 363, "2926": 363, "9489": 363, "180": 363, "1507": 363, "181": 363, "8724": 363, "3567": 363, "182": 363, "3574": 363, "6140": 363, "183": 363, "7895": 363, "2518": 363, "184": 363, "6146": 363, "185": [363, 365], "8776": 363, "7358": 363, "186": 363, "3722": 363, "8428": 363, "187": 363, "7955": 363, "188": 363, "0092": 363, "7106": 363, "829": 363, "189": 363, "2264": 363, "6919": 363, "190": 363, "1438": 363, "1362": 363, "191": 363, "0618": 363, "8217": 363, "9420": 363, "6765": 363, "193": 363, "7745": 363, "0709": 363, "194": 363, "9478": 363, "6867": 363, "195": 363, "6507": 363, "6225": 363, "196": 363, "2244": 363, "2195": 363, "197": [363, 365], "5385": 363, "9263": 363, "198": 363, "1878": 363, "2374": 363, "8054": 363, "3504": 363, "557": 363, "0766": 363, "201": 363, "2011": 363, "8393": 363, "202": 363, "0803": 363, "7815": 363, "203": 363, "8363": 363, "2460": 363, "204": 363, "8643": 363, "2191": 363, "593": 363, "205": [363, 368], "0773": 363, "1343": 363, "206": 363, "8657": 363, "207": 363, "9304": 363, "7584": 363, "208": 363, "8752": 363, "2307": 363, "209": 363, "5250": 363, "4869": 363, "7837": 363, "5762": 363, "211": 363, "38it": 363, "6661": 363, "8600": 363, "2502": 363, "1752": 363, "3075": 363, "8871": 363, "214": 363, "9406": 363, "8090": 363, "215": 363, "6291": 363, "8923": 363, "876": 363, "216": 363, "9504": 363, "21e": 363, "217": 363, "7431": 363, "7880": 363, "218": 363, "4463": 363, "5432": 363, "219": 363, "3793": 363, "3313": 363, "220": 363, "8843": 363, "0369": 363, "065": 363, "221": 363, "4828": 363, "8391": 363, "222": 363, "6265": 363, "2913": 363, "947": 363, "5541": 363, "1252": 363, "02it": 363, "7342": 363, "2396": 363, "225": 363, "5936": 363, "1924": 363, "226": 363, "9975": 363, "2045": 363, "227": 363, "8367": 363, "9540": 363, "228": 363, "7259": 363, "6743": 363, "229": [363, 365], "00it": 363, "4827": 363, "7528": 363, "230": 363, "7361": 363, "8756": 363, "231": 363, "09it": 363, "7646": 363, "1116": 363, "232": 363, "5426": 363, "8385": 363, "15it": 363, "5662": 363, "8585": 363, "234": 363, "8234": 363, "7930": 363, "235": 363, "2648": 363, "9309": 363, "236": 363, "6817": 363, "237": 363, "0943": 363, "1533": 363, "238": 363, "3045": 363, "0483": 363, "239": 363, "6415": 363, "0201": 363, "241": [363, 365], "4437": 363, "4365": 363, "242": 363, "0358": 363, "4943": 363, "243": 363, "1272": 363, "5003": 363, "1180": 363, "2637": 363, "245": 363, "7197": 363, "0873": 363, "246": 363, "2917": 363, "247": 363, "0160": 363, "0738": 363, "248": 363, "3689": 363, "0120": 363, "249": 363, "5570": 363, "0475": 363, "250": 363, "4423": 363, "2220": 363, "6803": 363, "252": 363, "1465": 363, "7214": 363, "8801": 363, "7034": 363, "254": 363, "9136": 363, "4076": 363, "7589": 363, "5013": 363, "8150": 363, "2241": 363, "257": 363, "0753": 363, "8081": 363, "1951": 363, "8314": 363, "259": 363, "0038": 363, "260": 363, "0889": 363, "4616": 363, "261": [363, 368], "0655": 363, "262": 363, "8333": 363, "9476": 363, "263": 363, "7554": 363, "3798": 363, "264": 363, "3717": 363, "3947": 363, "529": 363, "265": 363, "3060": 363, "6495": 363, "7467": 363, "8889": 363, "267": 363, "8457": 363, "591": 363, "7137": 363, "0536": 363, "771": 363, "269": 363, "1651": 363, "388": 363, "270": 363, "8246": 363, "5709": 363, "281": 363, "271": 363, "7502": 363, "0521": 363, "032": 363, "272": 363, "5475": 363, "7253": 363, "273": 363, "2856": 363, "7130": 363, "274": 363, "2778": 363, "4122": 363, "8368": 363, "1841": 363, "9622": 363, "1603": 363, "003e": 363, "277": 363, "0247": 363, "346": 363, "278": 363, "2238": 363, "6418": 363, "279": 363, "0626": 363, "2538": 363, "280": 363, "0149": 363, "7380": 363, "2167": 363, "8911": 363, "282": 363, "8725": 363, "1983": 363, "8142": 363, "3709": 363, "284": 363, "4989": 363, "285": 363, "6464": 363, "6210": 363, "286": 363, "9726": 363, "0820": 363, "287": 363, "6975": 363, "9091": 363, "4926": 363, "4791": 363, "289": [363, 368], "0905": 363, "3500": 363, "290": 363, "2287": 363, "291": 363, "9918": 363, "5543": 363, "9245": 363, "6444": 363, "631": 363, "293": 363, "0448": 363, "4769": 363, "8566": 363, "7208": 363, "295": 363, "0966": 363, "296": 363, "5303": 363, "1537": 363, "023": 363, "297": 363, "2682": 363, "564": 363, "298": 363, "4318": 363, "5063": 363, "299": 363, "7475": 363, "4190": 363, "8186": 363, "5077": 363, "301": 363, "1883": 363, "5291": 363, "472": 363, "302": 363, "3998": 363, "303": 363, "3622": 363, "0930": 363, "626": 363, "304": 363, "9500": 363, "5664": 363, "305": 363, "5697": 363, "3024": 363, "306": 363, "3117": 363, "0052": 363, "006": 363, "0981": 363, "9312": 363, "3873": 363, "309": 363, "0411": 363, "2650": 363, "1656": 363, "0228": 363, "004": 363, "311": 363, "1196": 363, "2478": 363, "312": 363, "7353": 363, "0812": 363, "313": 363, "3022": 363, "758": 363, "314": 363, "1406": 363, "4626": 363, "315": 363, "2156": 363, "851": 363, "316": 363, "1953": 363, "3774": 363, "317": 363, "6385": 363, "9917": 363, "318": 363, "2764": 363, "905": 363, "319": 363, "6391": 363, "9317": 363, "9748": 363, "2679": 363, "321": 363, "8495": 363, "5125": 363, "8177": 363, "6602": 363, "323": 363, "0704": 363, "5776": 363, "324": 363, "9833": [363, 367], "1339": 363, "402": 363, "325": 363, "1238": 363, "326": 363, "9299": 363, "0227": 363, "327": 363, "7727": 363, "1607": 363, "336": 363, "328": 363, "3958": 363, "3223": 363, "763": 363, "329": 363, "4742": 363, "1797": 363, "330": 363, "0144": 363, "0085": 363, "791": 363, "331": 363, "8284": 363, "0428": 363, "332": 363, "7365": 363, "333": 363, "4566": 363, "0781": 363, "086": 363, "334": 363, "3355": 363, "0230": 363, "335": 363, "9346": 363, "0423": 363, "076": 363, "3711": 363, "1335": 363, "6855": 363, "337": 363, "0304": 363, "0023": 363, "8459": 363, "9998": 363, "4399": 363, "339": 363, "2303": 363, "1346": 363, "340": 363, "2915": 363, "7116": 363, "341": 363, "5560": 363, "0487": 363, "5119": 363, "061": 363, "343": 363, "3305": 363, "3705": 363, "957": 363, "344": 363, "6068": 363, "345": 363, "5731": 363, "3897": 363, "0376": 363, "347": 363, "0434": 363, "012": 363, "1300": 363, "1215": 363, "0968": 363, "0885": 363, "350": 363, "1348": 363, "0073": 363, "5052": 363, "4184": 363, "2817": 363, "8887": 363, "353": 363, "4779": 363, "1009": 363, "354": 363, "0604": 363, "599": 363, "355": 363, "4486": 363, "1176": 363, "656": 363, "356": 363, "2436": 363, "0668": 363, "8849": 363, "0012": 363, "358": 363, "7511": 363, "8804": 363, "359": 363, "8870": 363, "6728": 363, "360": 363, "8841": 363, "5508": 363, "361": 363, "5242": 363, "0013": 363, "6185": 363, "363": 363, "1378": 363, "0204": 363, "0355": 363, "685": 363, "365": 363, "4884": 363, "0231": 363, "0014": 363, "6793": 363, "367": 363, "9834": 363, "863": 363, "368": 363, "6709": 363, "462": 363, "369": 363, "5199": 363, "9790": 363, "370": 363, "9401": 363, "7802": 363, "371": 363, "6723": 363, "372": 363, "2678": 363, "6201": 363, "373": 363, "2184": 363, "7385": 363, "374": 363, "6344": 363, "617": 363, "375": 363, "9945": 363, "0772": 363, "567": 363, "7576": 363, "0398": 363, "377": 363, "3396": 363, "0022": 363, "094": 363, "378": 363, "3073": 363, "4018": 363, "379": 363, "1869": 363, "380": 363, "0481": 363, "1117": 363, "381": 363, "6823": 363, "981": 363, "8305": 363, "0210": 363, "383": 363, "4908": 363, "0272": 363, "538": 363, "3267": 363, "0111": 363, "7965": 363, "1796": 363, "0039": 363, "5396": 363, "386": 363, "3757": 363, "0490": 363, "387": 363, "1394": 363, "4187": 363, "2986": 363, "7954": 363, "1274": 363, "0063": 363, "813": 363, "390": 363, "8706": 363, "0114": 363, "391": 363, "6922": 363, "2423": 363, "392": 363, "9115": 363, "2602": 363, "393": 363, "2449": 363, "0783": 363, "394": 363, "0631": 363, "0057": 363, "7444": 363, "395": 363, "3339": 363, "0167": 363, "396": 363, "4806": 363, "397": 363, "4171": 363, "067": 363, "398": 363, "2618": 363, "5809": 363, "399": 363, "0054": 363, "3364": 363, "8733": 363, "0184": 363, "401": 363, "9137": 363, "0113": 363, "025": 363, "0386": 363, "0625": 363, "403": 363, "1332": 363, "0582": 363, "7816": 363, "404": 363, "8341": 363, "0941": 363, "854": 363, "405": 363, "8615": 363, "588": 363, "406": 363, "3849": 363, "008": 363, "9395": 363, "0765": 363, "055": 363, "408": 363, "2685": 363, "2235": 363, "688": 363, "409": 363, "3052": 363, "4249": 363, "410": 363, "6806": 363, "6383": 363, "3721": 363, "9981": 363, "412": 363, "1862": 363, "822": 363, "413": 363, "9811": 363, "0171": 363, "013": 363, "414": 363, "0252": 363, "0049": 363, "6205": 363, "415": 363, "1108": 363, "4921": 363, "9142": 363, "8130": 363, "417": 363, "1725": 363, "0036": 363, "3196": 363, "418": 363, "7795": 363, "0242": 363, "799": 363, "419": 363, "7737": 363, "0138": 363, "420": 363, "1462": 363, "0053": 363, "421": 363, "9226": 363, "6139": 363, "9889": 363, "0403": 363, "423": 363, "6194": 363, "0032": 363, "3989": 363, "0104": 363, "425": 363, "9960": 363, "0009": 363, "6009": 363, "426": 363, "2697": 363, "0914": 363, "427": 363, "1114": 363, "428": 363, "9862": 363, "1932": 363, "429": 363, "0637": 363, "0623": 363, "082": 363, "430": 363, "9906": 363, "2031": 363, "431": 363, "9948": 363, "0895": 363, "1970": 363, "0256": 363, "4231": 363, "0449": 363, "644": 363, "434": 363, "1039": 363, "1973": 363, "435": 363, "4561": 363, "1225": 363, "436": 363, "0211": 363, "2125": 363, "437": 363, "3866": 363, "0050": 363, "7202": 363, "438": 363, "6388": 363, "0072": 363, "439": 363, "1187": 363, "0015": 363, "5116": 363, "440": 363, "0432": 363, "0025": 363, "7809": 363, "1925": 363, "0103": 363, "9570": 363, "443": 363, "0871": 363, "5601": 363, "0165": 363, "0047": 363, "6061": 363, "2746": 363, "0027": 363, "7887": 363, "446": 363, "1835": 363, "0035": 363, "855": 363, "447": 363, "8420": 363, "548": 363, "2653": 363, "0126": 363, "9736": 363, "449": 363, "0594": 363, "0119": 363, "6196": 363, "450": 363, "4509": 363, "0373": 363, "451": 363, "0620": 363, "452": 363, "6898": 363, "3235": 363, "687": 363, "5879": 363, "454": 363, "8406": 363, "0694": 363, "8259": 363, "0235": 363, "8500": 363, "0024": 363, "458": 363, "2027": 363, "0894": 363, "459": 363, "5966": 363, "460": 363, "6942": 363, "0016": 363, "4254": 363, "6703": 363, "0145": 363, "8124": 363, "0218": 363, "9196": 363, "0188": 363, "8986": 363, "0884": 363, "0084": 363, "5624": 363, "465": 363, "8862": 363, "0006": 363, "5384": 363, "466": 363, "5837": 363, "467": 363, "8954": 363, "0101": 363, "6751": 363, "468": 363, "8063": 363, "0122": 363, "9635": 363, "469": 363, "0692": 363, "4216": 363, "470": 363, "1227": 363, "0586": 363, "162e": 363, "471": 363, "9690": 363, "4166": 363, "6324": 363, "473": 363, "0778": 363, "8548": 363, "0017": 363, "4408": 363, "8125": 363, "1515": 363, "476": 363, "2733": 363, "0044": 363, "2836": 363, "477": 363, "7497": 363, "7681": 363, "478": 363, "8547": 363, "0105": 363, "7212": 363, "9848": 363, "0019": 363, "6498": 363, "1987": 363, "0011": 363, "5473": 363, "481": 363, "8991": 363, "6091": 363, "9189": 363, "5771": 363, "6781": 363, "7542": 363, "5959": 363, "0064": 363, "485": 363, "2547": 363, "486": 363, "0636": 363, "547": 363, "487": 363, "0065": 363, "1694": 363, "0083": 363, "5759": 363, "0493": 363, "0021": 363, "7805": 363, "490": 363, "0950": 363, "497": 363, "491": 363, "9717": 363, "3672": 363, "492": 363, "0207": 363, "8266": 363, "5365": 363, "494": 363, "2623": 363, "5078": 363, "495": 363, "4545": 363, "09636": 363, "8754": 363, "0010": 363, "498": 363, "0031": 363, "8269": 363, "499": 363, "6642": 363, "2284": 363, "501": 363, "9130": 363, "0008": 363, "502": 363, "7624": 363, "0056": 363, "3858": 363, "504": 363, "0890": 363, "0042": 363, "505": 363, "7505": 363, "2157": 363, "506": 363, "8394": 363, "3413": 363, "507": 363, "9609": 363, "0041": 363, "6905": 363, "508": 363, "8467": 363, "4409": 363, "509": 363, "510": 363, "8128": 363, "3559": 363, "511": 363, "1479": 363, "0264": 363, "1589": 363, "566": 363, "513": 363, "2756": 363, "0046": 363, "5266": 363, "514": 363, "9873": 363, "0112": 363, "9314": 363, "515": 363, "3791": 363, "0721": 363, "516": 363, "4580": 363, "0758": 363, "6114": 363, "517": 363, "2431": 363, "518": 363, "1958": 363, "5553": 363, "8924": 363, "0097": 363, "520": 363, "3737": 363, "0234": 363, "521": 363, "9125": 363, "4623": 363, "3230": 363, "0589": 363, "3784": 363, "523": 363, "9482": 363, "0051": 363, "524": 363, "1979": 363, "0045": 363, "6401": 363, "525": 363, "1588": 363, "0048": 363, "6255": 363, "526": 363, "6084": 363, "3477": 363, "1475": 363, "0209": 363, "528": 363, "7611": 363, "1040": 363, "0099": 363, "0173": 363, "643": 363, "530": 363, "8189": 363, "4358": 363, "531": 363, "9897": 363, "532": 363, "1548": 363, "9751": 363, "533": 363, "6362": 363, "7495": 363, "534": 363, "1749": 363, "9513": 363, "535": 363, "7708": 363, "0371": 363, "536": 363, "2649": 363, "0437": 363, "537": 363, "5491": 363, "0276": 363, "6426": 363, "7294": 363, "078e": 363, "539": 363, "9928": 363, "540": 363, "7937": 363, "0124": 363, "9664": 363, "541": 363, "3342": 363, "542": 363, "2046": 363, "5496": 363, "0956": 363, "0059": 363, "9028": 363, "5843": 363, "546": 363, "0674": 363, "0178": 363, "797": 363, "2815": 363, "0599": 363, "1587": 363, "9276": 363, "8228": 363, "6164": 363, "551": 363, "6850": 363, "9167": 363, "3092": 363, "0670": 363, "9177": 363, "553": 363, "1599": 363, "0043": 363, "554": 363, "6367": 363, "555": 363, "3657": 363, "556": 363, "6694": 363, "2622": 363, "0372": 363, "4841": 363, "558": 363, "2707": 363, "757": 363, "559": 363, "2267": 363, "5415": 363, "560": 363, "4556": 363, "0163": 363, "561": 363, "0809": 363, "6262": 363, "562": 363, "0278": 363, "1112": 363, "6155": 363, "565": 363, "1427": 363, "624": 363, "7870": 363, "9490": 363, "0439": 363, "8796": 363, "568": 363, "8026": 363, "612": 363, "569": 363, "3147": 363, "8486": 363, "570": 363, "7917": 363, "0129": 363, "571": 363, "9553": 363, "0020": 363, "6871": 363, "572": 363, "3132": 363, "0159": 363, "8646": 363, "573": 363, "5320": 363, "0269": 363, "574": 363, "2955": 363, "0245": 363, "3347": 363, "0179": 363, "9718": 363, "1629": 363, "804": 363, "577": 363, "4164": 363, "0070": 363, "4335": 363, "578": 363, "579": 363, "3049": 363, "9063": 363, "580": 363, "8785": 363, "3295": 363, "5184": 363, "0546": 363, "582": 363, "4589": 363, "583": 363, "4697": 363, "2476": 363, "584": 363, "2397": 363, "585": 363, "4953": 363, "1775": 363, "2258": 363, "0110": 363, "7671": 363, "587": 363, "3981": 363, "8590": 363, "0007": 363, "589": 363, "9820": 363, "4221": 363, "590": 363, "1293": 363, "0116": 363, "868": 363, "1675": 363, "5931": 363, "592": 363, "2910": 363, "5219": 363, "2124": 363, "1730": 363, "737": 363, "594": 363, "2914": 363, "0206": 363, "595": 363, "0172": 363, "3982": 363, "0945": 363, "0121": 363, "4789": 363, "597": 363, "3805": 363, "4074": 363, "598": 363, "3310": 363, "5065": 363, "6028": 363, "6316": 363, "6724": 363, "6523": 363, "601": 363, "0136": 363, "4298": 363, "602": [363, 365], "3524": 363, "2629": 363, "603": 363, "2635": 363, "7839": 363, "604": 363, "6041": 363, "8027": 363, "4170": 363, "4675": 363, "606": 363, "3153": 363, "9316": 363, "607": 363, "0649": 363, "9722": 363, "7989": 363, "0329": 363, "609": 363, "1976": 363, "6852": 363, "610": 363, "4793": 363, "1255": 363, "611": 363, "4581": 363, "0394": 363, "2047": 363, "0326": 363, "613": 363, "8967": 363, "8619": 363, "614": 363, "5906": 363, "6491": 363, "615": 363, "6634": 363, "4394": 363, "616": 363, "0624": 363, "0061": 363, "5676": 363, "3259": 363, "0131": 363, "7733": 363, "618": 363, "7515": 363, "0189": 363, "5575": 363, "619": 363, "9313": 363, "6286": 363, "620": 363, "4325": 363, "7832": 363, "621": 363, "1134": 363, "622": 363, "4572": 363, "0500": 363, "5838": 363, "623": 363, "3818": 363, "8623": 363, "1253": 363, "6622": 363, "subject": 363, "explain": 364, "semat": 364, "r3mtransform": 364, "env_transform": [364, 368], "s3": 364, "amazonaw": 364, "r3m_50": 364, "374m": 364, "5m": 364, "108mb": 364, "9m": 364, "119mb": 364, "2m": 364, "102mb": 364, "6m": 364, "106mb": 364, "0m": 364, "107mb": 364, "4m": 364, "101mb": 364, "115m": 364, "2mb": 364, "131m": 364, "0mb": 364, "148m": 364, "163m": 364, "120mb": 364, "176m": 364, "114mb": 364, "187m": 364, "103mb": 364, "198m": 364, "9mb": 364, "212m": 364, "221m": 364, "7mb": 364, "229m": 364, "6mb": 364, "246m": 364, "262m": 364, "8mb": 364, "277m": 364, "109mb": 364, "288m": 364, "298m": 364, "311m": 364, "328m": 364, "342m": 364, "352m": 364, "360m": 364, "3mb": 364, "wiser": 364, "_storag": [364, 365], "pull": 365, "batteri": 365, "filesystem": 365, "buffer_list": 365, "lowest": 365, "medium": 365, "buffer_lazytensor": 365, "buffer_lazymemmap": 365, "tempdir": 365, "tmpkvsg_5rf": 365, "fullest": 365, "mydata": 365, "background": 365, "question": [365, 367], "_i": 365, "artifici": 365, "0893e": 365, "hamper": 365, "she": 365, "pars": 365, "proport": 365, "hist": 365, "barcontain": 365, "artist": 365, "reappear": 365, "unfold": 365, "problemat": 365, "4th": 365, "794": 365, "ret": 365, "_sampl": 365, "decorated_fun": 365, "1182": 365, "_transform": 365, "1541": [365, 368], "1067": 365, "2998": 365, "3123": 365, "rep": 365, "tensorlist": 365, "prioritizedslicesampl": 365, "tensordictmaxvaluewrit": 365, "demo": 367, "icml": 367, "vmoen": 367, "fb": 367, "invest": 367, "platform": 367, "media": 367, "predominantli": 367, "tensordict1": 367, "tensordict2": 367, "tensordict_sampl": 367, "_sampler": 367, "_sum_tre": 367, "modulenotfounderror": 367, "06984967738389969": 367, "28791671991348267": 367, "noopresetenv": [367, 368], "6400": 367, "backbone_modul": 367, "params_expand": 367, "exec_sequ": 367, "tensordict_exp": 367, "base_modul": 367, "0137": 367, "1524": 367, "0641": 367, "viewbackward0": 367, "asstridedbackward0": 367, "8728": 367, "1334": 367, "3494": 367, "6887": 367, "6402": 367, "_safetanhbackward": 367, "1132": 367, "1762": 367, "3430": 367, "2668": 367, "2918": 367, "6239": 367, "roughli": 367, "tensordicts_prealloc": 367, "tensordicts_stack": 367, "tensordict_rollout": [367, 368], "disclaim": 367, "concatmodul": 367, "loss_td": 367, "year": 367, "roadmap": 367, "compris": 367, "contributor": 367, "curiou": 367, "nascent": 367, "unsupervis": 368, "unifi": 368, "_build_env": 368, "amidar": 368, "assault": 368, "9882": 368, "deserv": 368, "__episode__": 368, "__trajectory__": 368, "void": 368, "reproduct": 368, "tensordict_tprim": 368, "2562": 368, "_rollout_stop_earli": 368, "2631": 368, "1224": 368, "err": 368, "1198": 368, "_call_modul": 368, "1141": 368, "1560": 368, "imshow": 368, "wrapper1": 368, "wrapper2": 368, "obviou": 368, "truth": 368, "env0": 368, "env_transformed_bi": 368, "stanc": 368, "transformeddistribut": 368, "base_dist": 368, "concat": 368, "mofidi": 368, "transformedenviron": 368, "moderet": 368, "computation": 368, "legitim": 368, "incom": 368, "amongst": 368, "has_cuda": 368, "wor": 368, "convention": 368, "markovian": 368, "constain": 368, "bar_": 368, "get_someth": 368, "aargh": 368, "foo_list": 368, "parallen": 368, "particularili": 368, "evolv": 368, "steadi": 368, "approx": 368, "_extra_st": 368, "observation_ssq": 368, "observation_sum": 368, "dispach": 368, "absor": 368, "4066": 368}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "RayCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[20, 1, 1, "", "add_collectors"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "local_policy"], [20, 1, 1, "", "remote_collectors"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "stop_remote_collectors"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "BinaryDiscreteTensorSpec"], [24, 0, 1, "", "BoundedTensorSpec"], [25, 0, 1, "", "CompositeSpec"], [26, 0, 1, "", "DiscreteTensorSpec"], [27, 0, 1, "", "LazyStackedCompositeSpec"], [28, 0, 1, "", "LazyStackedTensorSpec"], [29, 0, 1, "", "MultiDiscreteTensorSpec"], [30, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [31, 0, 1, "", "MultiStep"], [32, 0, 1, "", "NonTensorSpec"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [61, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "clear_device_"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "flatten"], [23, 1, 1, "", "implements_for_spec"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "reshape"], [23, 1, 1, "", "squeeze"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "to_one_hot"], [23, 1, 1, "", "to_one_hot_spec"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "unflatten"], [23, 1, 1, "", "view"], [23, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "flatten"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "reshape"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "unflatten"], [24, 1, 1, "", "view"], [24, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "empty"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "get"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_empty"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "items"], [25, 1, 1, "", "keys"], [25, 1, 1, "", "lock_"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unlock_"], [25, 1, 1, "", "values"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[31, 1, 1, "", "add_module"], [31, 1, 1, "", "apply"], [31, 1, 1, "", "bfloat16"], [31, 1, 1, "", "buffers"], [31, 1, 1, "", "children"], [31, 1, 1, "", "compile"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 1, 1, "", "double"], [31, 1, 1, "", "eval"], [31, 1, 1, "", "extra_repr"], [31, 1, 1, "", "float"], [31, 1, 1, "", "forward"], [31, 1, 1, "", "get_buffer"], [31, 1, 1, "", "get_extra_state"], [31, 1, 1, "", "get_parameter"], [31, 1, 1, "", "get_submodule"], [31, 1, 1, "", "half"], [31, 1, 1, "", "ipu"], [31, 1, 1, "", "load_state_dict"], [31, 1, 1, "", "modules"], [31, 1, 1, "", "named_buffers"], [31, 1, 1, "", "named_children"], [31, 1, 1, "", "named_modules"], [31, 1, 1, "", "named_parameters"], [31, 1, 1, "", "parameters"], [31, 1, 1, "", "register_backward_hook"], [31, 1, 1, "", "register_buffer"], [31, 1, 1, "", "register_forward_hook"], [31, 1, 1, "", "register_forward_pre_hook"], [31, 1, 1, "", "register_full_backward_hook"], [31, 1, 1, "", "register_full_backward_pre_hook"], [31, 1, 1, "", "register_load_state_dict_post_hook"], [31, 1, 1, "", "register_module"], [31, 1, 1, "", "register_parameter"], [31, 1, 1, "", "register_state_dict_pre_hook"], [31, 1, 1, "", "requires_grad_"], [31, 1, 1, "", "set_extra_state"], [31, 1, 1, "", "share_memory"], [31, 1, 1, "", "state_dict"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_empty"], [31, 1, 1, "", "train"], [31, 1, 1, "", "type"], [31, 1, 1, "", "xpu"], [31, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_memmap"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "memmap"], [34, 1, 1, "", "memmap_"], [34, 1, 1, "", "memmap_like"], [34, 3, 1, "", "names"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "dumps"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "loads"], [35, 1, 1, "", "sample"], [35, 3, 1, "", "sampler"], [35, 1, 1, "", "set_sampler"], [35, 1, 1, "", "set_storage"], [35, 1, 1, "", "set_writer"], [35, 3, 1, "", "storage"], [35, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_memmap"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "memmap"], [36, 1, 1, "", "memmap_"], [36, 1, 1, "", "memmap_like"], [36, 3, 1, "", "names"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "dumps"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "loads"], [38, 1, 1, "", "sample"], [38, 3, 1, "", "sampler"], [38, 1, 1, "", "set_sampler"], [38, 1, 1, "", "set_storage"], [38, 1, 1, "", "set_writer"], [38, 3, 1, "", "storage"], [38, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_memmap"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "memmap"], [39, 1, 1, "", "memmap_"], [39, 1, 1, "", "memmap_like"], [39, 3, 1, "", "names"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"], [41, 3, 1, "", "sampler"], [41, 1, 1, "", "set_sampler"], [41, 1, 1, "", "set_storage"], [41, 1, 1, "", "set_writer"], [41, 3, 1, "", "storage"], [41, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "sample"], [42, 3, 1, "", "sampler"], [42, 1, 1, "", "set_sampler"], [42, 1, 1, "", "set_storage"], [42, 1, 1, "", "set_writer"], [42, 3, 1, "", "storage"], [42, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "AtariDQNExperienceReplay"], [53, 0, 1, "", "BaseDatasetExperienceReplay"], [54, 0, 1, "", "D4RLExperienceReplay"], [55, 0, 1, "", "GenDGRLExperienceReplay"], [56, 0, 1, "", "MinariExperienceReplay"], [57, 0, 1, "", "OpenMLExperienceReplay"], [58, 0, 1, "", "OpenXExperienceReplay"], [59, 0, 1, "", "RobosetExperienceReplay"], [60, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 3, 1, "", "data_path"], [52, 3, 1, "", "data_path_root"], [52, 1, 1, "", "delete"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "preprocess"], [52, 1, 1, "", "sample"], [52, 3, 1, "", "sampler"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"], [52, 3, 1, "", "storage"], [52, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 3, 1, "", "data_path"], [53, 3, 1, "", "data_path_root"], [53, 1, 1, "", "delete"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "preprocess"], [53, 1, 1, "", "sample"], [53, 3, 1, "", "sampler"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"], [53, 3, 1, "", "storage"], [53, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 3, 1, "", "data_path"], [54, 3, 1, "", "data_path_root"], [54, 1, 1, "", "delete"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "preprocess"], [54, 1, 1, "", "sample"], [54, 3, 1, "", "sampler"], [54, 1, 1, "", "set_sampler"], [54, 1, 1, "", "set_storage"], [54, 1, 1, "", "set_writer"], [54, 3, 1, "", "storage"], [54, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 3, 1, "", "data_path"], [55, 3, 1, "", "data_path_root"], [55, 1, 1, "", "delete"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "preprocess"], [55, 1, 1, "", "sample"], [55, 3, 1, "", "sampler"], [55, 1, 1, "", "set_sampler"], [55, 1, 1, "", "set_storage"], [55, 1, 1, "", "set_writer"], [55, 3, 1, "", "storage"], [55, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 3, 1, "", "data_path"], [56, 3, 1, "", "data_path_root"], [56, 1, 1, "", "delete"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "preprocess"], [56, 1, 1, "", "sample"], [56, 3, 1, "", "sampler"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 3, 1, "", "storage"], [56, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 3, 1, "", "data_path"], [57, 3, 1, "", "data_path_root"], [57, 1, 1, "", "delete"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "preprocess"], [57, 1, 1, "", "sample"], [57, 3, 1, "", "sampler"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 3, 1, "", "storage"], [57, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 3, 1, "", "data_path"], [58, 3, 1, "", "data_path_root"], [58, 1, 1, "", "delete"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "preprocess"], [58, 1, 1, "", "sample"], [58, 3, 1, "", "sampler"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 3, 1, "", "storage"], [58, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 3, 1, "", "data_path"], [59, 3, 1, "", "data_path_root"], [59, 1, 1, "", "delete"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "preprocess"], [59, 1, 1, "", "sample"], [59, 3, 1, "", "sampler"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"], [59, 3, 1, "", "storage"], [59, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[60, 1, 1, "", "add"], [60, 1, 1, "", "append_transform"], [60, 3, 1, "", "data_path"], [60, 3, 1, "", "data_path_root"], [60, 1, 1, "", "delete"], [60, 1, 1, "", "dumps"], [60, 1, 1, "", "empty"], [60, 1, 1, "", "extend"], [60, 1, 1, "", "insert_transform"], [60, 1, 1, "", "loads"], [60, 1, 1, "", "preprocess"], [60, 1, 1, "", "sample"], [60, 3, 1, "", "sampler"], [60, 1, 1, "", "set_sampler"], [60, 1, 1, "", "set_storage"], [60, 1, 1, "", "set_writer"], [60, 3, 1, "", "storage"], [60, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[62, 0, 1, "", "ImmutableDatasetWriter"], [63, 0, 1, "", "LazyMemmapStorage"], [64, 0, 1, "", "LazyTensorStorage"], [65, 0, 1, "", "ListStorage"], [66, 0, 1, "", "PrioritizedSampler"], [67, 0, 1, "", "PrioritizedSliceSampler"], [68, 0, 1, "", "RandomSampler"], [69, 0, 1, "", "ReplayBufferEnsemble"], [70, 0, 1, "", "RoundRobinWriter"], [71, 0, 1, "", "Sampler"], [72, 0, 1, "", "SamplerEnsemble"], [73, 0, 1, "", "SamplerWithoutReplacement"], [74, 0, 1, "", "SliceSampler"], [75, 0, 1, "", "SliceSamplerWithoutReplacement"], [76, 0, 1, "", "Storage"], [77, 0, 1, "", "StorageEnsemble"], [78, 0, 1, "", "TensorDictMaxValueWriter"], [79, 0, 1, "", "TensorDictRoundRobinWriter"], [80, 0, 1, "", "TensorStorage"], [81, 0, 1, "", "Writer"], [82, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[62, 1, 1, "", "add"], [62, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[64, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[66, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[67, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "sample"], [69, 3, 1, "", "sampler"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 3, 1, "", "storage"], [69, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[70, 1, 1, "", "add"], [70, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[76, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[77, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[78, 1, 1, "", "add"], [78, 1, 1, "", "extend"], [78, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[79, 1, 1, "", "add"], [79, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[80, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[81, 1, 1, "", "add"], [81, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[82, 1, 1, "", "add"], [82, 1, 1, "", "extend"]], "torchrl.envs": [[83, 2, 1, "", "BraxEnv"], [84, 2, 1, "", "BraxWrapper"], [85, 2, 1, "", "DMControlEnv"], [86, 2, 1, "", "DMControlWrapper"], [87, 0, 1, "", "EnvBase"], [88, 0, 1, "", "EnvCreator"], [89, 0, 1, "", "EnvMetaData"], [90, 2, 1, "", "GymEnv"], [91, 0, 1, "", "GymLikeEnv"], [92, 2, 1, "", "GymWrapper"], [93, 2, 1, "", "HabitatEnv"], [94, 2, 1, "", "IsaacGymEnv"], [95, 2, 1, "", "IsaacGymWrapper"], [96, 2, 1, "", "JumanjiEnv"], [97, 2, 1, "", "JumanjiWrapper"], [98, 2, 1, "", "MOGymEnv"], [99, 2, 1, "", "MOGymWrapper"], [100, 2, 1, "", "MarlGroupMapType"], [101, 2, 1, "", "MeltingpotEnv"], [102, 2, 1, "", "MeltingpotWrapper"], [103, 2, 1, "", "ModelBasedEnvBase"], [104, 2, 1, "", "MultiThreadedEnv"], [105, 2, 1, "", "MultiThreadedEnvWrapper"], [106, 2, 1, "", "OpenMLEnv"], [107, 0, 1, "", "ParallelEnv"], [108, 2, 1, "", "PettingZooEnv"], [109, 2, 1, "", "PettingZooWrapper"], [110, 2, 1, "", "RoboHiveEnv"], [111, 2, 1, "", "SMACv2Env"], [112, 2, 1, "", "SMACv2Wrapper"], [113, 0, 1, "", "SerialEnv"], [114, 2, 1, "", "VmasEnv"], [115, 2, 1, "", "VmasWrapper"], [116, 2, 1, "", "check_marl_grouping"], [117, 2, 1, "", "gym_backend"], [103, 1, 1, "", "rand_step"], [103, 1, 1, "", "reset"], [103, 1, 1, "", "rollout"], [120, 2, 1, "", "set_gym_backend"], [103, 1, 1, "", "set_seed"], [103, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[87, 3, 1, "", "action_key"], [87, 3, 1, "", "action_keys"], [87, 3, 1, "", "action_spec"], [87, 1, 1, "", "add_module"], [87, 1, 1, "", "add_truncated_keys"], [87, 1, 1, "", "append_transform"], [87, 1, 1, "", "apply"], [87, 3, 1, "", "batch_locked"], [87, 3, 1, "", "batch_size"], [87, 1, 1, "", "bfloat16"], [87, 1, 1, "", "buffers"], [87, 1, 1, "", "children"], [87, 1, 1, "", "compile"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 3, 1, "", "done_key"], [87, 3, 1, "", "done_keys"], [87, 3, 1, "", "done_keys_groups"], [87, 3, 1, "", "done_spec"], [87, 1, 1, "", "double"], [87, 1, 1, "", "empty_cache"], [87, 1, 1, "", "eval"], [87, 1, 1, "", "extra_repr"], [87, 1, 1, "", "fake_tensordict"], [87, 1, 1, "", "float"], [87, 1, 1, "", "forward"], [87, 3, 1, "", "full_action_spec"], [87, 3, 1, "", "full_done_spec"], [87, 3, 1, "", "full_reward_spec"], [87, 3, 1, "", "full_state_spec"], [87, 1, 1, "", "get_buffer"], [87, 1, 1, "", "get_extra_state"], [87, 1, 1, "", "get_parameter"], [87, 1, 1, "", "get_submodule"], [87, 1, 1, "", "half"], [87, 3, 1, "", "input_spec"], [87, 1, 1, "", "ipu"], [87, 1, 1, "", "load_state_dict"], [87, 1, 1, "", "maybe_reset"], [87, 1, 1, "", "modules"], [87, 1, 1, "", "named_buffers"], [87, 1, 1, "", "named_children"], [87, 1, 1, "", "named_modules"], [87, 1, 1, "", "named_parameters"], [87, 3, 1, "", "observation_spec"], [87, 3, 1, "", "output_spec"], [87, 1, 1, "", "parameters"], [87, 1, 1, "", "rand_action"], [87, 1, 1, "id0", "rand_step"], [87, 1, 1, "", "register_backward_hook"], [87, 1, 1, "", "register_buffer"], [87, 1, 1, "", "register_forward_hook"], [87, 1, 1, "", "register_forward_pre_hook"], [87, 1, 1, "", "register_full_backward_hook"], [87, 1, 1, "", "register_full_backward_pre_hook"], [87, 1, 1, "", "register_gym"], [87, 1, 1, "", "register_load_state_dict_post_hook"], [87, 1, 1, "", "register_module"], [87, 1, 1, "", "register_parameter"], [87, 1, 1, "", "register_state_dict_pre_hook"], [87, 1, 1, "", "requires_grad_"], [87, 1, 1, "id1", "reset"], [87, 3, 1, "", "reset_keys"], [87, 3, 1, "", "reward_key"], [87, 3, 1, "", "reward_keys"], [87, 3, 1, "", "reward_spec"], [87, 1, 1, "id2", "rollout"], [87, 1, 1, "", "set_extra_state"], [87, 1, 1, "id3", "set_seed"], [87, 3, 1, "", "shape"], [87, 1, 1, "", "share_memory"], [87, 3, 1, "", "specs"], [87, 1, 1, "", "state_dict"], [87, 3, 1, "", "state_spec"], [87, 1, 1, "id4", "step"], [87, 1, 1, "", "step_and_maybe_reset"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_empty"], [87, 1, 1, "", "train"], [87, 1, 1, "", "type"], [87, 1, 1, "", "xpu"], [87, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[91, 3, 1, "", "action_key"], [91, 3, 1, "", "action_keys"], [91, 3, 1, "", "action_spec"], [91, 1, 1, "", "add_module"], [91, 1, 1, "", "add_truncated_keys"], [91, 1, 1, "", "append_transform"], [91, 1, 1, "", "apply"], [91, 1, 1, "", "auto_register_info_dict"], [91, 3, 1, "", "batch_locked"], [91, 3, 1, "", "batch_size"], [91, 1, 1, "", "bfloat16"], [91, 1, 1, "", "buffers"], [91, 1, 1, "", "children"], [91, 1, 1, "", "close"], [91, 1, 1, "", "compile"], [91, 1, 1, "", "cpu"], [91, 1, 1, "", "cuda"], [91, 3, 1, "", "done_key"], [91, 3, 1, "", "done_keys"], [91, 3, 1, "", "done_keys_groups"], [91, 3, 1, "", "done_spec"], [91, 1, 1, "", "double"], [91, 1, 1, "", "empty_cache"], [91, 1, 1, "", "eval"], [91, 1, 1, "", "extra_repr"], [91, 1, 1, "", "fake_tensordict"], [91, 1, 1, "", "float"], [91, 1, 1, "", "forward"], [91, 3, 1, "", "full_action_spec"], [91, 3, 1, "", "full_done_spec"], [91, 3, 1, "", "full_reward_spec"], [91, 3, 1, "", "full_state_spec"], [91, 1, 1, "", "get_buffer"], [91, 1, 1, "", "get_extra_state"], [91, 1, 1, "", "get_parameter"], [91, 1, 1, "", "get_submodule"], [91, 1, 1, "", "half"], [91, 3, 1, "", "input_spec"], [91, 1, 1, "", "ipu"], [91, 1, 1, "", "load_state_dict"], [91, 1, 1, "", "maybe_reset"], [91, 1, 1, "", "modules"], [91, 1, 1, "", "named_buffers"], [91, 1, 1, "", "named_children"], [91, 1, 1, "", "named_modules"], [91, 1, 1, "", "named_parameters"], [91, 3, 1, "", "observation_spec"], [91, 3, 1, "", "output_spec"], [91, 1, 1, "", "parameters"], [91, 1, 1, "", "rand_action"], [91, 1, 1, "", "rand_step"], [91, 1, 1, "", "read_action"], [91, 1, 1, "", "read_done"], [91, 1, 1, "", "read_obs"], [91, 1, 1, "", "read_reward"], [91, 1, 1, "", "register_backward_hook"], [91, 1, 1, "", "register_buffer"], [91, 1, 1, "", "register_forward_hook"], [91, 1, 1, "", "register_forward_pre_hook"], [91, 1, 1, "", "register_full_backward_hook"], [91, 1, 1, "", "register_full_backward_pre_hook"], [91, 1, 1, "", "register_gym"], [91, 1, 1, "", "register_load_state_dict_post_hook"], [91, 1, 1, "", "register_module"], [91, 1, 1, "", "register_parameter"], [91, 1, 1, "", "register_state_dict_pre_hook"], [91, 1, 1, "", "requires_grad_"], [91, 1, 1, "", "reset"], [91, 3, 1, "", "reset_keys"], [91, 3, 1, "", "reward_key"], [91, 3, 1, "", "reward_keys"], [91, 3, 1, "", "reward_spec"], [91, 1, 1, "", "rollout"], [91, 1, 1, "", "set_extra_state"], [91, 1, 1, "", "set_info_dict_reader"], [91, 1, 1, "", "set_seed"], [91, 3, 1, "", "shape"], [91, 1, 1, "", "share_memory"], [91, 3, 1, "", "specs"], [91, 1, 1, "", "state_dict"], [91, 3, 1, "", "state_spec"], [91, 1, 1, "", "step"], [91, 1, 1, "", "step_and_maybe_reset"], [91, 1, 1, "", "to"], [91, 1, 1, "", "to_empty"], [91, 1, 1, "", "train"], [91, 1, 1, "", "type"], [91, 1, 1, "", "xpu"], [91, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[107, 3, 1, "", "action_key"], [107, 3, 1, "", "action_keys"], [107, 3, 1, "", "action_spec"], [107, 1, 1, "", "add_module"], [107, 1, 1, "", "add_truncated_keys"], [107, 1, 1, "", "append_transform"], [107, 1, 1, "", "apply"], [107, 3, 1, "", "batch_locked"], [107, 3, 1, "", "batch_size"], [107, 1, 1, "", "bfloat16"], [107, 1, 1, "", "buffers"], [107, 1, 1, "", "children"], [107, 1, 1, "", "compile"], [107, 1, 1, "", "cpu"], [107, 1, 1, "", "cuda"], [107, 3, 1, "", "done_key"], [107, 3, 1, "", "done_keys"], [107, 3, 1, "", "done_keys_groups"], [107, 3, 1, "", "done_spec"], [107, 1, 1, "", "double"], [107, 1, 1, "", "empty_cache"], [107, 1, 1, "", "eval"], [107, 1, 1, "", "extra_repr"], [107, 1, 1, "", "fake_tensordict"], [107, 1, 1, "", "float"], [107, 1, 1, "", "forward"], [107, 3, 1, "", "full_action_spec"], [107, 3, 1, "", "full_done_spec"], [107, 3, 1, "", "full_reward_spec"], [107, 3, 1, "", "full_state_spec"], [107, 1, 1, "", "get_buffer"], [107, 1, 1, "", "get_extra_state"], [107, 1, 1, "", "get_parameter"], [107, 1, 1, "", "get_submodule"], [107, 1, 1, "", "half"], [107, 3, 1, "", "input_spec"], [107, 1, 1, "", "ipu"], [107, 1, 1, "", "load_state_dict"], [107, 1, 1, "", "maybe_reset"], [107, 1, 1, "", "modules"], [107, 1, 1, "", "named_buffers"], [107, 1, 1, "", "named_children"], [107, 1, 1, "", "named_modules"], [107, 1, 1, "", "named_parameters"], [107, 3, 1, "", "observation_spec"], [107, 3, 1, "", "output_spec"], [107, 1, 1, "", "parameters"], [107, 1, 1, "", "rand_action"], [107, 1, 1, "", "rand_step"], [107, 1, 1, "", "register_backward_hook"], [107, 1, 1, "", "register_buffer"], [107, 1, 1, "", "register_forward_hook"], [107, 1, 1, "", "register_forward_pre_hook"], [107, 1, 1, "", "register_full_backward_hook"], [107, 1, 1, "", "register_full_backward_pre_hook"], [107, 1, 1, "", "register_gym"], [107, 1, 1, "", "register_load_state_dict_post_hook"], [107, 1, 1, "", "register_module"], [107, 1, 1, "", "register_parameter"], [107, 1, 1, "", "register_state_dict_pre_hook"], [107, 1, 1, "", "requires_grad_"], [107, 1, 1, "", "reset"], [107, 3, 1, "", "reset_keys"], [107, 3, 1, "", "reward_key"], [107, 3, 1, "", "reward_keys"], [107, 3, 1, "", "reward_spec"], [107, 1, 1, "", "rollout"], [107, 1, 1, "", "set_extra_state"], [107, 1, 1, "", "set_seed"], [107, 3, 1, "", "shape"], [107, 1, 1, "", "share_memory"], [107, 3, 1, "", "specs"], [107, 1, 1, "", "state_dict"], [107, 3, 1, "", "state_spec"], [107, 1, 1, "", "step"], [107, 1, 1, "", "step_and_maybe_reset"], [107, 1, 1, "", "to"], [107, 1, 1, "", "to_empty"], [107, 1, 1, "", "train"], [107, 1, 1, "", "type"], [107, 1, 1, "", "update_kwargs"], [107, 1, 1, "", "xpu"], [107, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[113, 3, 1, "", "action_key"], [113, 3, 1, "", "action_keys"], [113, 3, 1, "", "action_spec"], [113, 1, 1, "", "add_module"], [113, 1, 1, "", "add_truncated_keys"], [113, 1, 1, "", "append_transform"], [113, 1, 1, "", "apply"], [113, 3, 1, "", "batch_locked"], [113, 3, 1, "", "batch_size"], [113, 1, 1, "", "bfloat16"], [113, 1, 1, "", "buffers"], [113, 1, 1, "", "children"], [113, 1, 1, "", "compile"], [113, 1, 1, "", "cpu"], [113, 1, 1, "", "cuda"], [113, 3, 1, "", "done_key"], [113, 3, 1, "", "done_keys"], [113, 3, 1, "", "done_keys_groups"], [113, 3, 1, "", "done_spec"], [113, 1, 1, "", "double"], [113, 1, 1, "", "empty_cache"], [113, 1, 1, "", "eval"], [113, 1, 1, "", "extra_repr"], [113, 1, 1, "", "fake_tensordict"], [113, 1, 1, "", "float"], [113, 1, 1, "", "forward"], [113, 3, 1, "", "full_action_spec"], [113, 3, 1, "", "full_done_spec"], [113, 3, 1, "", "full_reward_spec"], [113, 3, 1, "", "full_state_spec"], [113, 1, 1, "", "get_buffer"], [113, 1, 1, "", "get_extra_state"], [113, 1, 1, "", "get_parameter"], [113, 1, 1, "", "get_submodule"], [113, 1, 1, "", "half"], [113, 3, 1, "", "input_spec"], [113, 1, 1, "", "ipu"], [113, 1, 1, "", "load_state_dict"], [113, 1, 1, "", "maybe_reset"], [113, 1, 1, "", "modules"], [113, 1, 1, "", "named_buffers"], [113, 1, 1, "", "named_children"], [113, 1, 1, "", "named_modules"], [113, 1, 1, "", "named_parameters"], [113, 3, 1, "", "observation_spec"], [113, 3, 1, "", "output_spec"], [113, 1, 1, "", "parameters"], [113, 1, 1, "", "rand_action"], [113, 1, 1, "", "rand_step"], [113, 1, 1, "", "register_backward_hook"], [113, 1, 1, "", "register_buffer"], [113, 1, 1, "", "register_forward_hook"], [113, 1, 1, "", "register_forward_pre_hook"], [113, 1, 1, "", "register_full_backward_hook"], [113, 1, 1, "", "register_full_backward_pre_hook"], [113, 1, 1, "", "register_gym"], [113, 1, 1, "", "register_load_state_dict_post_hook"], [113, 1, 1, "", "register_module"], [113, 1, 1, "", "register_parameter"], [113, 1, 1, "", "register_state_dict_pre_hook"], [113, 1, 1, "", "requires_grad_"], [113, 1, 1, "", "reset"], [113, 3, 1, "", "reset_keys"], [113, 3, 1, "", "reward_key"], [113, 3, 1, "", "reward_keys"], [113, 3, 1, "", "reward_spec"], [113, 1, 1, "", "rollout"], [113, 1, 1, "", "set_extra_state"], [113, 1, 1, "", "set_seed"], [113, 3, 1, "", "shape"], [113, 1, 1, "", "share_memory"], [113, 3, 1, "", "specs"], [113, 1, 1, "", "state_dict"], [113, 3, 1, "", "state_spec"], [113, 1, 1, "", "step"], [113, 1, 1, "", "step_and_maybe_reset"], [113, 1, 1, "", "to"], [113, 1, 1, "", "to_empty"], [113, 1, 1, "", "train"], [113, 1, 1, "", "type"], [113, 1, 1, "", "update_kwargs"], [113, 1, 1, "", "xpu"], [113, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[118, 2, 1, "", "DreamerDecoder"], [119, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[121, 0, 1, "", "ActionMask"], [122, 0, 1, "", "AutoResetEnv"], [123, 0, 1, "", "AutoResetTransform"], [124, 0, 1, "", "BatchSizeTransform"], [125, 0, 1, "", "BinarizeReward"], [126, 0, 1, "", "BurnInTransform"], [127, 0, 1, "", "CatFrames"], [128, 0, 1, "", "CatTensors"], [129, 0, 1, "", "CenterCrop"], [130, 0, 1, "", "ClipTransform"], [131, 0, 1, "", "Compose"], [132, 0, 1, "", "DTypeCastTransform"], [133, 0, 1, "", "DeviceCastTransform"], [134, 0, 1, "", "DiscreteActionProjection"], [135, 0, 1, "", "DoubleToFloat"], [136, 0, 1, "", "EndOfLifeTransform"], [137, 0, 1, "", "ExcludeTransform"], [138, 0, 1, "", "FiniteTensorDictCheck"], [139, 0, 1, "", "FlattenObservation"], [140, 0, 1, "", "FrameSkipTransform"], [141, 0, 1, "", "GrayScale"], [142, 0, 1, "", "InitTracker"], [143, 0, 1, "", "KLRewardTransform"], [144, 0, 1, "", "NoopResetEnv"], [145, 0, 1, "", "ObservationNorm"], [146, 0, 1, "", "ObservationTransform"], [147, 0, 1, "", "PermuteTransform"], [148, 0, 1, "", "PinMemoryTransform"], [149, 0, 1, "", "R3MTransform"], [150, 0, 1, "", "RandomCropTensorDict"], [151, 0, 1, "", "RemoveEmptySpecs"], [152, 0, 1, "", "RenameTransform"], [153, 0, 1, "", "Resize"], [154, 0, 1, "", "Reward2GoTransform"], [155, 0, 1, "", "RewardClipping"], [156, 0, 1, "", "RewardScaling"], [157, 0, 1, "", "RewardSum"], [158, 0, 1, "", "SelectTransform"], [159, 0, 1, "", "SignTransform"], [160, 0, 1, "", "SqueezeTransform"], [161, 0, 1, "", "StepCounter"], [162, 0, 1, "", "TargetReturn"], [163, 0, 1, "", "TensorDictPrimer"], [164, 0, 1, "", "TimeMaxPool"], [165, 0, 1, "", "ToTensorImage"], [166, 0, 1, "", "Transform"], [167, 0, 1, "", "TransformedEnv"], [168, 0, 1, "", "UnsqueezeTransform"], [169, 0, 1, "", "VC1Transform"], [170, 0, 1, "", "VIPRewardTransform"], [171, 0, 1, "", "VIPTransform"], [172, 0, 1, "", "VecGymEnvTransform"], [173, 0, 1, "", "VecNorm"], [174, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[121, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[122, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[123, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "transform_env_batch_size"], [124, 1, 1, "", "transform_input_spec"], [124, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[125, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[126, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[127, 1, 1, "", "forward"], [127, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[129, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[130, 1, 1, "", "transform_observation_spec"], [130, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[131, 1, 1, "", "append"], [131, 1, 1, "", "forward"], [131, 1, 1, "", "insert"], [131, 1, 1, "", "to"], [131, 1, 1, "", "transform_env_batch_size"], [131, 1, 1, "", "transform_env_device"], [131, 1, 1, "", "transform_input_spec"], [131, 1, 1, "", "transform_observation_spec"], [131, 1, 1, "", "transform_output_spec"], [131, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "transform_input_spec"], [132, 1, 1, "", "transform_observation_spec"], [132, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "transform_done_spec"], [133, 1, 1, "", "transform_env_device"], [133, 1, 1, "", "transform_input_spec"], [133, 1, 1, "", "transform_observation_spec"], [133, 1, 1, "", "transform_output_spec"], [133, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[134, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "register_keys"], [136, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[137, 1, 1, "", "forward"], [137, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[138, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[141, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[145, 1, 1, "", "init_stats"], [145, 1, 1, "", "transform_input_spec"], [145, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[147, 1, 1, "", "transform_input_spec"], [147, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[148, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[149, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[150, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[151, 1, 1, "", "forward"], [151, 1, 1, "", "transform_input_spec"], [151, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[152, 1, 1, "", "forward"], [152, 1, 1, "", "transform_input_spec"], [152, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[153, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[154, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[155, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[156, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "transform_input_spec"], [157, 1, 1, "", "transform_observation_spec"], [157, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[159, 1, 1, "", "transform_observation_spec"], [159, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "transform_input_spec"], [161, 1, 1, "", "transform_observation_spec"], [161, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "transform_input_spec"], [162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "to"], [163, 1, 1, "", "transform_input_spec"], [163, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[164, 1, 1, "", "forward"], [164, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[165, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[166, 3, 1, "", "container"], [166, 1, 1, "", "forward"], [166, 3, 1, "", "parent"], [166, 1, 1, "", "to"], [166, 1, 1, "", "transform_done_spec"], [166, 1, 1, "", "transform_env_batch_size"], [166, 1, 1, "", "transform_env_device"], [166, 1, 1, "", "transform_input_spec"], [166, 1, 1, "", "transform_observation_spec"], [166, 1, 1, "", "transform_output_spec"], [166, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[167, 1, 1, "", "add_truncated_keys"], [167, 1, 1, "", "append_transform"], [167, 3, 1, "", "batch_locked"], [167, 3, 1, "", "batch_size"], [167, 1, 1, "", "empty_cache"], [167, 1, 1, "", "eval"], [167, 3, 1, "", "input_spec"], [167, 1, 1, "", "insert_transform"], [167, 1, 1, "", "load_state_dict"], [167, 3, 1, "", "output_spec"], [167, 1, 1, "", "set_missing_tolerance"], [167, 1, 1, "", "set_seed"], [167, 1, 1, "", "state_dict"], [167, 1, 1, "", "to"], [167, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[168, 1, 1, "", "transform_input_spec"], [168, 1, 1, "", "transform_observation_spec"], [168, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "make_noload_model"], [169, 1, 1, "", "to"], [169, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[171, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[172, 1, 1, "", "forward"], [172, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[173, 1, 1, "", "build_td_for_shared_vecnorm"], [173, 1, 1, "", "forward"], [173, 1, 1, "", "get_extra_state"], [173, 1, 1, "", "set_extra_state"], [173, 1, 1, "", "to_observation_norm"], [173, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.rb_transforms": [[175, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[175, 1, 1, "", "add_module"], [175, 1, 1, "", "apply"], [175, 1, 1, "", "bfloat16"], [175, 1, 1, "", "buffers"], [175, 1, 1, "", "children"], [175, 1, 1, "", "compile"], [175, 3, 1, "", "container"], [175, 1, 1, "", "cpu"], [175, 1, 1, "", "cuda"], [175, 1, 1, "", "double"], [175, 1, 1, "", "eval"], [175, 1, 1, "", "extra_repr"], [175, 1, 1, "", "float"], [175, 1, 1, "", "forward"], [175, 1, 1, "", "get_buffer"], [175, 1, 1, "", "get_extra_state"], [175, 1, 1, "", "get_parameter"], [175, 1, 1, "", "get_submodule"], [175, 1, 1, "", "half"], [175, 1, 1, "", "ipu"], [175, 1, 1, "", "load_state_dict"], [175, 1, 1, "", "modules"], [175, 3, 1, "", "n_steps"], [175, 1, 1, "", "named_buffers"], [175, 1, 1, "", "named_children"], [175, 1, 1, "", "named_modules"], [175, 1, 1, "", "named_parameters"], [175, 1, 1, "", "parameters"], [175, 3, 1, "", "parent"], [175, 1, 1, "", "register_backward_hook"], [175, 1, 1, "", "register_buffer"], [175, 1, 1, "", "register_forward_hook"], [175, 1, 1, "", "register_forward_pre_hook"], [175, 1, 1, "", "register_full_backward_hook"], [175, 1, 1, "", "register_full_backward_pre_hook"], [175, 1, 1, "", "register_load_state_dict_post_hook"], [175, 1, 1, "", "register_module"], [175, 1, 1, "", "register_parameter"], [175, 1, 1, "", "register_state_dict_pre_hook"], [175, 1, 1, "", "requires_grad_"], [175, 1, 1, "", "set_extra_state"], [175, 1, 1, "", "share_memory"], [175, 1, 1, "", "state_dict"], [175, 1, 1, "", "to"], [175, 1, 1, "", "to_empty"], [175, 1, 1, "", "train"], [175, 1, 1, "", "transform_done_spec"], [175, 1, 1, "", "transform_env_batch_size"], [175, 1, 1, "", "transform_env_device"], [175, 1, 1, "", "transform_input_spec"], [175, 1, 1, "", "transform_observation_spec"], [175, 1, 1, "", "transform_output_spec"], [175, 1, 1, "", "transform_reward_spec"], [175, 1, 1, "", "type"], [175, 1, 1, "", "xpu"], [175, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[176, 2, 1, "", "check_env_specs"], [177, 2, 1, "", "exploration_mode"], [178, 2, 1, "", "exploration_type"], [179, 2, 1, "", "get_available_libraries"], [180, 2, 1, "", "make_composite_from_td"], [181, 2, 1, "", "set_exploration_mode"], [182, 2, 1, "", "set_exploration_type"], [183, 2, 1, "", "step_mdp"], [184, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[185, 0, 1, "", "CEMPlanner"], [186, 0, 1, "", "Conv3dNet"], [187, 0, 1, "", "ConvNet"], [188, 0, 1, "", "DTActor"], [189, 0, 1, "", "DdpgCnnActor"], [190, 0, 1, "", "DdpgCnnQNet"], [191, 0, 1, "", "DdpgMlpActor"], [192, 0, 1, "", "DdpgMlpQNet"], [193, 0, 1, "", "DecisionTransformer"], [194, 0, 1, "", "Delta"], [195, 0, 1, "", "DistributionalDQNnet"], [196, 0, 1, "", "DistributionalQValueHook"], [197, 0, 1, "", "DreamerActor"], [198, 0, 1, "", "DuelingCnnDQNet"], [199, 0, 1, "", "GRU"], [200, 0, 1, "", "GRUCell"], [201, 0, 1, "", "GRUModule"], [202, 0, 1, "", "IndependentNormal"], [203, 0, 1, "", "LSTM"], [204, 0, 1, "", "LSTMCell"], [205, 0, 1, "", "LSTMModule"], [206, 0, 1, "", "MLP"], [207, 0, 1, "", "MPCPlannerBase"], [208, 0, 1, "", "MPPIPlanner"], [209, 0, 1, "", "MaskedCategorical"], [210, 0, 1, "", "MaskedOneHotCategorical"], [211, 0, 1, "", "MultiAgentConvNet"], [212, 0, 1, "", "MultiAgentMLP"], [213, 0, 1, "", "NoisyLazyLinear"], [214, 0, 1, "", "NoisyLinear"], [215, 0, 1, "", "NormalParamWrapper"], [216, 0, 1, "", "ObsDecoder"], [217, 0, 1, "", "ObsEncoder"], [218, 0, 1, "", "OneHotCategorical"], [219, 0, 1, "", "OnlineDTActor"], [220, 0, 1, "", "QMixer"], [221, 0, 1, "", "QValueHook"], [222, 0, 1, "", "RSSMPosterior"], [223, 0, 1, "", "RSSMPrior"], [224, 0, 1, "", "Squeeze2dLayer"], [225, 0, 1, "", "SqueezeLayer"], [226, 0, 1, "", "TanhDelta"], [227, 0, 1, "", "TanhNormal"], [228, 0, 1, "", "TruncatedNormal"], [229, 0, 1, "", "VDNMixer"], [230, 0, 1, "", "VmapModule"], [231, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[185, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[186, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[187, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[188, 1, 1, "", "default_config"], [188, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[189, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[190, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[191, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[192, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[193, 0, 1, "", "DTConfig"], [193, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[194, 1, 1, "", "log_prob"], [194, 3, 1, "", "mean"], [194, 3, 1, "", "mode"], [194, 1, 1, "", "rsample"], [194, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[195, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[197, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[198, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[199, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[200, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[201, 1, 1, "", "forward"], [201, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[202, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[203, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[204, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[205, 1, 1, "", "forward"], [205, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.MLP": [[206, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[208, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[209, 1, 1, "", "log_prob"], [209, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[210, 1, 1, "", "log_prob"], [210, 1, 1, "", "rsample"], [210, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[213, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[215, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[216, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[217, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[218, 1, 1, "", "log_prob"], [218, 3, 1, "", "mode"], [218, 1, 1, "", "rsample"], [218, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[219, 1, 1, "", "default_config"], [219, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[220, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[222, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[223, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[225, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[226, 3, 1, "", "mean"], [226, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[227, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[228, 1, 1, "", "log_prob"], [228, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[229, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[230, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[232, 0, 1, "", "Actor"], [233, 0, 1, "", "ActorCriticOperator"], [234, 0, 1, "", "ActorCriticWrapper"], [235, 0, 1, "", "ActorValueOperator"], [236, 0, 1, "", "AdditiveGaussianWrapper"], [237, 0, 1, "", "DecisionTransformerInferenceWrapper"], [238, 0, 1, "", "DistributionalQValueActor"], [239, 0, 1, "", "DistributionalQValueModule"], [240, 0, 1, "", "EGreedyModule"], [241, 0, 1, "", "EGreedyWrapper"], [242, 0, 1, "", "LMHeadActorValueOperator"], [243, 0, 1, "", "MultiStepActorWrapper"], [244, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [245, 0, 1, "", "ProbabilisticActor"], [246, 0, 1, "", "QValueActor"], [247, 0, 1, "", "QValueModule"], [248, 0, 1, "", "SafeModule"], [249, 0, 1, "", "SafeProbabilisticModule"], [250, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [251, 0, 1, "", "SafeSequential"], [252, 0, 1, "", "TanhModule"], [253, 0, 1, "", "ValueOperator"], [254, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[233, 1, 1, "", "get_critic_operator"], [233, 1, 1, "", "get_policy_head"], [233, 1, 1, "", "get_value_head"], [233, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[234, 1, 1, "", "get_policy_head"], [234, 1, 1, "", "get_policy_operator"], [234, 1, 1, "", "get_value_head"], [234, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[235, 1, 1, "", "get_policy_head"], [235, 1, 1, "", "get_policy_operator"], [235, 1, 1, "", "get_value_head"], [235, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "mask_context"], [237, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[239, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[243, 1, 1, "", "forward"], [243, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[247, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[248, 1, 1, "", "random"], [248, 1, 1, "", "random_sample"], [248, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[249, 1, 1, "", "random"], [249, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[252, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[254, 1, 1, "", "get_reward_operator"], [254, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[255, 0, 1, "", "biased_softplus"], [256, 0, 1, "", "inv_softplus"], [257, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[255, 1, 1, "", "forward"]], "torchrl.objectives": [[258, 0, 1, "", "A2CLoss"], [259, 0, 1, "", "CQLLoss"], [260, 0, 1, "", "ClipPPOLoss"], [261, 0, 1, "", "DDPGLoss"], [262, 0, 1, "", "DQNLoss"], [263, 0, 1, "", "DTLoss"], [264, 0, 1, "", "DiscreteCQLLoss"], [265, 0, 1, "", "DiscreteIQLLoss"], [266, 0, 1, "", "DiscreteSACLoss"], [267, 0, 1, "", "DistributionalDQNLoss"], [268, 0, 1, "", "DreamerActorLoss"], [269, 0, 1, "", "DreamerModelLoss"], [270, 0, 1, "", "DreamerValueLoss"], [271, 0, 1, "", "HardUpdate"], [272, 0, 1, "", "IQLLoss"], [273, 0, 1, "", "KLPENPPOLoss"], [274, 0, 1, "", "LossModule"], [275, 0, 1, "", "OnlineDTLoss"], [276, 0, 1, "", "PPOLoss"], [277, 0, 1, "", "REDQLoss"], [278, 0, 1, "", "ReinforceLoss"], [279, 0, 1, "", "SACLoss"], [280, 0, 1, "", "SoftUpdate"], [281, 0, 1, "", "TD3Loss"], [282, 0, 1, "", "ValueEstimators"], [283, 0, 1, "", "default_value_kwargs"], [284, 0, 1, "", "distance_loss"], [285, 0, 1, "", "hold_out_net"], [286, 0, 1, "", "hold_out_params"], [288, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[260, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[263, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[265, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[269, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[270, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "loss_value_diff"], [272, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[273, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[274, 1, 1, "", "convert_to_functional"], [274, 1, 1, "", "forward"], [274, 1, 1, "", "make_value_estimator"], [274, 1, 1, "", "named_parameters"], [274, 1, 1, "", "parameters"], [274, 1, 1, "", "set_keys"], [274, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[275, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "load_state_dict"], [279, 1, 1, "", "make_value_estimator"], [279, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[287, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[287, 1, 1, "", "forward"], [287, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[289, 0, 1, "", "GAE"], [290, 0, 1, "", "TD0Estimator"], [291, 0, 1, "", "TD1Estimator"], [292, 0, 1, "", "TDLambdaEstimator"], [293, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[289, 1, 1, "", "forward"], [289, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[290, 1, 1, "", "forward"], [290, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[292, 1, 1, "", "forward"], [292, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[293, 1, 1, "", "forward"], [293, 1, 1, "", "set_keys"], [293, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[294, 0, 1, "", "generalized_advantage_estimate"], [295, 0, 1, "", "reward2go"], [296, 0, 1, "", "td0_advantage_estimate"], [297, 0, 1, "", "td0_return_estimate"], [298, 0, 1, "", "td1_advantage_estimate"], [299, 0, 1, "", "td1_return_estimate"], [300, 0, 1, "", "td_lambda_advantage_estimate"], [301, 0, 1, "", "td_lambda_return_estimate"], [302, 0, 1, "", "vec_generalized_advantage_estimate"], [303, 0, 1, "", "vec_td1_advantage_estimate"], [304, 0, 1, "", "vec_td1_return_estimate"], [305, 0, 1, "", "vec_td_lambda_advantage_estimate"], [306, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[307, 2, 1, "", "PixelRenderTransform"], [308, 2, 1, "", "TensorDictRecorder"], [309, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[310, 2, 1, "", "Logger"], [312, 2, 1, "", "generate_exp_name"], [313, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[311, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[314, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[315, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[316, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[317, 0, 1, "", "BatchSubSampler"], [318, 0, 1, "", "ClearCudaCache"], [319, 0, 1, "", "CountFramesLog"], [320, 0, 1, "", "LogReward"], [321, 0, 1, "", "OptimizerHook"], [322, 0, 1, "", "Recorder"], [323, 0, 1, "", "ReplayBufferTrainer"], [324, 0, 1, "", "RewardNormalizer"], [325, 0, 1, "", "SelectKeys"], [326, 0, 1, "", "Trainer"], [327, 0, 1, "", "TrainerHookBase"], [328, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[317, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[318, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[319, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[320, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[321, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[322, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[323, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[324, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[325, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[327, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[328, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[329, 2, 1, "", "correct_for_frame_skip"], [330, 2, 1, "", "get_stats_random_rollout"], [331, 2, 1, "", "make_collector_offpolicy"], [332, 2, 1, "", "make_collector_onpolicy"], [333, 2, 1, "", "make_dqn_loss"], [334, 2, 1, "", "make_replay_buffer"], [335, 2, 1, "", "make_target_updater"], [336, 2, 1, "", "make_trainer"], [337, 2, 1, "", "parallel_env_constructor"], [338, 2, 1, "", "sync_async_collector"], [339, 2, 1, "", "sync_sync_collector"], [340, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 344, 345, 346, 347, 349, 350, 351, 354, 361, 362, 363, 367, 368], "instal": [0, 6, 7, 367], "get": [0, 353, 354, 355, 356, 357, 358], "start": [0, 353, 354, 355, 356, 357, 358], "tutori": [0, 351, 361, 362], "basic": [0, 365], "intermedi": [0, 8], "advanc": 0, "refer": [0, 342], "knowledg": [0, 343], "base": [0, 2, 7, 343], "indic": 0, "tabl": 0, "collector": [1, 349, 350, 351, 352, 356, 358, 361, 362, 367], "packag": [1, 2, 3, 344, 345, 346, 347], "batch": [1, 349, 363, 365], "size": [1, 349, 365], "replai": [1, 2, 349, 350, 351, 352, 356, 358, 361, 362, 365, 367], "buffer": [1, 2, 349, 350, 351, 352, 356, 358, 361, 362, 365, 367], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 349, 350, 351, 356, 358, 361, 362, 367], "distribut": [1, 344], "helper": [1, 3], "function": [1, 4, 345, 350, 351, 355, 361, 362, 367], "compos": [2, 131], "support": 2, "type": 2, "choos": 2, "storag": [2, 76, 349, 356, 365], "sampl": [2, 365], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 350, 365], "trajectori": [2, 365], "checkpoint": [2, 346], "episod": [2, 4], "format": 2, "ted": [2, 353], "The": [2, 349], "rational": 2, "behind": 2, "structur": [2, 365], "dimension": [2, 4], "tensordict": [2, 344, 365, 367], "special": [2, 354, 367], "case": 2, "footnot": 2, "multi": [2, 3, 344, 345, 360, 361, 362], "agent": [2, 3, 4, 344, 345, 361, 362], "present": 2, "memori": 2, "polici": [2, 4, 349, 351, 352, 354, 358, 360, 361, 362, 363], "rnn": 2, "transform": [2, 3, 166, 349, 351, 353, 361, 362, 363, 365, 367, 368], "step": [2, 349, 351, 353, 356, 361, 362, 365, 368], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 345, 351, 361, 362], "learn": [2, 4, 351, 361, 362], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 344, 345, 346, 361], "env": [3, 363, 367, 368], "vector": [3, 367], "environ": [3, 4, 6, 7, 349, 350, 351, 352, 353, 358, 360, 361, 362, 363, 367, 368], "auto": 3, "reset": [3, 363, 368], "clone": [3, 7], "mask": 3, "action": [3, 4, 352, 363], "record": [3, 322, 346, 349, 357], "video": [3, 357], "domain": [3, 344], "specif": [3, 344, 360], "librari": [3, 367], "thing": [4, 349, 363], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 353, 355, 367], "gener": [4, 344], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 349, 358, 363], "algorithm": [4, 344], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 349, 350, 355, 358], "return": [4, 345], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 367], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 360], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 349, 350, 351], "standard": 4, "explor": [4, 344, 349, 350, 354], "valu": [4, 344, 345, 349, 351, 352, 354], "loss": [4, 349, 350, 351, 352, 358, 361, 362], "earli": 4, "train": [4, 8, 345, 349, 351, 352, 355, 358, 361, 362, 363], "roughli": 4, "uniformli": 4, "random": [4, 361, 362], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 350], "increas": 4, "an": [4, 351, 352, 353, 363], "dynam": [4, 365], "can": 4, "low": 4, "forward": [4, 349], "model": [4, 344, 349, 350, 352, 355, 364, 367], "also": 4, "us": [4, 6, 9, 352, 364, 365, 367], "offlin": 4, "observ": [4, 349], "space": 4, "effect": [4, 363], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 368], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 349], "render": [7, 358, 361, 362, 368], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 349], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 363], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "raycollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "binarydiscretetensorspec": 23, "boundedtensorspec": 24, "compositespec": 25, "discretetensorspec": 26, "lazystackedcompositespec": 27, "lazystackedtensorspec": 28, "multidiscretetensorspec": 29, "multionehotdiscretetensorspec": 30, "multistep": 31, "nontensorspec": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "ataridqnexperiencereplai": 52, "basedatasetexperiencereplai": 53, "d4rlexperiencereplai": 54, "gendgrlexperiencereplai": 55, "minariexperiencereplai": 56, "openmlexperiencereplai": 57, "openxexperiencereplai": 58, "robosetexperiencereplai": 59, "vd4rlexperiencereplai": 60, "get_dataload": 61, "immutabledatasetwrit": 62, "lazymemmapstorag": 63, "lazytensorstorag": 64, "liststorag": 65, "prioritizedsampl": 66, "prioritizedslicesampl": 67, "randomsampl": 68, "replaybufferensembl": 69, "roundrobinwrit": 70, "sampler": 71, "samplerensembl": 72, "samplerwithoutreplac": 73, "slicesampl": 74, "slicesamplerwithoutreplac": 75, "storageensembl": 77, "tensordictmaxvaluewrit": 78, "tensordictroundrobinwrit": 79, "tensorstorag": 80, "writer": 81, "writerensembl": 82, "braxenv": 83, "braxwrapp": 84, "dmcontrolenv": 85, "dmcontrolwrapp": 86, "envbas": [87, 363], "envcreat": 88, "envmetadata": 89, "gymenv": 90, "gymlikeenv": 91, "gymwrapp": 92, "habitatenv": 93, "isaacgymenv": 94, "isaacgymwrapp": 95, "jumanjienv": 96, "jumanjiwrapp": 97, "mogymenv": 98, "mogymwrapp": 99, "marlgroupmaptyp": 100, "meltingpotenv": 101, "meltingpotwrapp": 102, "modelbasedenvbas": 103, "multithreadedenv": 104, "multithreadedenvwrapp": 105, "openmlenv": 106, "parallelenv": 107, "pettingzooenv": 108, "pettingzoowrapp": 109, "robohiveenv": 110, "smacv2env": 111, "smacv2wrapp": 112, "serialenv": 113, "vmasenv": 114, "vmaswrapp": 115, "check_marl_group": 116, "gym_backend": 117, "dreamerdecod": 118, "dreamerenv": 119, "set_gym_backend": 120, "actionmask": 121, "autoresetenv": 122, "autoresettransform": 123, "batchsizetransform": 124, "binarizereward": 125, "burnintransform": 126, "catfram": [127, 365], "cattensor": 128, "centercrop": 129, "cliptransform": 130, "dtypecasttransform": 132, "devicecasttransform": 133, "discreteactionproject": 134, "doubletofloat": 135, "endoflifetransform": 136, "excludetransform": 137, "finitetensordictcheck": 138, "flattenobserv": 139, "frameskiptransform": 140, "grayscal": 141, "inittrack": 142, "klrewardtransform": 143, "noopresetenv": 144, "observationnorm": 145, "observationtransform": 146, "permutetransform": 147, "pinmemorytransform": 148, "r3mtransform": 149, "randomcroptensordict": 150, "removeemptyspec": 151, "renametransform": 152, "resiz": 153, "reward2gotransform": 154, "rewardclip": 155, "rewardsc": 156, "rewardsum": 157, "selecttransform": 158, "signtransform": 159, "squeezetransform": 160, "stepcount": 161, "targetreturn": 162, "tensordictprim": 163, "timemaxpool": 164, "totensorimag": 165, "transformedenv": 167, "unsqueezetransform": 168, "vc1transform": 169, "viprewardtransform": 170, "viptransform": 171, "vecgymenvtransform": 172, "vecnorm": [173, 368], "gsdenois": 174, "multisteptransform": 175, "check_env_spec": 176, "exploration_mod": 177, "exploration_typ": 178, "get_available_librari": 179, "make_composite_from_td": 180, "set_exploration_mod": 181, "set_exploration_typ": 182, "step_mdp": 183, "terminated_or_trunc": 184, "cemplann": 185, "conv3dnet": 186, "convnet": 187, "dtactor": 188, "ddpgcnnactor": 189, "ddpgcnnqnet": 190, "ddpgmlpactor": 191, "ddpgmlpqnet": 192, "decisiontransform": 193, "delta": 194, "distributionaldqnnet": 195, "distributionalqvaluehook": 196, "dreameractor": 197, "duelingcnndqnet": 198, "gru": 199, "grucel": 200, "grumodul": 201, "independentnorm": 202, "lstm": [203, 352], "lstmcell": 204, "lstmmodul": 205, "mlp": [206, 352], "mpcplannerbas": 207, "mppiplann": 208, "maskedcategor": 209, "maskedonehotcategor": 210, "multiagentconvnet": 211, "multiagentmlp": 212, "noisylazylinear": 213, "noisylinear": 214, "normalparamwrapp": 215, "obsdecod": 216, "obsencod": 217, "onehotcategor": 218, "onlinedtactor": 219, "qmixer": [220, 345], "qvaluehook": 221, "rssmposterior": 222, "rssmprior": 223, "squeeze2dlay": 224, "squeezelay": 225, "tanhdelta": 226, "tanhnorm": 227, "truncatednorm": 228, "vdnmixer": 229, "vmapmodul": 230, "reset_nois": 231, "actor": [232, 344, 349, 354], "actorcriticoper": 233, "actorcriticwrapp": 234, "actorvalueoper": 235, "additivegaussianwrapp": 236, "decisiontransformerinferencewrapp": 237, "distributionalqvalueactor": 238, "distributionalqvaluemodul": 239, "egreedymodul": 240, "egreedywrapp": 241, "lmheadactorvalueoper": 242, "multistepactorwrapp": 243, "ornsteinuhlenbeckprocesswrapp": 244, "probabilisticactor": 245, "qvalueactor": 246, "qvaluemodul": 247, "safemodul": [248, 344], "safeprobabilisticmodul": 249, "safeprobabilistictensordictsequenti": 250, "safesequenti": 251, "tanhmodul": 252, "valueoper": 253, "worldmodelwrapp": 254, "biased_softplu": 255, "inv_softplu": 256, "map": [257, 361], "a2closs": 258, "cqlloss": 259, "clipppoloss": 260, "ddpgloss": 261, "dqnloss": 262, "dtloss": 263, "discretecqlloss": 264, "discreteiqlloss": 265, "discretesacloss": 266, "distributionaldqnloss": 267, "dreameractorloss": 268, "dreamermodelloss": 269, "dreamervalueloss": 270, "hardupd": 271, "iqlloss": 272, "klpenppoloss": 273, "lossmodul": [274, 349, 355], "onlinedtloss": 275, "ppoloss": 276, "redqloss": 277, "reinforceloss": 278, "sacloss": 279, "softupd": 280, "td3loss": 281, "valueestim": 282, "default_value_kwarg": 283, "distance_loss": 284, "hold_out_net": 285, "hold_out_param": 286, "qmixerloss": 287, "next_state_valu": 288, "gae": 289, "td0estim": 290, "td1estim": 291, "tdlambdaestim": 292, "valueestimatorbas": 293, "generalized_advantage_estim": 294, "reward2go": 295, "td0_advantage_estim": 296, "td0_return_estim": 297, "td1_advantage_estim": 298, "td1_return_estim": 299, "td_lambda_advantage_estim": 300, "td_lambda_return_estim": 301, "vec_generalized_advantage_estim": 302, "vec_td1_advantage_estim": 303, "vec_td1_return_estim": 304, "vec_td_lambda_advantage_estim": 305, "vec_td_lambda_return_estim": 306, "pixelrendertransform": 307, "tensordictrecord": 308, "videorecord": 309, "logger": [310, 346, 357, 358], "csvlogger": 311, "generate_exp_nam": 312, "get_logg": 313, "mlflowlogg": 314, "tensorboardlogg": 315, "wandblogg": 316, "batchsubsampl": 317, "clearcudacach": 318, "countframeslog": 319, "logreward": 320, "optimizerhook": 321, "replaybuffertrain": 323, "rewardnorm": 324, "selectkei": 325, "trainer": [326, 346, 350], "trainerhookbas": 327, "updateweight": 328, "correct_for_frame_skip": 329, "get_stats_random_rollout": 330, "make_collector_offpolici": 331, "make_collector_onpolici": 332, "make_dqn_loss": 333, "make_replay_buff": 334, "make_target_updat": 335, "make_train": 336, "parallel_env_constructor": 337, "sync_async_collector": 338, "sync_sync_collector": 339, "transformed_env_constructor": 340, "readm": [341, 359], "tuto": [341, 359], "api": 342, "contribut": [343, 367], "content": 343, "modul": [344, 349, 352, 354, 358, 367], "tensordictmodul": [344, 354, 367], "wrapper": [344, 354], "probabilist": [344, 354], "q": [344, 350, 352, 354], "oper": 344, "join": 344, "hook": [344, 346, 350], "regular": 344, "planner": 344, "object": [345, 349, 355, 367], "dqn": [345, 350, 352], "ddpg": [345, 349, 361], "sac": 345, "redq": 345, "iql": 345, "cql": 345, "dt": 345, "td3": 345, "ppo": [345, 351, 362], "a2c": 345, "dreamer": 345, "builder": 346, "_util": 347, "comput": [348, 350, 363, 366], "time": [348, 349, 366], "code": [349, 363], "overview": [349, 352], "setup": [349, 352], "__init__": 349, "method": 349, "estim": 349, "put": 349, "togeth": [349, 363], "call": 349, "parallel": [349, 360, 368], "execut": [349, 360, 363], "stat": 349, "build": [349, 350, 358, 365], "evalu": 349, "construct": 349, "target": [349, 350, 355], "network": [349, 350, 351, 352, 354, 361, 362], "updat": 349, "experi": [349, 363], "result": [349, 351, 361, 362], "conclus": [349, 350, 351, 352, 361, 362, 363, 365], "next": [349, 351, 353, 356, 361, 362, 365], "A": [350, 365], "exampl": [350, 365], "deep": 350, "collect": [350, 351, 356], "paramet": [350, 351, 355], "hyperparamet": [350, 351, 361, 362], "regist": 350, "possibl": 350, "improv": 350, "defin": [351, 361, 362], "loop": [351, 352, 358, 361, 362, 363], "recurr": 352, "convolut": 352, "select": 352, "further": [352, 355], "read": 352, "creat": 353, "run": [353, 368], "rollout": [353, 360, 361, 362, 363, 368], "s": [354, 355], "output": 355, "consider": 355, "log": 357, "own": 358, "first": 358, "design": 358, "divers": 360, "competit": 361, "group": 361, "critic": [361, 362], "pendulum": 363, "write": 363, "_step": 363, "simul": 363, "_reset": 363, "metadata": 363, "_spec": 363, "spec": [363, 368], "shape": 363, "seed": [363, 368], "wrap": 363, "class": [363, 367], "test": 363, "our": 363, "custom": [363, 365], "simpl": 363, "pretrain": 364, "vanilla": 365, "integr": 365, "tensorclass": 365, "other": 365, "tensor": 365, "pytre": 365, "iter": 365, "over": 365, "fix": 365, "priorit": 365, "save": 365, "raw": 365, "imag": 365, "more": 365, "complex": 365, "introduct": 367, "config": 367, "sequenc": 367, "program": 367, "ensembl": 367, "meta": 367, "state": 367, "frame_skip": 368, "deepmind": 368, "control": 368, "devic": 368, "close": 368, "access": 368, "attribut": 368, "kwarg": 368}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})